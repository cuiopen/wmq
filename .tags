!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
APHash	.\src\common\hash.c	/^unsigned int APHash(const char *str)$/;"	f
AR	.\env.mk	/^AR  = $(CROSS_COMPILE)ar$/;"	m
Align	.\src\tools\lzma\LzmaDec.c	102;"	d	file:
Alloc	.\src\tools\lzma\Types.h	/^  void *(*Alloc)(void *p, size_t size);$/;"	m	struct:__anon45
AllocRefs	.\src\tools\lzma\LzFind.c	/^static CLzRef* AllocRefs(UInt32 num, ISzAlloc *alloc)$/;"	f	file:
BKDRHash	.\src\common\hash.c	/^unsigned int BKDRHash(const char *str)$/;"	f
BSR2_RET	.\src\tools\lzma\LzmaEnc.c	122;"	d	file:
BSR2_RET	.\src\tools\lzma\LzmaEnc.c	91;"	d	file:
BUF_SIZE	.\lib\error\error_functions.c	36;"	d	file:
Backward	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 Backward(CLzmaEnc *p, UInt32 *backRes, UInt32 cur)$/;"	f	file:
BigAlloc	.\src\tools\lzma\Alloc.c	/^void *BigAlloc(size_t size)$/;"	f
BigAlloc	.\src\tools\lzma\Alloc.h	29;"	d
BigFree	.\src\tools\lzma\Alloc.c	/^void BigFree(void *address)$/;"	f
BigFree	.\src\tools\lzma\Alloc.h	30;"	d
Bool	.\src\tools\lzma\Types.h	/^typedef int Bool;$/;"	t
Boolean	.\lib\error\error_functions.c	/^typedef enum {FALSE ,TRUE} Boolean;$/;"	t	typeref:enum:__anon1	file:
Bt2_MatchFinder_GetMatches	.\src\tools\lzma\LzFind.c	/^static UInt32 Bt2_MatchFinder_GetMatches(CMatchFinder *p, UInt32 *distances)$/;"	f	file:
Bt2_MatchFinder_Skip	.\src\tools\lzma\LzFind.c	/^static void Bt2_MatchFinder_Skip(CMatchFinder *p, UInt32 num)$/;"	f	file:
Bt3Zip_MatchFinder_GetMatches	.\src\tools\lzma\LzFind.c	/^UInt32 Bt3Zip_MatchFinder_GetMatches(CMatchFinder *p, UInt32 *distances)$/;"	f
Bt3Zip_MatchFinder_Skip	.\src\tools\lzma\LzFind.c	/^void Bt3Zip_MatchFinder_Skip(CMatchFinder *p, UInt32 num)$/;"	f
Bt3_MatchFinder_GetMatches	.\src\tools\lzma\LzFind.c	/^static UInt32 Bt3_MatchFinder_GetMatches(CMatchFinder *p, UInt32 *distances)$/;"	f	file:
Bt3_MatchFinder_Skip	.\src\tools\lzma\LzFind.c	/^static void Bt3_MatchFinder_Skip(CMatchFinder *p, UInt32 num)$/;"	f	file:
Bt4_MatchFinder_GetMatches	.\src\tools\lzma\LzFind.c	/^static UInt32 Bt4_MatchFinder_GetMatches(CMatchFinder *p, UInt32 *distances)$/;"	f	file:
Bt4_MatchFinder_Skip	.\src\tools\lzma\LzFind.c	/^static void Bt4_MatchFinder_Skip(CMatchFinder *p, UInt32 num)$/;"	f	file:
Bucket	.\lib\hashtable\hashtable.h	/^} Bucket;$/;"	t	typeref:struct:_bucket
Byte	.\inc\zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	.\inc\zconf.h	50;"	d
Byte	.\src\tools\lzma\Types.h	/^typedef unsigned char Byte;$/;"	t
Bytef	.\inc\zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	.\inc\zconf.h	268;"	d
Bytef	.\inc\zconf.h	53;"	d
CC	.\env.mk	/^CC  = $(CROSS_COMPILE)gcc$/;"	m
CFLAGS	.\env.mk	/^CFLAGS  := $(INCLUDE_DIR)$/;"	m
CFileInStream	.\src\tools\lzma\7zFile.h	/^} CFileInStream;$/;"	t	typeref:struct:__anon21
CFileOutStream	.\src\tools\lzma\7zFile.h	/^} CFileOutStream;$/;"	t	typeref:struct:__anon22
CFileSeqInStream	.\src\tools\lzma\7zFile.h	/^} CFileSeqInStream;$/;"	t	typeref:struct:__anon20
CHAR_PATH_SEPARATOR	.\src\tools\lzma\Types.h	238;"	d
CHAR_PATH_SEPARATOR	.\src\tools\lzma\Types.h	245;"	d
CIRCLEQ_EMPTY	.\inc\queue.h	404;"	d
CIRCLEQ_END	.\inc\queue.h	401;"	d
CIRCLEQ_ENTRY	.\inc\queue.h	390;"	d
CIRCLEQ_FIRST	.\inc\queue.h	399;"	d
CIRCLEQ_FOREACH	.\inc\queue.h	407;"	d
CIRCLEQ_FOREACH_REVERSE	.\inc\queue.h	412;"	d
CIRCLEQ_HEAD	.\inc\queue.h	381;"	d
CIRCLEQ_HEAD_INITIALIZER	.\inc\queue.h	387;"	d
CIRCLEQ_INIT	.\inc\queue.h	420;"	d
CIRCLEQ_INSERT_AFTER	.\inc\queue.h	425;"	d
CIRCLEQ_INSERT_BEFORE	.\inc\queue.h	435;"	d
CIRCLEQ_INSERT_HEAD	.\inc\queue.h	445;"	d
CIRCLEQ_INSERT_TAIL	.\inc\queue.h	455;"	d
CIRCLEQ_LAST	.\inc\queue.h	400;"	d
CIRCLEQ_NEXT	.\inc\queue.h	402;"	d
CIRCLEQ_PREV	.\inc\queue.h	403;"	d
CIRCLEQ_REMOVE	.\inc\queue.h	465;"	d
CIRCLEQ_REPLACE	.\inc\queue.h	478;"	d
CLenEnc	.\src\tools\lzma\LzmaEnc.c	/^} CLenEnc;$/;"	t	typeref:struct:__anon28	file:
CLenPriceEnc	.\src\tools\lzma\LzmaEnc.c	/^} CLenPriceEnc;$/;"	t	typeref:struct:__anon29	file:
CLookToRead	.\src\tools\lzma\Types.h	/^} CLookToRead;$/;"	t	typeref:struct:__anon41
CLzRef	.\src\tools\lzma\LzFind.h	/^typedef UInt32 CLzRef;$/;"	t
CLzmaDec	.\src\tools\lzma\LzmaDec.h	/^} CLzmaDec;$/;"	t	typeref:struct:__anon24
CLzmaEnc	.\src\tools\lzma\LzmaEnc.c	/^} CLzmaEnc;$/;"	t	typeref:struct:__anon32	file:
CLzmaEncHandle	.\src\tools\lzma\LzmaEnc.h	/^typedef void * CLzmaEncHandle;$/;"	t
CLzmaEncProps	.\src\tools\lzma\LzmaEnc.h	/^} CLzmaEncProps;$/;"	t	typeref:struct:_CLzmaEncProps
CLzmaProb	.\src\tools\lzma\LzmaDec.h	18;"	d
CLzmaProb	.\src\tools\lzma\LzmaDec.h	20;"	d
CLzmaProb	.\src\tools\lzma\LzmaEnc.c	180;"	d	file:
CLzmaProb	.\src\tools\lzma\LzmaEnc.c	182;"	d	file:
CLzmaProps	.\src\tools\lzma\LzmaDec.h	/^} CLzmaProps;$/;"	t	typeref:struct:_CLzmaProps
CMatchFinder	.\src\tools\lzma\LzFind.h	/^} CMatchFinder;$/;"	t	typeref:struct:_CMatchFinder
CODE_GZIP	.\src\server\socket_pkg.h	22;"	d
CODE_JSON	.\src\server\socket_pkg.h	23;"	d
CODE_NATIVE	.\src\server\socket_pkg.h	25;"	d
CODE_PROTOBUF	.\src\server\socket_pkg.h	24;"	d
CONF	.\src\common\config.c	/^system_conf_t CONF;$/;"	v
CONNECT_TO_BUCKET_DLLIST	.\lib\hashtable\hashtable.c	18;"	d	file:
CONNECT_TO_GLOBAL_DLLIST	.\lib\hashtable\hashtable.c	38;"	d	file:
COptimal	.\src\tools\lzma\LzmaEnc.c	/^} COptimal;$/;"	t	typeref:struct:__anon27	file:
CROSS_COMPILE	.\env.mk	/^CROSS_COMPILE =$/;"	m
CRangeEnc	.\src\tools\lzma\LzmaEnc.c	/^} CRangeEnc;$/;"	t	typeref:struct:__anon30	file:
CSaveState	.\src\tools\lzma\LzmaEnc.c	/^} CSaveState;$/;"	t	typeref:struct:__anon31	file:
CSecToLook	.\src\tools\lzma\Types.h	/^} CSecToLook;$/;"	t	typeref:struct:__anon42
CSecToRead	.\src\tools\lzma\Types.h	/^} CSecToRead;$/;"	t	typeref:struct:__anon43
CSeqOutStreamBuf	.\src\tools\lzma\LzmaEnc.c	/^} CSeqOutStreamBuf;$/;"	t	typeref:struct:__anon33	file:
CState	.\src\tools\lzma\LzmaEnc.c	/^typedef unsigned CState;$/;"	t	file:
CSzFile	.\src\tools\lzma\7zFile.h	/^} CSzFile;$/;"	t	typeref:struct:__anon19
CXX	.\env.mk	/^CXX = $(CROSS_COMPILE)g++$/;"	m
ChangePair	.\src\tools\lzma\LzmaEnc.c	1490;"	d	file:
CheckErrors	.\src\tools\lzma\LzmaEnc.c	/^static SRes CheckErrors(CLzmaEnc *p)$/;"	f	file:
Config	.\src\tools\config.cpp	/^Config :: Config() {$/;"	f	class:phxrpc::Config
Config	.\src\tools\config.h	/^class Config {$/;"	c	namespace:phxrpc
Count	.\src\tools\opt_map.cpp	/^size_t OptMap::Count(char c) const {$/;"	f	class:phxrpc::OptMap
DATA_BUFF_SIZE	.\src\common\common_define.h	11;"	d
DATA_BUFF_SIZE	.\src\server\message.h	16;"	d
DECONNECT_FROM_BUCKET_DLLIST	.\lib\hashtable\hashtable.c	26;"	d	file:
DECONNECT_FROM_GLOBAL_DLLIST	.\lib\hashtable\hashtable.c	53;"	d	file:
DEFAULT_MESSAGE_QUEUE_NUM	.\src\server\server_util.h	27;"	d
DEFAULT_TASK_QUEUE_NUM	.\src\server\server_util.h	25;"	d
DEFAULT_THREAD_NUM	.\src\server\server_util.h	24;"	d
DEFINE	.\env.mk	/^DEFINE := -D_7ZIP_ST$/;"	m
DJBhash	.\src\common\hash.c	/^unsigned int DJBhash(const char *str)$/;"	f
DUMMY_ERROR	.\src\tools\lzma\LzmaDec.c	/^  DUMMY_ERROR, \/* unexpected end of input stream *\/$/;"	e	enum:__anon23	file:
DUMMY_LIT	.\src\tools\lzma\LzmaDec.c	/^  DUMMY_LIT,$/;"	e	enum:__anon23	file:
DUMMY_MATCH	.\src\tools\lzma\LzmaDec.c	/^  DUMMY_MATCH,$/;"	e	enum:__anon23	file:
DUMMY_REP	.\src\tools\lzma\LzmaDec.c	/^  DUMMY_REP$/;"	e	enum:__anon23	file:
Decode	.\src\common\md5.c	/^Decode(UINT4          *output, unsigned char  *input, unsigned int    len)$/;"	f	file:
Decode	.\src\tools\lzma\LzmaUtil.c	/^static SRes Decode(ISeqOutStream *outStream, ISeqInStream *inStream)$/;"	f	file:
Decode2	.\src\tools\lzma\LzmaUtil.c	/^static SRes Decode2(CLzmaDec *state, ISeqOutStream *outStream, ISeqInStream *inStream,$/;"	f	file:
ELFHash	.\src\common\hash.c	/^int ELFHash(const char *key)$/;"	f
ELzmaDummy	.\src\tools\lzma\LzmaDec.c	/^} ELzmaDummy;$/;"	t	typeref:enum:__anon23	file:
ELzmaFinishMode	.\src\tools\lzma\LzmaDec.h	/^} ELzmaFinishMode;$/;"	t	typeref:enum:__anon25
ELzmaStatus	.\src\tools\lzma\LzmaDec.h	/^} ELzmaStatus;$/;"	t	typeref:enum:__anon26
ESzSeek	.\src\tools\lzma\Types.h	/^} ESzSeek;$/;"	t	typeref:enum:__anon38
EXISTS	.\lib\hashtable\hashtable.h	17;"	d
EXTERN_C_BEGIN	.\src\tools\lzma\Types.h	15;"	d
EXTERN_C_BEGIN	.\src\tools\lzma\Types.h	18;"	d
EXTERN_C_END	.\src\tools\lzma\Types.h	16;"	d
EXTERN_C_END	.\src\tools\lzma\Types.h	19;"	d
Encode	.\src\common\md5.c	/^Encode(unsigned char  *output, UINT4  *input, unsigned int    len)$/;"	f	file:
Encode	.\src\tools\lzma\LzmaUtil.c	/^static SRes Encode(ISeqOutStream *outStream, ISeqInStream *inStream, UInt64 fileSize, char *rs)$/;"	f	file:
F	.\src\common\md5.c	42;"	d	file:
FAILURE	.\lib\hashtable\hashtable.h	16;"	d
FAILURE	.\src\tools\config_util.h	10;"	d
FALSE	.\lib\error\error_functions.c	/^typedef enum {FALSE ,TRUE} Boolean;$/;"	e	enum:__anon1	file:
FALSE	.\lib\timer_list.h	18;"	d
FAR	.\inc\zconf.h	185;"	d
FAR	.\inc\zconf.h	187;"	d
FAR	.\inc\zconf.h	194;"	d
FAR	.\inc\zconf.h	196;"	d
FAR	.\inc\zconf.h	220;"	d
FAR	.\inc\zconf.h	257;"	d
FAR	.\inc\zconf.h	311;"	d
FF	.\src\common\md5.c	56;"	d	file:
FILENAME_NOTEXIST	.\src\tools\config_util.h	12;"	d
FULLY_WITHIN	.\inc\sqlite3.h	7823;"	d
False	.\src\tools\lzma\Types.h	97;"	d
FileInStream_CreateVTable	.\src\tools\lzma\7zFile.c	/^void FileInStream_CreateVTable(CFileInStream *p)$/;"	f
FileInStream_Read	.\src\tools\lzma\7zFile.c	/^static SRes FileInStream_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
FileInStream_Seek	.\src\tools\lzma\7zFile.c	/^static SRes FileInStream_Seek(void *pp, Int64 *pos, ESzSeek origin)$/;"	f	file:
FileOutStream_CreateVTable	.\src\tools\lzma\7zFile.c	/^void FileOutStream_CreateVTable(CFileOutStream *p)$/;"	f
FileOutStream_Write	.\src\tools\lzma\7zFile.c	/^static size_t FileOutStream_Write(void *pp, const void *data, size_t size)$/;"	f	file:
FileSeqInStream_CreateVTable	.\src\tools\lzma\7zFile.c	/^void FileSeqInStream_CreateVTable(CFileSeqInStream *p)$/;"	f
FileSeqInStream_Read	.\src\tools\lzma\7zFile.c	/^static SRes FileSeqInStream_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
FileUtils	.\src\tools\file_utils.h	/^class FileUtils {$/;"	c	namespace:phxrpc
File_Close	.\src\tools\lzma\7zFile.c	/^WRes File_Close(CSzFile *p)$/;"	f
File_Construct	.\src\tools\lzma\7zFile.c	/^void File_Construct(CSzFile *p)$/;"	f
File_GetLength	.\src\tools\lzma\7zFile.c	/^WRes File_GetLength(CSzFile *p, UInt64 *length)$/;"	f
File_Open	.\src\tools\lzma\7zFile.c	/^static WRes File_Open(CSzFile *p, const char *name, int writeMode)$/;"	f	file:
File_OpenW	.\src\tools\lzma\7zFile.c	/^static WRes File_OpenW(CSzFile *p, const WCHAR *name, int writeMode)$/;"	f	file:
File_Read	.\src\tools\lzma\7zFile.c	/^WRes File_Read(CSzFile *p, void *data, size_t *size)$/;"	f
File_Seek	.\src\tools\lzma\7zFile.c	/^WRes File_Seek(CSzFile *p, Int64 *pos, ESzSeek origin)$/;"	f
File_Write	.\src\tools\lzma\7zFile.c	/^WRes File_Write(CSzFile *p, const void *data, size_t *size)$/;"	f
FillAlignPrices	.\src\tools\lzma\LzmaEnc.c	/^static void FillAlignPrices(CLzmaEnc *p)$/;"	f	file:
FillDistancesPrices	.\src\tools\lzma\LzmaEnc.c	/^static void FillDistancesPrices(CLzmaEnc *p)$/;"	f	file:
Flush	.\src\tools\lzma\LzmaEnc.c	/^static SRes Flush(CLzmaEnc *p, UInt32 nowPos)$/;"	f	file:
Free	.\src\tools\lzma\Types.h	/^  void (*Free)(void *p, void *address); \/* address can be 0 *\/$/;"	m	struct:__anon45
G	.\src\common\md5.c	43;"	d	file:
GET_BIT	.\src\tools\lzma\LzmaDec.c	25;"	d	file:
GET_BIT2	.\src\tools\lzma\LzmaDec.c	22;"	d	file:
GET_BIT2_CHECK	.\src\tools\lzma\LzmaDec.c	52;"	d	file:
GET_BIT_CHECK	.\src\tools\lzma\LzmaDec.c	55;"	d	file:
GET_MATCHES_FOOTER	.\src\tools\lzma\LzFind.c	477;"	d	file:
GET_MATCHES_HEADER	.\src\tools\lzma\LzFind.c	472;"	d	file:
GET_MATCHES_HEADER2	.\src\tools\lzma\LzFind.c	467;"	d	file:
GET_PRICE	.\src\tools\lzma\LzmaEnc.c	627;"	d	file:
GET_PRICE_0	.\src\tools\lzma\LzmaEnc.c	633;"	d	file:
GET_PRICE_0a	.\src\tools\lzma\LzmaEnc.c	636;"	d	file:
GET_PRICE_1	.\src\tools\lzma\LzmaEnc.c	634;"	d	file:
GET_PRICE_1a	.\src\tools\lzma\LzmaEnc.c	637;"	d	file:
GET_PRICEa	.\src\tools\lzma\LzmaEnc.c	630;"	d	file:
GG	.\src\common\md5.c	61;"	d	file:
GN_ANY_BASE	.\inc\error\get_num.h	7;"	d
GN_BASE_16	.\inc\error\get_num.h	9;"	d
GN_BASE_8	.\inc\error\get_num.h	8;"	d
GN_GT_0	.\inc\error\get_num.h	5;"	d
GN_NONNEG	.\inc\error\get_num.h	4;"	d
Get	.\src\tools\opt_map.cpp	/^const char * OptMap::Get(char c, size_t index) const {$/;"	f	class:phxrpc::OptMap
GetIndexByte	.\src\tools\lzma\LzFind.h	/^  Mf_GetIndexByte_Func GetIndexByte;$/;"	m	struct:_IMatchFinder
GetInt	.\src\tools\opt_map.cpp	/^bool OptMap::GetInt(char c, int * val, size_t index) const {$/;"	f	class:phxrpc::OptMap
GetLargePageMinimumP	.\src\tools\lzma\Alloc.c	/^typedef SIZE_T (WINAPI *GetLargePageMinimumP)();$/;"	t	file:
GetLenToPosState	.\src\tools\lzma\LzmaEnc.c	455;"	d	file:
GetMatches	.\src\tools\lzma\LzFind.h	/^  Mf_GetMatches_Func GetMatches;$/;"	m	struct:_IMatchFinder
GetMatchesSpec1	.\src\tools\lzma\LzFind.c	/^UInt32 * GetMatchesSpec1(UInt32 lenLimit, UInt32 curMatch, UInt32 pos, const Byte *cur, CLzRef *son,$/;"	f
GetNonOpt	.\src\tools\opt_map.cpp	/^const char * OptMap::GetNonOpt(size_t index) {$/;"	f	class:phxrpc::OptMap
GetNonOptCount	.\src\tools\opt_map.cpp	/^size_t OptMap::GetNonOptCount() {$/;"	f	class:phxrpc::OptMap
GetNumAvailableBytes	.\src\tools\lzma\LzFind.h	/^  Mf_GetNumAvailableBytes_Func GetNumAvailableBytes;$/;"	m	struct:_IMatchFinder
GetOptimum	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 GetOptimum(CLzmaEnc *p, UInt32 position, UInt32 *backRes)$/;"	f	file:
GetOptimumFast	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 GetOptimumFast(CLzmaEnc *p, UInt32 *backRes)$/;"	f	file:
GetPointerToCurrentPos	.\src\tools\lzma\LzFind.h	/^  Mf_GetPointerToCurrentPos_Func GetPointerToCurrentPos;$/;"	m	struct:_IMatchFinder
GetPosSlot	.\src\tools\lzma\LzmaEnc.c	100;"	d	file:
GetPosSlot	.\src\tools\lzma\LzmaEnc.c	133;"	d	file:
GetPosSlot1	.\src\tools\lzma\LzmaEnc.c	/^UInt32 GetPosSlot1(UInt32 pos)$/;"	f
GetPosSlot1	.\src\tools\lzma\LzmaEnc.c	131;"	d	file:
GetPosSlot2	.\src\tools\lzma\LzmaEnc.c	132;"	d	file:
GetPosSlot2	.\src\tools\lzma\LzmaEnc.c	99;"	d	file:
GetPureRepPrice	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 GetPureRepPrice(CLzmaEnc *p, UInt32 repIndex, UInt32 state, UInt32 posState)$/;"	f	file:
GetRepLen1Price	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 GetRepLen1Price(CLzmaEnc *p, UInt32 state, UInt32 posState)$/;"	f	file:
GetRepPrice	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 GetRepPrice(CLzmaEnc *p, UInt32 repIndex, UInt32 len, UInt32 state, UInt32 posState)$/;"	f	file:
GetUInt	.\src\tools\opt_map.cpp	/^bool OptMap::GetUInt(char c, unsigned int * val, size_t index) const {$/;"	f	class:phxrpc::OptMap
H	.\src\common\md5.c	44;"	d	file:
HASH2_CALC	.\src\tools\lzma\LzHash.h	15;"	d
HASH3_CALC	.\src\tools\lzma\LzHash.h	17;"	d
HASH4_CALC	.\src\tools\lzma\LzHash.h	22;"	d
HASH5_CALC	.\src\tools\lzma\LzHash.h	28;"	d
HASH_ZIP_CALC	.\src\tools\lzma\LzHash.h	37;"	d
HAVE_FUNC_LOG	.\lib\raft\raft.h	199;"	d
HH	.\src\common\md5.c	66;"	d	file:
Has	.\src\tools\opt_map.cpp	/^bool OptMap::Has(char c) const {$/;"	f	class:phxrpc::OptMap
HashTable	.\lib\hashtable\hashtable.h	/^} HashTable;$/;"	t	typeref:struct:_hashtable
Hc3Zip_MatchFinder_GetMatches	.\src\tools\lzma\LzFind.c	/^UInt32 Hc3Zip_MatchFinder_GetMatches(CMatchFinder *p, UInt32 *distances)$/;"	f
Hc3Zip_MatchFinder_Skip	.\src\tools\lzma\LzFind.c	/^void Hc3Zip_MatchFinder_Skip(CMatchFinder *p, UInt32 num)$/;"	f
Hc4_MatchFinder_GetMatches	.\src\tools\lzma\LzFind.c	/^static UInt32 Hc4_MatchFinder_GetMatches(CMatchFinder *p, UInt32 *distances)$/;"	f	file:
Hc4_MatchFinder_Skip	.\src\tools\lzma\LzFind.c	/^static void Hc4_MatchFinder_Skip(CMatchFinder *p, UInt32 num)$/;"	f	file:
Hc_GetMatchesSpec	.\src\tools\lzma\LzFind.c	/^static UInt32 * Hc_GetMatchesSpec(UInt32 lenLimit, UInt32 curMatch, UInt32 pos, const Byte *cur, CLzRef *son,$/;"	f	file:
I	.\src\common\md5.c	45;"	d	file:
IAlloc_Alloc	.\src\tools\lzma\Types.h	233;"	d
IAlloc_Free	.\src\tools\lzma\Types.h	234;"	d
IByteIn	.\src\tools\lzma\Types.h	/^} IByteIn;$/;"	t	typeref:struct:__anon34
IByteOut	.\src\tools\lzma\Types.h	/^} IByteOut;$/;"	t	typeref:struct:__anon35
ICompressProgress	.\src\tools\lzma\Types.h	/^}ICompressProgress;$/;"	t	typeref:struct:__anon44
IF_BIT_0	.\src\tools\lzma\LzmaDec.c	19;"	d	file:
IF_BIT_0_CHECK	.\src\tools\lzma\LzmaDec.c	49;"	d	file:
II	.\src\common\md5.c	71;"	d	file:
ILookInStream	.\src\tools\lzma\Types.h	/^} ILookInStream;$/;"	t	typeref:struct:__anon40
IMatchFinder	.\src\tools\lzma\LzFind.h	/^} IMatchFinder;$/;"	t	typeref:struct:_IMatchFinder
INCLUDE_DIR	.\env.mk	/^INCLUDE_DIR := \\$/;"	m
INITIAL_CAPACITY	.\lib\raft\raft_log.c	20;"	d	file:
INVALID_TIMER_ID	.\lib\timer_list.h	11;"	d
IN_BUF_SIZE	.\src\tools\lzma\LzmaUtil.c	51;"	d	file:
IP_SIZE	.\src\client\client_util.h	8;"	d
IP_SIZE	.\src\common\common_define.h	10;"	d
ISeekInStream	.\src\tools\lzma\Types.h	/^} ISeekInStream;$/;"	t	typeref:struct:__anon39
ISeqInStream	.\src\tools\lzma\Types.h	/^} ISeqInStream;$/;"	t	typeref:struct:__anon36
ISeqOutStream	.\src\tools\lzma\Types.h	/^} ISeqOutStream;$/;"	t	typeref:struct:__anon37
ISzAlloc	.\src\tools\lzma\Types.h	/^} ISzAlloc;$/;"	t	typeref:struct:__anon45
InFile_Open	.\src\tools\lzma\7zFile.c	/^WRes InFile_Open(CSzFile *p, const char *name) { return File_Open(p, name, 0); }$/;"	f
InFile_OpenW	.\src\tools\lzma\7zFile.c	/^WRes InFile_OpenW(CSzFile *p, const WCHAR *name) { return File_OpenW(p, name, 0); }$/;"	f
Init	.\src\tools\lzma\LzFind.h	/^  Mf_Init_Func Init;$/;"	m	struct:_IMatchFinder
InitConfig	.\src\tools\config.cpp	/^bool Config::InitConfig(const char * path) {$/;"	f	class:phxrpc::Config
Inline_MatchFinder_GetIndexByte	.\src\tools\lzma\LzFind.h	54;"	d
Inline_MatchFinder_GetNumAvailableBytes	.\src\tools\lzma\LzFind.h	56;"	d
Inline_MatchFinder_GetPointerToCurrentPos	.\src\tools\lzma\LzFind.h	53;"	d
Int16	.\src\tools\lzma\Types.h	/^typedef short Int16;$/;"	t
Int32	.\src\tools\lzma\Types.h	/^typedef int Int32;$/;"	t
Int32	.\src\tools\lzma\Types.h	/^typedef long Int32;$/;"	t
Int64	.\src\tools\lzma\Types.h	/^typedef __int64 Int64;$/;"	t
Int64	.\src\tools\lzma\Types.h	/^typedef long Int64;$/;"	t
Int64	.\src\tools\lzma\Types.h	/^typedef long long int Int64;$/;"	t
IsCharState	.\src\tools\lzma\LzmaEnc.c	453;"	d	file:
IsMatch	.\src\tools\lzma\LzmaDec.c	94;"	d	file:
IsRep	.\src\tools\lzma\LzmaDec.c	95;"	d	file:
IsRep0Long	.\src\tools\lzma\LzmaDec.c	99;"	d	file:
IsRepG0	.\src\tools\lzma\LzmaDec.c	96;"	d	file:
IsRepG1	.\src\tools\lzma\LzmaDec.c	97;"	d	file:
IsRepG2	.\src\tools\lzma\LzmaDec.c	98;"	d	file:
IsShortRep	.\src\tools\lzma\LzmaEnc.c	857;"	d	file:
JSHash	.\src\common\hash.c	/^unsigned int JSHash(const char *str)$/;"	f
KEYNAME_NOTEXIST	.\src\tools\config_util.h	14;"	d
LIB	.\env.mk	/^LIB =-lz -lpthread   $/;"	m
LIB_DIR	.\env.mk	/^LIB_DIR := -L$(MAKEROOT)\/lib \\$/;"	m
LINKED_LIST_QUEUE_H	.\lib\linked-list-queue\linked_list_queue.h	2;"	d
LISTEN_BACKLOG	.\src\server\server_util.h	19;"	d
LIST_EMPTY	.\inc\queue.h	159;"	d
LIST_END	.\inc\queue.h	158;"	d
LIST_ENTRY	.\inc\queue.h	148;"	d
LIST_FIRST	.\inc\queue.h	157;"	d
LIST_FOREACH	.\inc\queue.h	162;"	d
LIST_HEAD	.\inc\queue.h	140;"	d
LIST_HEAD_INITIALIZER	.\inc\queue.h	145;"	d
LIST_INIT	.\inc\queue.h	170;"	d
LIST_INSERT_AFTER	.\inc\queue.h	174;"	d
LIST_INSERT_BEFORE	.\inc\queue.h	182;"	d
LIST_INSERT_HEAD	.\inc\queue.h	189;"	d
LIST_NEXT	.\inc\queue.h	160;"	d
LIST_REMOVE	.\inc\queue.h	196;"	d
LIST_REPLACE	.\inc\queue.h	203;"	d
LIT_PROBS	.\src\tools\lzma\LzmaEnc.c	930;"	d	file:
LOG_ERROR	.\src\common\log.h	/^	LOG_ERROR,$/;"	e	enum:__anon17
LOG_INFO	.\src\common\log.h	/^	LOG_INFO$/;"	e	enum:__anon17
LOG_TYPE	.\src\common\log.h	/^}LOG_TYPE;$/;"	t	typeref:enum:__anon17
LOG_WARN	.\src\common\log.h	/^	LOG_WARN,$/;"	e	enum:__anon17
LZMA_BASE_SIZE	.\src\tools\lzma\LzmaDec.c	107;"	d	file:
LZMA_DIC_MIN	.\src\tools\lzma\LzmaDec.c	116;"	d	file:
LZMA_FINISH_ANY	.\src\tools\lzma\LzmaDec.h	/^  LZMA_FINISH_ANY,   \/* finish at any point *\/$/;"	e	enum:__anon25
LZMA_FINISH_END	.\src\tools\lzma\LzmaDec.h	/^  LZMA_FINISH_END    \/* block must be finished at the end *\/$/;"	e	enum:__anon25
LZMA_LC_MAX	.\src\tools\lzma\LzmaEnc.c	186;"	d	file:
LZMA_LIT_SIZE	.\src\tools\lzma\LzmaDec.c	108;"	d	file:
LZMA_LP_MAX	.\src\tools\lzma\LzmaEnc.c	187;"	d	file:
LZMA_MATCH_LEN_MAX	.\src\tools\lzma\LzmaEnc.c	202;"	d	file:
LZMA_MATCH_LEN_MIN	.\src\tools\lzma\LzmaEnc.c	201;"	d	file:
LZMA_NUM_PB_STATES_MAX	.\src\tools\lzma\LzmaEnc.c	189;"	d	file:
LZMA_NUM_REPS	.\src\tools\lzma\LzmaEnc.c	140;"	d	file:
LZMA_PB_MAX	.\src\tools\lzma\LzmaEnc.c	185;"	d	file:
LZMA_PROPS_SIZE	.\src\tools\lzma\LzmaDec.h	26;"	d
LZMA_PROPS_SIZE	.\src\tools\lzma\LzmaEnc.h	13;"	d
LZMA_PROPS_SIZE	.\src\tools\lzma\LzmaLib.h	15;"	d
LZMA_REQUIRED_INPUT_MAX	.\src\tools\lzma\LzmaDec.h	48;"	d
LZMA_STATUS_FINISHED_WITH_MARK	.\src\tools\lzma\LzmaDec.h	/^  LZMA_STATUS_FINISHED_WITH_MARK,          \/* stream was finished with end mark. *\/$/;"	e	enum:__anon26
LZMA_STATUS_MAYBE_FINISHED_WITHOUT_MARK	.\src\tools\lzma\LzmaDec.h	/^  LZMA_STATUS_MAYBE_FINISHED_WITHOUT_MARK  \/* there is probability that stream was finished without end mark *\/$/;"	e	enum:__anon26
LZMA_STATUS_NEEDS_MORE_INPUT	.\src\tools\lzma\LzmaDec.h	/^  LZMA_STATUS_NEEDS_MORE_INPUT,            \/* you must provide more input bytes *\/$/;"	e	enum:__anon26
LZMA_STATUS_NOT_FINISHED	.\src\tools\lzma\LzmaDec.h	/^  LZMA_STATUS_NOT_FINISHED,                \/* stream was not finished *\/$/;"	e	enum:__anon26
LZMA_STATUS_NOT_SPECIFIED	.\src\tools\lzma\LzmaDec.h	/^  LZMA_STATUS_NOT_SPECIFIED,               \/* use main error code instead *\/$/;"	e	enum:__anon26
LenChoice	.\src\tools\lzma\LzmaDec.c	70;"	d	file:
LenChoice2	.\src\tools\lzma\LzmaDec.c	71;"	d	file:
LenCoder	.\src\tools\lzma\LzmaDec.c	103;"	d	file:
LenEnc_Encode	.\src\tools\lzma\LzmaEnc.c	/^static void LenEnc_Encode(CLenEnc *p, CRangeEnc *rc, UInt32 symbol, UInt32 posState)$/;"	f	file:
LenEnc_Encode2	.\src\tools\lzma\LzmaEnc.c	/^static void LenEnc_Encode2(CLenPriceEnc *p, CRangeEnc *rc, UInt32 symbol, UInt32 posState, Bool updatePrice, UInt32 *ProbPrices)$/;"	f	file:
LenEnc_Init	.\src\tools\lzma\LzmaEnc.c	/^static void LenEnc_Init(CLenEnc *p)$/;"	f	file:
LenEnc_SetPrices	.\src\tools\lzma\LzmaEnc.c	/^static void LenEnc_SetPrices(CLenEnc *p, UInt32 posState, UInt32 numSymbols, UInt32 *prices, UInt32 *ProbPrices)$/;"	f	file:
LenHigh	.\src\tools\lzma\LzmaDec.c	74;"	d	file:
LenLow	.\src\tools\lzma\LzmaDec.c	72;"	d	file:
LenMid	.\src\tools\lzma\LzmaDec.c	73;"	d	file:
LenPriceEnc_UpdateTable	.\src\tools\lzma\LzmaEnc.c	/^static void MY_FAST_CALL LenPriceEnc_UpdateTable(CLenPriceEnc *p, UInt32 posState, UInt32 *ProbPrices)$/;"	f	file:
LenPriceEnc_UpdateTables	.\src\tools\lzma\LzmaEnc.c	/^static void LenPriceEnc_UpdateTables(CLenPriceEnc *p, UInt32 numPosStates, UInt32 *ProbPrices)$/;"	f	file:
LitEnc_Encode	.\src\tools\lzma\LzmaEnc.c	/^static void LitEnc_Encode(CRangeEnc *p, CLzmaProb *probs, UInt32 symbol)$/;"	f	file:
LitEnc_EncodeMatched	.\src\tools\lzma\LzmaEnc.c	/^static void LitEnc_EncodeMatched(CRangeEnc *p, CLzmaProb *probs, UInt32 symbol, UInt32 matchByte)$/;"	f	file:
LitEnc_GetPrice	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 LitEnc_GetPrice(const CLzmaProb *probs, UInt32 symbol, UInt32 *ProbPrices)$/;"	f	file:
LitEnc_GetPriceMatched	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 LitEnc_GetPriceMatched(const CLzmaProb *probs, UInt32 symbol, UInt32 matchByte, UInt32 *ProbPrices)$/;"	f	file:
Literal	.\src\tools\lzma\LzmaDec.c	105;"	d	file:
Look	.\src\tools\lzma\Types.h	/^  SRes (*Look)(void *p, const void **buf, size_t *size);$/;"	m	struct:__anon40
LookInStream_LookRead	.\src\tools\lzma\7zStream.c	/^SRes LookInStream_LookRead(ILookInStream *stream, void *buf, size_t *size)$/;"	f
LookInStream_Read	.\src\tools\lzma\7zStream.c	/^SRes LookInStream_Read(ILookInStream *stream, void *buf, size_t size)$/;"	f
LookInStream_Read2	.\src\tools\lzma\7zStream.c	/^SRes LookInStream_Read2(ILookInStream *stream, void *buf, size_t size, SRes errorType)$/;"	f
LookInStream_SeekTo	.\src\tools\lzma\7zStream.c	/^SRes LookInStream_SeekTo(ILookInStream *stream, UInt64 offset)$/;"	f
LookToRead_BUF_SIZE	.\src\tools\lzma\Types.h	190;"	d
LookToRead_CreateVTable	.\src\tools\lzma\7zStream.c	/^void LookToRead_CreateVTable(CLookToRead *p, int lookahead)$/;"	f
LookToRead_Init	.\src\tools\lzma\7zStream.c	/^void LookToRead_Init(CLookToRead *p)$/;"	f
LookToRead_Look_Exact	.\src\tools\lzma\7zStream.c	/^static SRes LookToRead_Look_Exact(void *pp, const void **buf, size_t *size)$/;"	f	file:
LookToRead_Look_Lookahead	.\src\tools\lzma\7zStream.c	/^static SRes LookToRead_Look_Lookahead(void *pp, const void **buf, size_t *size)$/;"	f	file:
LookToRead_Read	.\src\tools\lzma\7zStream.c	/^static SRes LookToRead_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
LookToRead_Seek	.\src\tools\lzma\7zStream.c	/^static SRes LookToRead_Seek(void *pp, Int64 *pos, ESzSeek origin)$/;"	f	file:
LookToRead_Skip	.\src\tools\lzma\7zStream.c	/^static SRes LookToRead_Skip(void *pp, size_t offset)$/;"	f	file:
LzInWindow_Create	.\src\tools\lzma\LzFind.c	/^static int LzInWindow_Create(CMatchFinder *p, UInt32 keepSizeReserv, ISzAlloc *alloc)$/;"	f	file:
LzInWindow_Free	.\src\tools\lzma\LzFind.c	/^static void LzInWindow_Free(CMatchFinder *p, ISzAlloc *alloc)$/;"	f	file:
LzmaCompress	.\src\tools\lzma\LzmaLib.c	/^MY_STDAPI LzmaCompress(unsigned char *dest, size_t  *destLen, const unsigned char *src, size_t  srcLen,$/;"	f
LzmaDec_Allocate	.\src\tools\lzma\LzmaDec.c	/^SRes LzmaDec_Allocate(CLzmaDec *p, const Byte *props, unsigned propsSize, ISzAlloc *alloc)$/;"	f
LzmaDec_AllocateProbs	.\src\tools\lzma\LzmaDec.c	/^SRes LzmaDec_AllocateProbs(CLzmaDec *p, const Byte *props, unsigned propsSize, ISzAlloc *alloc)$/;"	f
LzmaDec_AllocateProbs2	.\src\tools\lzma\LzmaDec.c	/^static SRes LzmaDec_AllocateProbs2(CLzmaDec *p, const CLzmaProps *propNew, ISzAlloc *alloc)$/;"	f	file:
LzmaDec_Construct	.\src\tools\lzma\LzmaDec.h	71;"	d
LzmaDec_DecodeReal	.\src\tools\lzma\LzmaDec.c	/^static int MY_FAST_CALL LzmaDec_DecodeReal(CLzmaDec *p, SizeT limit, const Byte *bufLimit)$/;"	f	file:
LzmaDec_DecodeReal2	.\src\tools\lzma\LzmaDec.c	/^static int MY_FAST_CALL LzmaDec_DecodeReal2(CLzmaDec *p, SizeT limit, const Byte *bufLimit)$/;"	f	file:
LzmaDec_DecodeToBuf	.\src\tools\lzma\LzmaDec.c	/^SRes LzmaDec_DecodeToBuf(CLzmaDec *p, Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen, ELzmaFinishMode finishMode, ELzmaStatus *status)$/;"	f
LzmaDec_DecodeToDic	.\src\tools\lzma\LzmaDec.c	/^SRes LzmaDec_DecodeToDic(CLzmaDec *p, SizeT dicLimit, const Byte *src, SizeT *srcLen,$/;"	f
LzmaDec_Free	.\src\tools\lzma\LzmaDec.c	/^void LzmaDec_Free(CLzmaDec *p, ISzAlloc *alloc)$/;"	f
LzmaDec_FreeDict	.\src\tools\lzma\LzmaDec.c	/^static void LzmaDec_FreeDict(CLzmaDec *p, ISzAlloc *alloc)$/;"	f	file:
LzmaDec_FreeProbs	.\src\tools\lzma\LzmaDec.c	/^void LzmaDec_FreeProbs(CLzmaDec *p, ISzAlloc *alloc)$/;"	f
LzmaDec_Init	.\src\tools\lzma\LzmaDec.c	/^void LzmaDec_Init(CLzmaDec *p)$/;"	f
LzmaDec_InitDicAndState	.\src\tools\lzma\LzmaDec.c	/^void LzmaDec_InitDicAndState(CLzmaDec *p, Bool initDic, Bool initState)$/;"	f
LzmaDec_InitRc	.\src\tools\lzma\LzmaDec.c	/^static void LzmaDec_InitRc(CLzmaDec *p, const Byte *data)$/;"	f	file:
LzmaDec_InitStateReal	.\src\tools\lzma\LzmaDec.c	/^static void LzmaDec_InitStateReal(CLzmaDec *p)$/;"	f	file:
LzmaDec_TryDummy	.\src\tools\lzma\LzmaDec.c	/^static ELzmaDummy LzmaDec_TryDummy(const CLzmaDec *p, const Byte *buf, SizeT inSize)$/;"	f	file:
LzmaDec_WriteRem	.\src\tools\lzma\LzmaDec.c	/^static void MY_FAST_CALL LzmaDec_WriteRem(CLzmaDec *p, SizeT limit)$/;"	f	file:
LzmaDecode	.\src\tools\lzma\LzmaDec.c	/^SRes LzmaDecode(Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen,$/;"	f
LzmaEncProps_GetDictSize	.\src\tools\lzma\LzmaEnc.c	/^UInt32 LzmaEncProps_GetDictSize(const CLzmaEncProps *props2)$/;"	f
LzmaEncProps_Init	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEncProps_Init(CLzmaEncProps *p)$/;"	f
LzmaEncProps_Normalize	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEncProps_Normalize(CLzmaEncProps *p)$/;"	f
LzmaEnc_Alloc	.\src\tools\lzma\LzmaEnc.c	/^static SRes LzmaEnc_Alloc(CLzmaEnc *p, UInt32 keepWindowSize, ISzAlloc *alloc, ISzAlloc *allocBig)$/;"	f	file:
LzmaEnc_AllocAndInit	.\src\tools\lzma\LzmaEnc.c	/^static SRes LzmaEnc_AllocAndInit(CLzmaEnc *p, UInt32 keepWindowSize, ISzAlloc *alloc, ISzAlloc *allocBig)$/;"	f	file:
LzmaEnc_CodeOneBlock	.\src\tools\lzma\LzmaEnc.c	/^static SRes LzmaEnc_CodeOneBlock(CLzmaEnc *p, Bool useLimits, UInt32 maxPackSize, UInt32 maxUnpackSize)$/;"	f	file:
LzmaEnc_CodeOneMemBlock	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEnc_CodeOneMemBlock(CLzmaEncHandle pp, Bool reInit,$/;"	f
LzmaEnc_Construct	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_Construct(CLzmaEnc *p)$/;"	f
LzmaEnc_Create	.\src\tools\lzma\LzmaEnc.c	/^CLzmaEncHandle LzmaEnc_Create(ISzAlloc *alloc)$/;"	f
LzmaEnc_Destroy	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_Destroy(CLzmaEncHandle p, ISzAlloc *alloc, ISzAlloc *allocBig)$/;"	f
LzmaEnc_Destruct	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_Destruct(CLzmaEnc *p, ISzAlloc *alloc, ISzAlloc *allocBig)$/;"	f
LzmaEnc_Encode	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEnc_Encode(CLzmaEncHandle pp, ISeqOutStream *outStream, ISeqInStream *inStream, ICompressProgress *progress,$/;"	f
LzmaEnc_Encode2	.\src\tools\lzma\LzmaEnc.c	/^static SRes LzmaEnc_Encode2(CLzmaEnc *p, ICompressProgress *progress)$/;"	f	file:
LzmaEnc_FastPosInit	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_FastPosInit(Byte *g_FastPos)$/;"	f
LzmaEnc_Finish	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_Finish(CLzmaEncHandle pp)$/;"	f
LzmaEnc_FreeLits	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_FreeLits(CLzmaEnc *p, ISzAlloc *alloc)$/;"	f
LzmaEnc_GetCurBuf	.\src\tools\lzma\LzmaEnc.c	/^const Byte *LzmaEnc_GetCurBuf(CLzmaEncHandle pp)$/;"	f
LzmaEnc_GetNumAvailableBytes	.\src\tools\lzma\LzmaEnc.c	/^UInt32 LzmaEnc_GetNumAvailableBytes(CLzmaEncHandle pp)$/;"	f
LzmaEnc_Init	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_Init(CLzmaEnc *p)$/;"	f
LzmaEnc_InitPriceTables	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_InitPriceTables(UInt32 *ProbPrices)$/;"	f
LzmaEnc_InitPrices	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_InitPrices(CLzmaEnc *p)$/;"	f
LzmaEnc_MemEncode	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEnc_MemEncode(CLzmaEncHandle pp, Byte *dest, SizeT *destLen, const Byte *src, SizeT srcLen,$/;"	f
LzmaEnc_MemPrepare	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEnc_MemPrepare(CLzmaEncHandle pp, const Byte *src, SizeT srcLen,$/;"	f
LzmaEnc_Prepare	.\src\tools\lzma\LzmaEnc.c	/^static SRes LzmaEnc_Prepare(CLzmaEncHandle pp, ISeqOutStream *outStream, ISeqInStream *inStream,$/;"	f	file:
LzmaEnc_PrepareForLzma2	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEnc_PrepareForLzma2(CLzmaEncHandle pp,$/;"	f
LzmaEnc_RestoreState	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_RestoreState(CLzmaEncHandle pp)$/;"	f
LzmaEnc_SaveState	.\src\tools\lzma\LzmaEnc.c	/^void LzmaEnc_SaveState(CLzmaEncHandle pp)$/;"	f
LzmaEnc_SetInputBuf	.\src\tools\lzma\LzmaEnc.c	/^static void LzmaEnc_SetInputBuf(CLzmaEnc *p, const Byte *src, SizeT srcLen)$/;"	f	file:
LzmaEnc_SetProps	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEnc_SetProps(CLzmaEncHandle pp, const CLzmaEncProps *props2)$/;"	f
LzmaEnc_WriteProperties	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEnc_WriteProperties(CLzmaEncHandle pp, Byte *props, SizeT *size)$/;"	f
LzmaEncode	.\src\tools\lzma\LzmaEnc.c	/^SRes LzmaEncode(Byte *dest, SizeT *destLen, const Byte *src, SizeT srcLen,$/;"	f
LzmaProps_Decode	.\src\tools\lzma\LzmaDec.c	/^SRes LzmaProps_Decode(CLzmaProps *p, const Byte *data, unsigned size)$/;"	f
LzmaProps_GetNumProbs	.\src\tools\lzma\LzmaDec.c	110;"	d	file:
LzmaUncompress	.\src\tools\lzma\LzmaLib.c	/^MY_STDAPI LzmaUncompress(unsigned char *dest, size_t  *destLen, const unsigned char *src, size_t  *srcLen,$/;"	f
MAXCONNS	.\src\server\server_util.h	21;"	d
MAXEVENTS	.\src\server\server_util.h	22;"	d
MAXSEG_64K	.\inc\zconf.h	89;"	d
MAX_MEM_LEVEL	.\inc\zconf.h	136;"	d
MAX_MEM_LEVEL	.\inc\zconf.h	138;"	d
MAX_TIMER_NUM	.\lib\timer_list.h	8;"	d
MAX_WBITS	.\inc\zconf.h	148;"	d
MCL_MD5_H	.\src\common\md5.h	2;"	d
MD5Buffer	.\src\common\md5.c	/^int MD5Buffer(char *buffer,unsigned int len,unsigned char digest[16])$/;"	f
MD5File	.\src\common\md5.c	/^int MD5File(char *filename,unsigned char digest[16])	$/;"	f
MD5Final	.\src\common\md5.c	/^MD5Final(unsigned char   digest[16], MD5_CTX        *context)$/;"	f
MD5Init	.\src\common\md5.c	/^MD5Init(MD5_CTX *context)$/;"	f
MD5String	.\src\common\md5.c	/^int MD5String(char *string,unsigned char digest[16])$/;"	f
MD5Transform	.\src\common\md5.c	/^MD5Transform(UINT4           state[4], unsigned char   block[64])$/;"	f	file:
MD5Update	.\src\common\md5.c	/^MD5Update(MD5_CTX        *context, unsigned char  *input, unsigned int    inputLen)$/;"	f
MD5_CTX	.\src\common\md5.h	/^}MD5_CTX;$/;"	t	typeref:struct:__anon18
MD5_memcpy	.\src\common\md5.c	/^MD5_memcpy(POINTER         output, POINTER         input, unsigned int    len)$/;"	f	file:
MD5_memset	.\src\common\md5.c	/^MD5_memset(POINTER   output, int    value, unsigned int  len)$/;"	f	file:
MESSAGE_BUFF_SIZE	.\src\server\socket_pkg.h	11;"	d
MF_PARAMS	.\src\tools\lzma\LzFind.c	475;"	d	file:
MOD	.\src\common\hash.c	4;"	d	file:
MOVE_POS	.\src\tools\lzma\LzFind.c	458;"	d	file:
MOVE_POS_RET	.\src\tools\lzma\LzFind.c	463;"	d	file:
MQ_CLOSE	.\src\server\socket_pkg.h	32;"	d
MQ_OPEN	.\src\server\socket_pkg.h	30;"	d
MQ_PUBMSG	.\src\server\socket_pkg.h	36;"	d
MQ_SUBTOPIC	.\src\server\socket_pkg.h	34;"	d
MSDOS	.\inc\zconf.h	63;"	d
MT_HASH2_CALC	.\src\tools\lzma\LzHash.h	40;"	d
MT_HASH3_CALC	.\src\tools\lzma\LzHash.h	43;"	d
MT_HASH4_CALC	.\src\tools\lzma\LzHash.h	48;"	d
MY_CDECL	.\src\tools\lzma\Types.h	114;"	d
MY_CDECL	.\src\tools\lzma\Types.h	119;"	d
MY_COPYRIGHT	.\src\tools\lzma\7zVersion.h	6;"	d
MY_DATE	.\src\tools\lzma\7zVersion.h	5;"	d
MY_FAST_CALL	.\src\tools\lzma\Types.h	115;"	d
MY_FAST_CALL	.\src\tools\lzma\Types.h	120;"	d
MY_NO_INLINE	.\src\tools\lzma\Types.h	109;"	d
MY_NO_INLINE	.\src\tools\lzma\Types.h	111;"	d
MY_STDAPI	.\src\tools\lzma\LzmaLib.h	13;"	d
MY_STD_CALL	.\src\tools\lzma\Types.h	101;"	d
MY_STD_CALL	.\src\tools\lzma\Types.h	103;"	d
MY_VERSION	.\src\tools\lzma\7zVersion.h	4;"	d
MY_VERSION_COPYRIGHT_DATE	.\src\tools\lzma\7zVersion.h	7;"	d
MY_VER_BUILD	.\src\tools\lzma\7zVersion.h	3;"	d
MY_VER_MAJOR	.\src\tools\lzma\7zVersion.h	1;"	d
MY_VER_MINOR	.\src\tools\lzma\7zVersion.h	2;"	d
MakeAsChar	.\src\tools\lzma\LzmaEnc.c	855;"	d	file:
MakeAsShortRep	.\src\tools\lzma\LzmaEnc.c	856;"	d	file:
MatchFinder_CheckAndMoveAndRead	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_CheckAndMoveAndRead(CMatchFinder *p)$/;"	f	file:
MatchFinder_CheckLimits	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_CheckLimits(CMatchFinder *p)$/;"	f	file:
MatchFinder_Construct	.\src\tools\lzma\LzFind.c	/^void MatchFinder_Construct(CMatchFinder *p)$/;"	f
MatchFinder_Create	.\src\tools\lzma\LzFind.c	/^int MatchFinder_Create(CMatchFinder *p, UInt32 historySize,$/;"	f
MatchFinder_CreateVTable	.\src\tools\lzma\LzFind.c	/^void MatchFinder_CreateVTable(CMatchFinder *p, IMatchFinder *vTable)$/;"	f
MatchFinder_Free	.\src\tools\lzma\LzFind.c	/^void MatchFinder_Free(CMatchFinder *p, ISzAlloc *alloc)$/;"	f
MatchFinder_FreeThisClassMemory	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_FreeThisClassMemory(CMatchFinder *p, ISzAlloc *alloc)$/;"	f	file:
MatchFinder_GetIndexByte	.\src\tools\lzma\LzFind.c	/^Byte MatchFinder_GetIndexByte(CMatchFinder *p, Int32 index) { return p->buffer[index]; }$/;"	f
MatchFinder_GetNumAvailableBytes	.\src\tools\lzma\LzFind.c	/^UInt32 MatchFinder_GetNumAvailableBytes(CMatchFinder *p) { return p->streamPos - p->pos; }$/;"	f
MatchFinder_GetPointerToCurrentPos	.\src\tools\lzma\LzFind.c	/^Byte *MatchFinder_GetPointerToCurrentPos(CMatchFinder *p) { return p->buffer; }$/;"	f
MatchFinder_GetSubValue	.\src\tools\lzma\LzFind.c	/^static UInt32 MatchFinder_GetSubValue(CMatchFinder *p)$/;"	f	file:
MatchFinder_Init	.\src\tools\lzma\LzFind.c	/^void MatchFinder_Init(CMatchFinder *p)$/;"	f
MatchFinder_MoveBlock	.\src\tools\lzma\LzFind.c	/^void MatchFinder_MoveBlock(CMatchFinder *p)$/;"	f
MatchFinder_MovePos	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_MovePos(CMatchFinder *p) { MOVE_POS; }$/;"	f	file:
MatchFinder_NeedMove	.\src\tools\lzma\LzFind.c	/^int MatchFinder_NeedMove(CMatchFinder *p)$/;"	f
MatchFinder_Normalize	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_Normalize(CMatchFinder *p)$/;"	f	file:
MatchFinder_Normalize3	.\src\tools\lzma\LzFind.c	/^void MatchFinder_Normalize3(UInt32 subValue, CLzRef *items, UInt32 numItems)$/;"	f
MatchFinder_ReadBlock	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_ReadBlock(CMatchFinder *p)$/;"	f	file:
MatchFinder_ReadIfRequired	.\src\tools\lzma\LzFind.c	/^void MatchFinder_ReadIfRequired(CMatchFinder *p)$/;"	f
MatchFinder_ReduceOffsets	.\src\tools\lzma\LzFind.c	/^void MatchFinder_ReduceOffsets(CMatchFinder *p, UInt32 subValue)$/;"	f
MatchFinder_SetDefaultSettings	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_SetDefaultSettings(CMatchFinder *p)$/;"	f	file:
MatchFinder_SetLimits	.\src\tools\lzma\LzFind.c	/^static void MatchFinder_SetLimits(CMatchFinder *p)$/;"	f	file:
Mf_GetIndexByte_Func	.\src\tools\lzma\LzFind.h	/^typedef Byte (*Mf_GetIndexByte_Func)(void *object, Int32 index);$/;"	t
Mf_GetMatches_Func	.\src\tools\lzma\LzFind.h	/^typedef UInt32 (*Mf_GetMatches_Func)(void *object, UInt32 *distances);$/;"	t
Mf_GetNumAvailableBytes_Func	.\src\tools\lzma\LzFind.h	/^typedef UInt32 (*Mf_GetNumAvailableBytes_Func)(void *object);$/;"	t
Mf_GetPointerToCurrentPos_Func	.\src\tools\lzma\LzFind.h	/^typedef const Byte * (*Mf_GetPointerToCurrentPos_Func)(void *object);$/;"	t
Mf_Init_Func	.\src\tools\lzma\LzFind.h	/^typedef void (*Mf_Init_Func)(void *object);$/;"	t
Mf_Skip_Func	.\src\tools\lzma\LzFind.h	/^typedef void (*Mf_Skip_Func)(void *object, UInt32);$/;"	t
MidAlloc	.\src\tools\lzma\Alloc.c	/^void *MidAlloc(size_t size)$/;"	f
MidAlloc	.\src\tools\lzma\Alloc.h	27;"	d
MidFree	.\src\tools\lzma\Alloc.c	/^void MidFree(void *address)$/;"	f
MidFree	.\src\tools\lzma\Alloc.h	28;"	d
MovePos	.\src\tools\lzma\LzmaEnc.c	/^static void MovePos(CLzmaEnc *p, UInt32 num)$/;"	f	file:
MyAlloc	.\src\tools\lzma\Alloc.c	/^void *MyAlloc(size_t size)$/;"	f
MyFree	.\src\tools\lzma\Alloc.c	/^void MyFree(void *address)$/;"	f
MyWrite	.\src\tools\lzma\LzmaEnc.c	/^static size_t MyWrite(void *pp, const void *data, size_t size)$/;"	f	file:
NET_CONF	.\src\common\config.c	/^system_net_conf_t NET_CONF;/;"	v
NORETURN	.\inc\error\error_functions.h	14;"	d
NORETURN	.\inc\error\error_functions.h	16;"	d
NORMALIZE	.\src\tools\lzma\LzmaDec.c	17;"	d	file:
NORMALIZE_CHECK	.\src\tools\lzma\LzmaDec.c	47;"	d	file:
NOTEXISTS	.\lib\hashtable\hashtable.h	18;"	d
NOT_WITHIN	.\inc\sqlite3.h	7821;"	d
NO_DUMMY_DECL	.\inc\zconf.h	130;"	d
NO_vsnprintf	.\inc\zconf.h	305;"	d
NO_vsnprintf	.\inc\zconf.h	309;"	d
OF	.\inc\zconf.h	168;"	d
OF	.\inc\zconf.h	170;"	d
OS2	.\inc\zconf.h	66;"	d
OUT_BUF_SIZE	.\src\tools\lzma\LzmaUtil.c	52;"	d	file:
OptMap	.\src\tools\opt_map.cpp	/^OptMap::OptMap(const char * optstring) {$/;"	f	class:phxrpc::OptMap
OptMap	.\src\tools\opt_map.h	/^class OptMap {$/;"	c	namespace:phxrpc
OutFile_Open	.\src\tools\lzma\7zFile.c	/^WRes OutFile_Open(CSzFile *p, const char *name) { return File_Open(p, name, 1); }$/;"	f
OutFile_OpenW	.\src\tools\lzma\7zFile.c	/^WRes OutFile_OpenW(CSzFile *p, const WCHAR *name) { return File_OpenW(p, name, 1); }$/;"	f
PADDING	.\src\common\md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PARTLY_WITHIN	.\inc\sqlite3.h	7822;"	d
PJWHash	.\src\common\hash.c	/^unsigned int PJWHash(const char *str)$/;"	f
POINTER	.\src\common\md5.h	/^typedef unsigned char *POINTER;$/;"	t
PTHREAD_MUTEX_INIT_VALUE	.\inc\lists.h	25;"	d
PTHREAD_MUTEX_INIT_VALUE	.\inc\lists.h	28;"	d
Parse	.\src\tools\opt_map.cpp	/^bool OptMap::Parse(int argc, char * argv[]) {$/;"	f	class:phxrpc::OptMap
PosSlot	.\src\tools\lzma\LzmaDec.c	100;"	d	file:
PrintError	.\src\tools\lzma\LzmaUtil.c	/^int PrintError(char *buffer, const char *message)$/;"	f
PrintErrorNumber	.\src\tools\lzma\LzmaUtil.c	/^int PrintErrorNumber(char *buffer, SRes val)$/;"	f
PrintHelp	.\src\tools\lzma\LzmaUtil.c	/^void PrintHelp(char *buffer)$/;"	f
PrintUserError	.\src\tools\lzma\LzmaUtil.c	/^int PrintUserError(char *buffer)$/;"	f
ProbPrices	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 ProbPrices[kBitModelTotal >> kNumMoveReducingBits];$/;"	m	struct:__anon32	file:
Progress	.\src\tools\lzma\Types.h	/^  SRes (*Progress)(void *p, UInt64 inSize, UInt64 outSize);$/;"	m	struct:__anon44
RAFT_ERR_NOT_LEADER	.\lib\raft\raft.h	13;"	d
RAFT_ERR_ONE_VOTING_CHANGE_ONLY	.\lib\raft\raft.h	14;"	d
RAFT_ERR_SHUTDOWN	.\lib\raft\raft.h	15;"	d
RAFT_H_	.\lib\raft\raft.h	11;"	d
RAFT_LOGTYPE_ADD_NODE	.\lib\raft\raft.h	/^    RAFT_LOGTYPE_ADD_NODE,$/;"	e	enum:__anon4
RAFT_LOGTYPE_ADD_NONVOTING_NODE	.\lib\raft\raft.h	/^    RAFT_LOGTYPE_ADD_NONVOTING_NODE,$/;"	e	enum:__anon4
RAFT_LOGTYPE_NORMAL	.\lib\raft\raft.h	/^    RAFT_LOGTYPE_NORMAL,$/;"	e	enum:__anon4
RAFT_LOGTYPE_NUM	.\lib\raft\raft.h	/^    RAFT_LOGTYPE_NUM,$/;"	e	enum:__anon4
RAFT_LOGTYPE_REMOVE_NODE	.\lib\raft\raft.h	/^    RAFT_LOGTYPE_REMOVE_NODE,$/;"	e	enum:__anon4
RAFT_LOG_H_	.\lib\raft\raft_log.h	2;"	d
RAFT_NODE_HAS_SUFFICIENT_LOG	.\lib\raft\raft_node.c	21;"	d	file:
RAFT_NODE_VOTED_FOR_ME	.\lib\raft\raft_node.c	19;"	d	file:
RAFT_NODE_VOTING	.\lib\raft\raft_node.c	20;"	d	file:
RAFT_PRIVATE_H_	.\lib\raft\raft_private.h	2;"	d
RAFT_STATE_CANDIDATE	.\lib\raft\raft.h	/^    RAFT_STATE_CANDIDATE,$/;"	e	enum:__anon3
RAFT_STATE_FOLLOWER	.\lib\raft\raft.h	/^    RAFT_STATE_FOLLOWER,$/;"	e	enum:__anon3
RAFT_STATE_LEADER	.\lib\raft\raft.h	/^    RAFT_STATE_LEADER$/;"	e	enum:__anon3
RAFT_STATE_NONE	.\lib\raft\raft.h	/^    RAFT_STATE_NONE,$/;"	e	enum:__anon3
RB_BLACK	.\lib\rbtree.h	103;"	d
RB_CLEAR_NODE	.\lib\rbtree.h	135;"	d
RB_EMPTY_NODE	.\lib\rbtree.h	134;"	d
RB_EMPTY_ROOT	.\lib\rbtree.h	133;"	d
RB_RED	.\lib\rbtree.h	102;"	d
RB_ROOT	.\lib\rbtree.h	130;"	d
RC_BUF_SIZE	.\src\tools\lzma\LzmaEnc.c	467;"	d	file:
RC_INIT_SIZE	.\src\tools\lzma\LzmaDec.c	15;"	d	file:
RINOK	.\src\tools\lzma\Types.h	52;"	d
ROOT	.\env.mk	/^ROOT := $(shell pwd)$/;"	m
ROTATE_LEFT	.\src\common\md5.c	50;"	d	file:
RSHash	.\src\common\hash.c	/^unsigned int RSHash(const char *str)$/;"	f
RangeEnc_Alloc	.\src\tools\lzma\LzmaEnc.c	/^static int RangeEnc_Alloc(CRangeEnc *p, ISzAlloc *alloc)$/;"	f	file:
RangeEnc_Construct	.\src\tools\lzma\LzmaEnc.c	/^static void RangeEnc_Construct(CRangeEnc *p)$/;"	f	file:
RangeEnc_EncodeBit	.\src\tools\lzma\LzmaEnc.c	/^static void RangeEnc_EncodeBit(CRangeEnc *p, CLzmaProb *prob, UInt32 symbol)$/;"	f	file:
RangeEnc_EncodeDirectBits	.\src\tools\lzma\LzmaEnc.c	/^static void RangeEnc_EncodeDirectBits(CRangeEnc *p, UInt32 value, int numBits)$/;"	f	file:
RangeEnc_FlushData	.\src\tools\lzma\LzmaEnc.c	/^static void RangeEnc_FlushData(CRangeEnc *p)$/;"	f	file:
RangeEnc_FlushStream	.\src\tools\lzma\LzmaEnc.c	/^static void RangeEnc_FlushStream(CRangeEnc *p)$/;"	f	file:
RangeEnc_Free	.\src\tools\lzma\LzmaEnc.c	/^static void RangeEnc_Free(CRangeEnc *p, ISzAlloc *alloc)$/;"	f	file:
RangeEnc_GetProcessed	.\src\tools\lzma\LzmaEnc.c	465;"	d	file:
RangeEnc_Init	.\src\tools\lzma\LzmaEnc.c	/^static void RangeEnc_Init(CRangeEnc *p)$/;"	f	file:
RangeEnc_ShiftLow	.\src\tools\lzma\LzmaEnc.c	/^static void MY_FAST_CALL RangeEnc_ShiftLow(CRangeEnc *p)$/;"	f	file:
RcTree_Encode	.\src\tools\lzma\LzmaEnc.c	/^static void RcTree_Encode(CRangeEnc *rc, CLzmaProb *probs, int numBitLevels, UInt32 symbol)$/;"	f	file:
RcTree_GetPrice	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 RcTree_GetPrice(const CLzmaProb *probs, int numBitLevels, UInt32 symbol, UInt32 *ProbPrices)$/;"	f	file:
RcTree_ReverseEncode	.\src\tools\lzma\LzmaEnc.c	/^static void RcTree_ReverseEncode(CRangeEnc *rc, CLzmaProb *probs, int numBitLevels, UInt32 symbol)$/;"	f	file:
RcTree_ReverseGetPrice	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 RcTree_ReverseGetPrice(const CLzmaProb *probs, int numBitLevels, UInt32 symbol, UInt32 *ProbPrices)$/;"	f	file:
Read	.\src\tools\lzma\Types.h	/^  Byte (*Read)(void *p); \/* reads one byte, returns 0 in case of EOF or error *\/$/;"	m	struct:__anon34
Read	.\src\tools\lzma\Types.h	/^  SRes (*Read)(void *p, void *buf, size_t *size);  \/* same as ISeqInStream::Read *\/$/;"	m	struct:__anon39
Read	.\src\tools\lzma\Types.h	/^  SRes (*Read)(void *p, void *buf, size_t *size);$/;"	m	struct:__anon36
Read	.\src\tools\lzma\Types.h	/^  SRes (*Read)(void *p, void *buf, size_t *size);$/;"	m	struct:__anon40
ReadFile	.\src\tools\file_utils.cpp	/^bool FileUtils::ReadFile(const char * path, std::string * content) {$/;"	f	class:phxrpc::FileUtils
ReadItem	.\src\tools\config.cpp	/^bool Config::ReadItem(const char * section, const char * key, $/;"	f	class:phxrpc::Config
ReadItem	.\src\tools\config.cpp	/^bool Config::ReadItem(const char * section, const char * key, char * value, size_t size) {$/;"	f	class:phxrpc::Config
ReadItem	.\src\tools\config.cpp	/^bool Config::ReadItem(const char * section, const char * key, int * value) {$/;"	f	class:phxrpc::Config
ReadItem	.\src\tools\config.cpp	/^bool Config::ReadItem(const char * section, const char * key, int * value, const int default_value) {$/;"	f	class:phxrpc::Config
ReadMatchDistances	.\src\tools\lzma\LzmaEnc.c	/^static UInt32 ReadMatchDistances(CLzmaEnc *p, UInt32 *numDistancePairsRes)$/;"	f	file:
RepLenCoder	.\src\tools\lzma\LzmaDec.c	104;"	d	file:
S11	.\src\common\md5.c	6;"	d	file:
S12	.\src\common\md5.c	7;"	d	file:
S13	.\src\common\md5.c	8;"	d	file:
S14	.\src\common\md5.c	9;"	d	file:
S21	.\src\common\md5.c	10;"	d	file:
S22	.\src\common\md5.c	11;"	d	file:
S23	.\src\common\md5.c	12;"	d	file:
S24	.\src\common\md5.c	13;"	d	file:
S31	.\src\common\md5.c	14;"	d	file:
S32	.\src\common\md5.c	15;"	d	file:
S33	.\src\common\md5.c	16;"	d	file:
S34	.\src\common\md5.c	17;"	d	file:
S41	.\src\common\md5.c	18;"	d	file:
S42	.\src\common\md5.c	19;"	d	file:
S43	.\src\common\md5.c	20;"	d	file:
S44	.\src\common\md5.c	21;"	d	file:
SDBHash	.\src\common\hash.c	/^unsigned int SDBHash(const char *str)$/;"	f
SECTIONNAME_NOTEXIST	.\src\tools\config_util.h	13;"	d
SEEK_CUR	.\inc\zconf.h	297;"	d
SEEK_END	.\inc\zconf.h	298;"	d
SEEK_SET	.\inc\zconf.h	296;"	d
SIMPLEQ_EMPTY	.\inc\queue.h	233;"	d
SIMPLEQ_END	.\inc\queue.h	232;"	d
SIMPLEQ_ENTRY	.\inc\queue.h	223;"	d
SIMPLEQ_FIRST	.\inc\queue.h	231;"	d
SIMPLEQ_FOREACH	.\inc\queue.h	236;"	d
SIMPLEQ_HEAD	.\inc\queue.h	214;"	d
SIMPLEQ_HEAD_INITIALIZER	.\inc\queue.h	220;"	d
SIMPLEQ_INIT	.\inc\queue.h	244;"	d
SIMPLEQ_INSERT_AFTER	.\inc\queue.h	261;"	d
SIMPLEQ_INSERT_HEAD	.\inc\queue.h	249;"	d
SIMPLEQ_INSERT_TAIL	.\inc\queue.h	255;"	d
SIMPLEQ_NEXT	.\inc\queue.h	234;"	d
SIMPLEQ_REMOVE_HEAD	.\inc\queue.h	267;"	d
SIZE	.\src\common\sig_handler.c	27;"	d	file:
SKIP_FOOTER	.\src\tools\lzma\LzFind.c	481;"	d	file:
SKIP_HEADER	.\src\tools\lzma\LzFind.c	473;"	d	file:
SLIST_EMPTY	.\inc\queue.h	108;"	d
SLIST_END	.\inc\queue.h	107;"	d
SLIST_ENTRY	.\inc\queue.h	97;"	d
SLIST_FIRST	.\inc\queue.h	106;"	d
SLIST_FOREACH	.\inc\queue.h	111;"	d
SLIST_HEAD	.\inc\queue.h	88;"	d
SLIST_HEAD_INITIALIZER	.\inc\queue.h	93;"	d
SLIST_INIT	.\inc\queue.h	119;"	d
SLIST_INSERT_AFTER	.\inc\queue.h	123;"	d
SLIST_INSERT_HEAD	.\inc\queue.h	128;"	d
SLIST_NEXT	.\inc\queue.h	109;"	d
SLIST_REMOVE_HEAD	.\inc\queue.h	133;"	d
SMALL_MEDIUM	.\inc\zconf.h	183;"	d
SMALL_MEDIUM	.\inc\zconf.h	192;"	d
SQLITE3_TEXT	.\inc\sqlite3.h	3889;"	d
SQLITE_ABORT	.\inc\sqlite3.h	409;"	d
SQLITE_ABORT_ROLLBACK	.\inc\sqlite3.h	492;"	d
SQLITE_ACCESS_EXISTS	.\inc\sqlite3.h	1228;"	d
SQLITE_ACCESS_READ	.\inc\sqlite3.h	1230;"	d
SQLITE_ACCESS_READWRITE	.\inc\sqlite3.h	1229;"	d
SQLITE_ALTER_TABLE	.\inc\sqlite3.h	2661;"	d
SQLITE_ANALYZE	.\inc\sqlite3.h	2663;"	d
SQLITE_ANY	.\inc\sqlite3.h	4260;"	d
SQLITE_API	.\inc\sqlite3.h	52;"	d
SQLITE_ATTACH	.\inc\sqlite3.h	2659;"	d
SQLITE_AUTH	.\inc\sqlite3.h	428;"	d
SQLITE_AUTH_USER	.\inc\sqlite3.h	506;"	d
SQLITE_BLOB	.\inc\sqlite3.h	3882;"	d
SQLITE_BUSY	.\inc\sqlite3.h	410;"	d
SQLITE_BUSY_RECOVERY	.\inc\sqlite3.h	481;"	d
SQLITE_BUSY_SNAPSHOT	.\inc\sqlite3.h	482;"	d
SQLITE_CANTOPEN	.\inc\sqlite3.h	419;"	d
SQLITE_CANTOPEN_CONVPATH	.\inc\sqlite3.h	486;"	d
SQLITE_CANTOPEN_FULLPATH	.\inc\sqlite3.h	485;"	d
SQLITE_CANTOPEN_ISDIR	.\inc\sqlite3.h	484;"	d
SQLITE_CANTOPEN_NOTEMPDIR	.\inc\sqlite3.h	483;"	d
SQLITE_CDECL	.\inc\sqlite3.h	55;"	d
SQLITE_CHECKPOINT_FULL	.\inc\sqlite3.h	7509;"	d
SQLITE_CHECKPOINT_PASSIVE	.\inc\sqlite3.h	7508;"	d
SQLITE_CHECKPOINT_RESTART	.\inc\sqlite3.h	7510;"	d
SQLITE_CHECKPOINT_TRUNCATE	.\inc\sqlite3.h	7511;"	d
SQLITE_CONFIG_COVERING_INDEX_SCAN	.\inc\sqlite3.h	1809;"	d
SQLITE_CONFIG_GETMALLOC	.\inc\sqlite3.h	1794;"	d
SQLITE_CONFIG_GETMUTEX	.\inc\sqlite3.h	1800;"	d
SQLITE_CONFIG_GETPCACHE	.\inc\sqlite3.h	1804;"	d
SQLITE_CONFIG_GETPCACHE2	.\inc\sqlite3.h	1808;"	d
SQLITE_CONFIG_HEAP	.\inc\sqlite3.h	1797;"	d
SQLITE_CONFIG_LOG	.\inc\sqlite3.h	1805;"	d
SQLITE_CONFIG_LOOKASIDE	.\inc\sqlite3.h	1802;"	d
SQLITE_CONFIG_MALLOC	.\inc\sqlite3.h	1793;"	d
SQLITE_CONFIG_MEMSTATUS	.\inc\sqlite3.h	1798;"	d
SQLITE_CONFIG_MMAP_SIZE	.\inc\sqlite3.h	1811;"	d
SQLITE_CONFIG_MULTITHREAD	.\inc\sqlite3.h	1791;"	d
SQLITE_CONFIG_MUTEX	.\inc\sqlite3.h	1799;"	d
SQLITE_CONFIG_PAGECACHE	.\inc\sqlite3.h	1796;"	d
SQLITE_CONFIG_PCACHE	.\inc\sqlite3.h	1803;"	d
SQLITE_CONFIG_PCACHE2	.\inc\sqlite3.h	1807;"	d
SQLITE_CONFIG_PCACHE_HDRSZ	.\inc\sqlite3.h	1813;"	d
SQLITE_CONFIG_PMASZ	.\inc\sqlite3.h	1814;"	d
SQLITE_CONFIG_SCRATCH	.\inc\sqlite3.h	1795;"	d
SQLITE_CONFIG_SERIALIZED	.\inc\sqlite3.h	1792;"	d
SQLITE_CONFIG_SINGLETHREAD	.\inc\sqlite3.h	1790;"	d
SQLITE_CONFIG_SQLLOG	.\inc\sqlite3.h	1810;"	d
SQLITE_CONFIG_URI	.\inc\sqlite3.h	1806;"	d
SQLITE_CONFIG_WIN32_HEAPSIZE	.\inc\sqlite3.h	1812;"	d
SQLITE_CONSTRAINT	.\inc\sqlite3.h	424;"	d
SQLITE_CONSTRAINT_CHECK	.\inc\sqlite3.h	493;"	d
SQLITE_CONSTRAINT_COMMITHOOK	.\inc\sqlite3.h	494;"	d
SQLITE_CONSTRAINT_FOREIGNKEY	.\inc\sqlite3.h	495;"	d
SQLITE_CONSTRAINT_FUNCTION	.\inc\sqlite3.h	496;"	d
SQLITE_CONSTRAINT_NOTNULL	.\inc\sqlite3.h	497;"	d
SQLITE_CONSTRAINT_PRIMARYKEY	.\inc\sqlite3.h	498;"	d
SQLITE_CONSTRAINT_ROWID	.\inc\sqlite3.h	502;"	d
SQLITE_CONSTRAINT_TRIGGER	.\inc\sqlite3.h	499;"	d
SQLITE_CONSTRAINT_UNIQUE	.\inc\sqlite3.h	500;"	d
SQLITE_CONSTRAINT_VTAB	.\inc\sqlite3.h	501;"	d
SQLITE_COPY	.\inc\sqlite3.h	2668;"	d
SQLITE_CORRUPT	.\inc\sqlite3.h	416;"	d
SQLITE_CORRUPT_VTAB	.\inc\sqlite3.h	487;"	d
SQLITE_CREATE_INDEX	.\inc\sqlite3.h	2636;"	d
SQLITE_CREATE_TABLE	.\inc\sqlite3.h	2637;"	d
SQLITE_CREATE_TEMP_INDEX	.\inc\sqlite3.h	2638;"	d
SQLITE_CREATE_TEMP_TABLE	.\inc\sqlite3.h	2639;"	d
SQLITE_CREATE_TEMP_TRIGGER	.\inc\sqlite3.h	2640;"	d
SQLITE_CREATE_TEMP_VIEW	.\inc\sqlite3.h	2641;"	d
SQLITE_CREATE_TRIGGER	.\inc\sqlite3.h	2642;"	d
SQLITE_CREATE_VIEW	.\inc\sqlite3.h	2643;"	d
SQLITE_CREATE_VTABLE	.\inc\sqlite3.h	2664;"	d
SQLITE_DBCONFIG_ENABLE_FKEY	.\inc\sqlite3.h	1875;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	.\inc\sqlite3.h	1876;"	d
SQLITE_DBCONFIG_LOOKASIDE	.\inc\sqlite3.h	1874;"	d
SQLITE_DBSTATUS_CACHE_HIT	.\inc\sqlite3.h	6624;"	d
SQLITE_DBSTATUS_CACHE_MISS	.\inc\sqlite3.h	6625;"	d
SQLITE_DBSTATUS_CACHE_USED	.\inc\sqlite3.h	6618;"	d
SQLITE_DBSTATUS_CACHE_WRITE	.\inc\sqlite3.h	6626;"	d
SQLITE_DBSTATUS_DEFERRED_FKS	.\inc\sqlite3.h	6627;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	.\inc\sqlite3.h	6621;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	.\inc\sqlite3.h	6623;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	.\inc\sqlite3.h	6622;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	.\inc\sqlite3.h	6617;"	d
SQLITE_DBSTATUS_MAX	.\inc\sqlite3.h	6628;"	d
SQLITE_DBSTATUS_SCHEMA_USED	.\inc\sqlite3.h	6619;"	d
SQLITE_DBSTATUS_STMT_USED	.\inc\sqlite3.h	6620;"	d
SQLITE_DELETE	.\inc\sqlite3.h	2644;"	d
SQLITE_DENY	.\inc\sqlite3.h	2613;"	d
SQLITE_DEPRECATED	.\inc\sqlite3.h	74;"	d
SQLITE_DETACH	.\inc\sqlite3.h	2660;"	d
SQLITE_DETERMINISTIC	.\inc\sqlite3.h	4271;"	d
SQLITE_DONE	.\inc\sqlite3.h	435;"	d
SQLITE_DROP_INDEX	.\inc\sqlite3.h	2645;"	d
SQLITE_DROP_TABLE	.\inc\sqlite3.h	2646;"	d
SQLITE_DROP_TEMP_INDEX	.\inc\sqlite3.h	2647;"	d
SQLITE_DROP_TEMP_TABLE	.\inc\sqlite3.h	2648;"	d
SQLITE_DROP_TEMP_TRIGGER	.\inc\sqlite3.h	2649;"	d
SQLITE_DROP_TEMP_VIEW	.\inc\sqlite3.h	2650;"	d
SQLITE_DROP_TRIGGER	.\inc\sqlite3.h	2651;"	d
SQLITE_DROP_VIEW	.\inc\sqlite3.h	2652;"	d
SQLITE_DROP_VTABLE	.\inc\sqlite3.h	2665;"	d
SQLITE_EMPTY	.\inc\sqlite3.h	421;"	d
SQLITE_ERROR	.\inc\sqlite3.h	406;"	d
SQLITE_EXPERIMENTAL	.\inc\sqlite3.h	75;"	d
SQLITE_EXTENSION_INIT1	.\inc\sqlite3ext.h	506;"	d
SQLITE_EXTENSION_INIT1	.\inc\sqlite3ext.h	513;"	d
SQLITE_EXTENSION_INIT2	.\inc\sqlite3ext.h	507;"	d
SQLITE_EXTENSION_INIT2	.\inc\sqlite3ext.h	514;"	d
SQLITE_EXTENSION_INIT3	.\inc\sqlite3ext.h	508;"	d
SQLITE_EXTENSION_INIT3	.\inc\sqlite3ext.h	515;"	d
SQLITE_EXTERN	.\inc\sqlite3.h	49;"	d
SQLITE_FAIL	.\inc\sqlite3.h	7596;"	d
SQLITE_FCNTL_BUSYHANDLER	.\inc\sqlite3.h	982;"	d
SQLITE_FCNTL_CHUNK_SIZE	.\inc\sqlite3.h	973;"	d
SQLITE_FCNTL_COMMIT_PHASETWO	.\inc\sqlite3.h	988;"	d
SQLITE_FCNTL_FILE_POINTER	.\inc\sqlite3.h	974;"	d
SQLITE_FCNTL_GET_LOCKPROXYFILE	.\inc\sqlite3.h	969;"	d
SQLITE_FCNTL_HAS_MOVED	.\inc\sqlite3.h	986;"	d
SQLITE_FCNTL_LAST_ERRNO	.\inc\sqlite3.h	971;"	d
SQLITE_FCNTL_LOCKSTATE	.\inc\sqlite3.h	968;"	d
SQLITE_FCNTL_MMAP_SIZE	.\inc\sqlite3.h	984;"	d
SQLITE_FCNTL_OVERWRITE	.\inc\sqlite3.h	978;"	d
SQLITE_FCNTL_PERSIST_WAL	.\inc\sqlite3.h	977;"	d
SQLITE_FCNTL_POWERSAFE_OVERWRITE	.\inc\sqlite3.h	980;"	d
SQLITE_FCNTL_PRAGMA	.\inc\sqlite3.h	981;"	d
SQLITE_FCNTL_SET_LOCKPROXYFILE	.\inc\sqlite3.h	970;"	d
SQLITE_FCNTL_SIZE_HINT	.\inc\sqlite3.h	972;"	d
SQLITE_FCNTL_SYNC	.\inc\sqlite3.h	987;"	d
SQLITE_FCNTL_SYNC_OMITTED	.\inc\sqlite3.h	975;"	d
SQLITE_FCNTL_TEMPFILENAME	.\inc\sqlite3.h	983;"	d
SQLITE_FCNTL_TRACE	.\inc\sqlite3.h	985;"	d
SQLITE_FCNTL_VFSNAME	.\inc\sqlite3.h	979;"	d
SQLITE_FCNTL_WAL_BLOCK	.\inc\sqlite3.h	990;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	.\inc\sqlite3.h	976;"	d
SQLITE_FCNTL_WIN32_SET_HANDLE	.\inc\sqlite3.h	989;"	d
SQLITE_FLOAT	.\inc\sqlite3.h	3881;"	d
SQLITE_FORMAT	.\inc\sqlite3.h	429;"	d
SQLITE_FULL	.\inc\sqlite3.h	418;"	d
SQLITE_FUNCTION	.\inc\sqlite3.h	2666;"	d
SQLITE_GET_LOCKPROXYFILE	.\inc\sqlite3.h	993;"	d
SQLITE_IGNORE	.\inc\sqlite3.h	2614;"	d
SQLITE_INDEX_CONSTRAINT_EQ	.\inc\sqlite3.h	5622;"	d
SQLITE_INDEX_CONSTRAINT_GE	.\inc\sqlite3.h	5626;"	d
SQLITE_INDEX_CONSTRAINT_GT	.\inc\sqlite3.h	5623;"	d
SQLITE_INDEX_CONSTRAINT_LE	.\inc\sqlite3.h	5624;"	d
SQLITE_INDEX_CONSTRAINT_LT	.\inc\sqlite3.h	5625;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	.\inc\sqlite3.h	5627;"	d
SQLITE_INSERT	.\inc\sqlite3.h	2653;"	d
SQLITE_INTEGER	.\inc\sqlite3.h	3880;"	d
SQLITE_INTERNAL	.\inc\sqlite3.h	407;"	d
SQLITE_INTERRUPT	.\inc\sqlite3.h	414;"	d
SQLITE_IOCAP_ATOMIC	.\inc\sqlite3.h	566;"	d
SQLITE_IOCAP_ATOMIC16K	.\inc\sqlite3.h	572;"	d
SQLITE_IOCAP_ATOMIC1K	.\inc\sqlite3.h	568;"	d
SQLITE_IOCAP_ATOMIC2K	.\inc\sqlite3.h	569;"	d
SQLITE_IOCAP_ATOMIC32K	.\inc\sqlite3.h	573;"	d
SQLITE_IOCAP_ATOMIC4K	.\inc\sqlite3.h	570;"	d
SQLITE_IOCAP_ATOMIC512	.\inc\sqlite3.h	567;"	d
SQLITE_IOCAP_ATOMIC64K	.\inc\sqlite3.h	574;"	d
SQLITE_IOCAP_ATOMIC8K	.\inc\sqlite3.h	571;"	d
SQLITE_IOCAP_IMMUTABLE	.\inc\sqlite3.h	579;"	d
SQLITE_IOCAP_POWERSAFE_OVERWRITE	.\inc\sqlite3.h	578;"	d
SQLITE_IOCAP_SAFE_APPEND	.\inc\sqlite3.h	575;"	d
SQLITE_IOCAP_SEQUENTIAL	.\inc\sqlite3.h	576;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	.\inc\sqlite3.h	577;"	d
SQLITE_IOERR	.\inc\sqlite3.h	415;"	d
SQLITE_IOERR_ACCESS	.\inc\sqlite3.h	466;"	d
SQLITE_IOERR_BLOCKED	.\inc\sqlite3.h	464;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	.\inc\sqlite3.h	467;"	d
SQLITE_IOERR_CLOSE	.\inc\sqlite3.h	469;"	d
SQLITE_IOERR_CONVPATH	.\inc\sqlite3.h	479;"	d
SQLITE_IOERR_DELETE	.\inc\sqlite3.h	463;"	d
SQLITE_IOERR_DELETE_NOENT	.\inc\sqlite3.h	476;"	d
SQLITE_IOERR_DIR_CLOSE	.\inc\sqlite3.h	470;"	d
SQLITE_IOERR_DIR_FSYNC	.\inc\sqlite3.h	458;"	d
SQLITE_IOERR_FSTAT	.\inc\sqlite3.h	460;"	d
SQLITE_IOERR_FSYNC	.\inc\sqlite3.h	457;"	d
SQLITE_IOERR_GETTEMPPATH	.\inc\sqlite3.h	478;"	d
SQLITE_IOERR_LOCK	.\inc\sqlite3.h	468;"	d
SQLITE_IOERR_MMAP	.\inc\sqlite3.h	477;"	d
SQLITE_IOERR_NOMEM	.\inc\sqlite3.h	465;"	d
SQLITE_IOERR_RDLOCK	.\inc\sqlite3.h	462;"	d
SQLITE_IOERR_READ	.\inc\sqlite3.h	454;"	d
SQLITE_IOERR_SEEK	.\inc\sqlite3.h	475;"	d
SQLITE_IOERR_SHMLOCK	.\inc\sqlite3.h	473;"	d
SQLITE_IOERR_SHMMAP	.\inc\sqlite3.h	474;"	d
SQLITE_IOERR_SHMOPEN	.\inc\sqlite3.h	471;"	d
SQLITE_IOERR_SHMSIZE	.\inc\sqlite3.h	472;"	d
SQLITE_IOERR_SHORT_READ	.\inc\sqlite3.h	455;"	d
SQLITE_IOERR_TRUNCATE	.\inc\sqlite3.h	459;"	d
SQLITE_IOERR_UNLOCK	.\inc\sqlite3.h	461;"	d
SQLITE_IOERR_WRITE	.\inc\sqlite3.h	456;"	d
SQLITE_LAST_ERRNO	.\inc\sqlite3.h	995;"	d
SQLITE_LIMIT_ATTACHED	.\inc\sqlite3.h	3202;"	d
SQLITE_LIMIT_COLUMN	.\inc\sqlite3.h	3197;"	d
SQLITE_LIMIT_COMPOUND_SELECT	.\inc\sqlite3.h	3199;"	d
SQLITE_LIMIT_EXPR_DEPTH	.\inc\sqlite3.h	3198;"	d
SQLITE_LIMIT_FUNCTION_ARG	.\inc\sqlite3.h	3201;"	d
SQLITE_LIMIT_LENGTH	.\inc\sqlite3.h	3195;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	.\inc\sqlite3.h	3203;"	d
SQLITE_LIMIT_SQL_LENGTH	.\inc\sqlite3.h	3196;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	.\inc\sqlite3.h	3205;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	.\inc\sqlite3.h	3204;"	d
SQLITE_LIMIT_VDBE_OP	.\inc\sqlite3.h	3200;"	d
SQLITE_LIMIT_WORKER_THREADS	.\inc\sqlite3.h	3206;"	d
SQLITE_LOCKED	.\inc\sqlite3.h	411;"	d
SQLITE_LOCKED_SHAREDCACHE	.\inc\sqlite3.h	480;"	d
SQLITE_LOCK_EXCLUSIVE	.\inc\sqlite3.h	592;"	d
SQLITE_LOCK_NONE	.\inc\sqlite3.h	588;"	d
SQLITE_LOCK_PENDING	.\inc\sqlite3.h	591;"	d
SQLITE_LOCK_RESERVED	.\inc\sqlite3.h	590;"	d
SQLITE_LOCK_SHARED	.\inc\sqlite3.h	589;"	d
SQLITE_MISMATCH	.\inc\sqlite3.h	425;"	d
SQLITE_MISUSE	.\inc\sqlite3.h	426;"	d
SQLITE_MUTEX_FAST	.\inc\sqlite3.h	6259;"	d
SQLITE_MUTEX_RECURSIVE	.\inc\sqlite3.h	6260;"	d
SQLITE_MUTEX_STATIC_APP1	.\inc\sqlite3.h	6269;"	d
SQLITE_MUTEX_STATIC_APP2	.\inc\sqlite3.h	6270;"	d
SQLITE_MUTEX_STATIC_APP3	.\inc\sqlite3.h	6271;"	d
SQLITE_MUTEX_STATIC_LRU	.\inc\sqlite3.h	6266;"	d
SQLITE_MUTEX_STATIC_LRU2	.\inc\sqlite3.h	6267;"	d
SQLITE_MUTEX_STATIC_MASTER	.\inc\sqlite3.h	6261;"	d
SQLITE_MUTEX_STATIC_MEM	.\inc\sqlite3.h	6262;"	d
SQLITE_MUTEX_STATIC_MEM2	.\inc\sqlite3.h	6263;"	d
SQLITE_MUTEX_STATIC_OPEN	.\inc\sqlite3.h	6264;"	d
SQLITE_MUTEX_STATIC_PMEM	.\inc\sqlite3.h	6268;"	d
SQLITE_MUTEX_STATIC_PRNG	.\inc\sqlite3.h	6265;"	d
SQLITE_NOLFS	.\inc\sqlite3.h	427;"	d
SQLITE_NOMEM	.\inc\sqlite3.h	412;"	d
SQLITE_NOTADB	.\inc\sqlite3.h	431;"	d
SQLITE_NOTFOUND	.\inc\sqlite3.h	417;"	d
SQLITE_NOTICE	.\inc\sqlite3.h	432;"	d
SQLITE_NOTICE_RECOVER_ROLLBACK	.\inc\sqlite3.h	504;"	d
SQLITE_NOTICE_RECOVER_WAL	.\inc\sqlite3.h	503;"	d
SQLITE_NULL	.\inc\sqlite3.h	3883;"	d
SQLITE_OK	.\inc\sqlite3.h	404;"	d
SQLITE_OPEN_AUTOPROXY	.\inc\sqlite3.h	520;"	d
SQLITE_OPEN_CREATE	.\inc\sqlite3.h	517;"	d
SQLITE_OPEN_DELETEONCLOSE	.\inc\sqlite3.h	518;"	d
SQLITE_OPEN_EXCLUSIVE	.\inc\sqlite3.h	519;"	d
SQLITE_OPEN_FULLMUTEX	.\inc\sqlite3.h	531;"	d
SQLITE_OPEN_MAIN_DB	.\inc\sqlite3.h	523;"	d
SQLITE_OPEN_MAIN_JOURNAL	.\inc\sqlite3.h	526;"	d
SQLITE_OPEN_MASTER_JOURNAL	.\inc\sqlite3.h	529;"	d
SQLITE_OPEN_MEMORY	.\inc\sqlite3.h	522;"	d
SQLITE_OPEN_NOMUTEX	.\inc\sqlite3.h	530;"	d
SQLITE_OPEN_PRIVATECACHE	.\inc\sqlite3.h	533;"	d
SQLITE_OPEN_READONLY	.\inc\sqlite3.h	515;"	d
SQLITE_OPEN_READWRITE	.\inc\sqlite3.h	516;"	d
SQLITE_OPEN_SHAREDCACHE	.\inc\sqlite3.h	532;"	d
SQLITE_OPEN_SUBJOURNAL	.\inc\sqlite3.h	528;"	d
SQLITE_OPEN_TEMP_DB	.\inc\sqlite3.h	524;"	d
SQLITE_OPEN_TEMP_JOURNAL	.\inc\sqlite3.h	527;"	d
SQLITE_OPEN_TRANSIENT_DB	.\inc\sqlite3.h	525;"	d
SQLITE_OPEN_URI	.\inc\sqlite3.h	521;"	d
SQLITE_OPEN_WAL	.\inc\sqlite3.h	534;"	d
SQLITE_PERM	.\inc\sqlite3.h	408;"	d
SQLITE_PRAGMA	.\inc\sqlite3.h	2654;"	d
SQLITE_PROTOCOL	.\inc\sqlite3.h	420;"	d
SQLITE_RANGE	.\inc\sqlite3.h	430;"	d
SQLITE_READ	.\inc\sqlite3.h	2655;"	d
SQLITE_READONLY	.\inc\sqlite3.h	413;"	d
SQLITE_READONLY_CANTLOCK	.\inc\sqlite3.h	489;"	d
SQLITE_READONLY_DBMOVED	.\inc\sqlite3.h	491;"	d
SQLITE_READONLY_RECOVERY	.\inc\sqlite3.h	488;"	d
SQLITE_READONLY_ROLLBACK	.\inc\sqlite3.h	490;"	d
SQLITE_RECURSIVE	.\inc\sqlite3.h	2669;"	d
SQLITE_REINDEX	.\inc\sqlite3.h	2662;"	d
SQLITE_REPLACE	.\inc\sqlite3.h	7598;"	d
SQLITE_ROLLBACK	.\inc\sqlite3.h	7594;"	d
SQLITE_ROW	.\inc\sqlite3.h	434;"	d
SQLITE_SAVEPOINT	.\inc\sqlite3.h	2667;"	d
SQLITE_SCANSTAT_EST	.\inc\sqlite3.h	7649;"	d
SQLITE_SCANSTAT_EXPLAIN	.\inc\sqlite3.h	7651;"	d
SQLITE_SCANSTAT_NAME	.\inc\sqlite3.h	7650;"	d
SQLITE_SCANSTAT_NLOOP	.\inc\sqlite3.h	7647;"	d
SQLITE_SCANSTAT_NVISIT	.\inc\sqlite3.h	7648;"	d
SQLITE_SCANSTAT_SELECTID	.\inc\sqlite3.h	7652;"	d
SQLITE_SCHEMA	.\inc\sqlite3.h	422;"	d
SQLITE_SELECT	.\inc\sqlite3.h	2656;"	d
SQLITE_SET_LOCKPROXYFILE	.\inc\sqlite3.h	994;"	d
SQLITE_SHM_EXCLUSIVE	.\inc\sqlite3.h	1257;"	d
SQLITE_SHM_LOCK	.\inc\sqlite3.h	1255;"	d
SQLITE_SHM_NLOCK	.\inc\sqlite3.h	1267;"	d
SQLITE_SHM_SHARED	.\inc\sqlite3.h	1256;"	d
SQLITE_SHM_UNLOCK	.\inc\sqlite3.h	1254;"	d
SQLITE_SOURCE_ID	.\inc\sqlite3.h	116;"	d
SQLITE_STATIC	.\inc\sqlite3.h	4494;"	d
SQLITE_STATUS_MALLOC_COUNT	.\inc\sqlite3.h	6500;"	d
SQLITE_STATUS_MALLOC_SIZE	.\inc\sqlite3.h	6496;"	d
SQLITE_STATUS_MEMORY_USED	.\inc\sqlite3.h	6491;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	.\inc\sqlite3.h	6493;"	d
SQLITE_STATUS_PAGECACHE_SIZE	.\inc\sqlite3.h	6498;"	d
SQLITE_STATUS_PAGECACHE_USED	.\inc\sqlite3.h	6492;"	d
SQLITE_STATUS_PARSER_STACK	.\inc\sqlite3.h	6497;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	.\inc\sqlite3.h	6495;"	d
SQLITE_STATUS_SCRATCH_SIZE	.\inc\sqlite3.h	6499;"	d
SQLITE_STATUS_SCRATCH_USED	.\inc\sqlite3.h	6494;"	d
SQLITE_STDCALL	.\inc\sqlite3.h	58;"	d
SQLITE_STMTSTATUS_AUTOINDEX	.\inc\sqlite3.h	6696;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	.\inc\sqlite3.h	6694;"	d
SQLITE_STMTSTATUS_SORT	.\inc\sqlite3.h	6695;"	d
SQLITE_STMTSTATUS_VM_STEP	.\inc\sqlite3.h	6697;"	d
SQLITE_SYNC_DATAONLY	.\inc\sqlite3.h	622;"	d
SQLITE_SYNC_FULL	.\inc\sqlite3.h	621;"	d
SQLITE_SYNC_NORMAL	.\inc\sqlite3.h	620;"	d
SQLITE_TESTCTRL_ALWAYS	.\inc\sqlite3.h	6359;"	d
SQLITE_TESTCTRL_ASSERT	.\inc\sqlite3.h	6358;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	.\inc\sqlite3.h	6356;"	d
SQLITE_TESTCTRL_BITVEC_TEST	.\inc\sqlite3.h	6354;"	d
SQLITE_TESTCTRL_BYTEORDER	.\inc\sqlite3.h	6368;"	d
SQLITE_TESTCTRL_EXPLAIN_STMT	.\inc\sqlite3.h	6365;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	.\inc\sqlite3.h	6355;"	d
SQLITE_TESTCTRL_FIRST	.\inc\sqlite3.h	6350;"	d
SQLITE_TESTCTRL_IMPOSTER	.\inc\sqlite3.h	6371;"	d
SQLITE_TESTCTRL_ISINIT	.\inc\sqlite3.h	6369;"	d
SQLITE_TESTCTRL_ISKEYWORD	.\inc\sqlite3.h	6362;"	d
SQLITE_TESTCTRL_LAST	.\inc\sqlite3.h	6372;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	.\inc\sqlite3.h	6364;"	d
SQLITE_TESTCTRL_NEVER_CORRUPT	.\inc\sqlite3.h	6366;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	.\inc\sqlite3.h	6361;"	d
SQLITE_TESTCTRL_PENDING_BYTE	.\inc\sqlite3.h	6357;"	d
SQLITE_TESTCTRL_PRNG_RESET	.\inc\sqlite3.h	6353;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	.\inc\sqlite3.h	6352;"	d
SQLITE_TESTCTRL_PRNG_SAVE	.\inc\sqlite3.h	6351;"	d
SQLITE_TESTCTRL_RESERVE	.\inc\sqlite3.h	6360;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	.\inc\sqlite3.h	6363;"	d
SQLITE_TESTCTRL_SORTER_MMAP	.\inc\sqlite3.h	6370;"	d
SQLITE_TESTCTRL_VDBE_COVERAGE	.\inc\sqlite3.h	6367;"	d
SQLITE_TEXT	.\inc\sqlite3.h	3885;"	d
SQLITE_TEXT	.\inc\sqlite3.h	3887;"	d
SQLITE_TOOBIG	.\inc\sqlite3.h	423;"	d
SQLITE_TRANSACTION	.\inc\sqlite3.h	2657;"	d
SQLITE_TRANSIENT	.\inc\sqlite3.h	4495;"	d
SQLITE_UPDATE	.\inc\sqlite3.h	2658;"	d
SQLITE_UTF16	.\inc\sqlite3.h	4259;"	d
SQLITE_UTF16BE	.\inc\sqlite3.h	4258;"	d
SQLITE_UTF16LE	.\inc\sqlite3.h	4257;"	d
SQLITE_UTF16_ALIGNED	.\inc\sqlite3.h	4261;"	d
SQLITE_UTF8	.\inc\sqlite3.h	4256;"	d
SQLITE_VERSION	.\inc\sqlite3.h	114;"	d
SQLITE_VERSION	.\inc\sqlite3.h	81;"	d
SQLITE_VERSION_NUMBER	.\inc\sqlite3.h	115;"	d
SQLITE_VERSION_NUMBER	.\inc\sqlite3.h	84;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	.\inc\sqlite3.h	7568;"	d
SQLITE_WARNING	.\inc\sqlite3.h	433;"	d
SQLITE_WARNING_AUTOINDEX	.\inc\sqlite3.h	505;"	d
SRes	.\src\tools\lzma\Types.h	/^typedef int SRes;$/;"	t
STDC	.\inc\zconf.h	106;"	d
STDC	.\inc\zconf.h	109;"	d
STDC	.\inc\zconf.h	112;"	d
STDC	.\inc\zconf.h	115;"	d
STDC	.\inc\zconf.h	119;"	d
STDC	.\inc\zconf.h	97;"	d
STDC99	.\inc\zconf.h	101;"	d
STRING_EQUAL	.\src\tools\config_util.h	17;"	d
STRING_LENNOTEQUAL	.\src\tools\config_util.h	15;"	d
STRING_NOTEQUAL	.\src\tools\config_util.h	16;"	d
STRING_PATH_SEPARATOR	.\src\tools\lzma\Types.h	240;"	d
STRING_PATH_SEPARATOR	.\src\tools\lzma\Types.h	247;"	d
STR_H	.\lib\hashtable\str.h	2;"	d
SUCCESS	.\lib\hashtable\hashtable.h	15;"	d
SUCCESS	.\src\tools\config_util.h	9;"	d
SYS16BIT	.\inc\zconf.h	79;"	d
SZ_ERROR_ARCHIVE	.\src\tools\lzma\Types.h	40;"	d
SZ_ERROR_CRC	.\src\tools\lzma\Types.h	29;"	d
SZ_ERROR_DATA	.\src\tools\lzma\Types.h	27;"	d
SZ_ERROR_FAIL	.\src\tools\lzma\Types.h	37;"	d
SZ_ERROR_INPUT_EOF	.\src\tools\lzma\Types.h	32;"	d
SZ_ERROR_MEM	.\src\tools\lzma\Types.h	28;"	d
SZ_ERROR_NO_ARCHIVE	.\src\tools\lzma\Types.h	41;"	d
SZ_ERROR_OUTPUT_EOF	.\src\tools\lzma\Types.h	33;"	d
SZ_ERROR_PARAM	.\src\tools\lzma\Types.h	31;"	d
SZ_ERROR_PROGRESS	.\src\tools\lzma\Types.h	36;"	d
SZ_ERROR_READ	.\src\tools\lzma\Types.h	34;"	d
SZ_ERROR_THREAD	.\src\tools\lzma\Types.h	38;"	d
SZ_ERROR_UNSUPPORTED	.\src\tools\lzma\Types.h	30;"	d
SZ_ERROR_WRITE	.\src\tools\lzma\Types.h	35;"	d
SZ_OK	.\src\tools\lzma\Types.h	25;"	d
SZ_SEEK_CUR	.\src\tools\lzma\Types.h	/^  SZ_SEEK_CUR = 1,$/;"	e	enum:__anon38
SZ_SEEK_END	.\src\tools\lzma\Types.h	/^  SZ_SEEK_END = 2$/;"	e	enum:__anon38
SZ_SEEK_SET	.\src\tools\lzma\Types.h	/^  SZ_SEEK_SET = 0,$/;"	e	enum:__anon38
SecToLook_CreateVTable	.\src\tools\lzma\7zStream.c	/^void SecToLook_CreateVTable(CSecToLook *p)$/;"	f
SecToLook_Read	.\src\tools\lzma\7zStream.c	/^static SRes SecToLook_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
SecToRead_CreateVTable	.\src\tools\lzma\7zStream.c	/^void SecToRead_CreateVTable(CSecToRead *p)$/;"	f
SecToRead_Read	.\src\tools\lzma\7zStream.c	/^static SRes SecToRead_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
Seek	.\src\tools\lzma\Types.h	/^  SRes (*Seek)(void *p, Int64 *pos, ESzSeek origin);$/;"	m	struct:__anon39
Seek	.\src\tools\lzma\Types.h	/^  SRes (*Seek)(void *p, Int64 *pos, ESzSeek origin);$/;"	m	struct:__anon40
SeqInStream_Read	.\src\tools\lzma\7zStream.c	/^SRes SeqInStream_Read(ISeqInStream *stream, void *buf, size_t size)$/;"	f
SeqInStream_Read2	.\src\tools\lzma\7zStream.c	/^SRes SeqInStream_Read2(ISeqInStream *stream, void *buf, size_t size, SRes errorType)$/;"	f
SeqInStream_ReadByte	.\src\tools\lzma\7zStream.c	/^SRes SeqInStream_ReadByte(ISeqInStream *stream, Byte *buf)$/;"	f
SetLargePageSize	.\src\tools\lzma\Alloc.c	/^void SetLargePageSize()$/;"	f
SizeT	.\src\tools\lzma\Types.h	/^typedef UInt32 SizeT;$/;"	t
SizeT	.\src\tools\lzma\Types.h	/^typedef size_t SizeT;$/;"	t
Skip	.\src\tools\lzma\LzFind.h	/^  Mf_Skip_Func Skip;$/;"	m	struct:_IMatchFinder
Skip	.\src\tools\lzma\Types.h	/^  SRes (*Skip)(void *p, size_t offset);$/;"	m	struct:__anon40
SkipMatchesSpec	.\src\tools\lzma\LzFind.c	/^static void SkipMatchesSpec(UInt32 lenLimit, UInt32 curMatch, UInt32 pos, const Byte *cur, CLzRef *son,$/;"	f	file:
SpecPos	.\src\tools\lzma\LzmaDec.c	101;"	d	file:
SzAlloc	.\src\tools\lzma\LzmaLib.c	/^static void *SzAlloc(void *p, size_t size) { p = p; return MyAlloc(size); }$/;"	f	file:
SzAlloc	.\src\tools\lzma\LzmaUtil.c	/^static void *SzAlloc(void *p, size_t size) { p = p; return MyAlloc(size); }$/;"	f	file:
SzFree	.\src\tools\lzma\LzmaLib.c	/^static void SzFree(void *p, void *address) { p = p; MyFree(address); }$/;"	f	file:
SzFree	.\src\tools\lzma\LzmaUtil.c	/^static void SzFree(void *p, void *address) { p = p; MyFree(address); }$/;"	f	file:
TAILQ_EMPTY	.\inc\queue.h	301;"	d
TAILQ_END	.\inc\queue.h	294;"	d
TAILQ_ENTRY	.\inc\queue.h	284;"	d
TAILQ_FIRST	.\inc\queue.h	293;"	d
TAILQ_FOREACH	.\inc\queue.h	304;"	d
TAILQ_FOREACH_REVERSE	.\inc\queue.h	309;"	d
TAILQ_HEAD	.\inc\queue.h	275;"	d
TAILQ_HEAD_INITIALIZER	.\inc\queue.h	281;"	d
TAILQ_INIT	.\inc\queue.h	317;"	d
TAILQ_INSERT_AFTER	.\inc\queue.h	341;"	d
TAILQ_INSERT_BEFORE	.\inc\queue.h	352;"	d
TAILQ_INSERT_HEAD	.\inc\queue.h	322;"	d
TAILQ_INSERT_TAIL	.\inc\queue.h	333;"	d
TAILQ_LAST	.\inc\queue.h	296;"	d
TAILQ_NEXT	.\inc\queue.h	295;"	d
TAILQ_PREV	.\inc\queue.h	299;"	d
TAILQ_REMOVE	.\inc\queue.h	359;"	d
TAILQ_REPLACE	.\inc\queue.h	368;"	d
TARGET	.\env.mk	/^TARGET := wmq$/;"	m
TARGET_DIRS	.\env.mk	/^TARGET_DIRS :=src\/ src\/common src\/tools\/lzma src\/tools\\$/;"	m
TGAP_LIST_APPEND_LIST	.\inc\lists.h	698;"	d
TGAP_LIST_EMPTY	.\inc\lists.h	411;"	d
TGAP_LIST_ENTRY	.\inc\lists.h	371;"	d
TGAP_LIST_FIRST	.\inc\lists.h	382;"	d
TGAP_LIST_HEAD	.\inc\lists.h	150;"	d
TGAP_LIST_HEAD_DESTROY	.\inc\lists.h	598;"	d
TGAP_LIST_HEAD_INIT	.\inc\lists.h	571;"	d
TGAP_LIST_HEAD_INIT_NOLOCK	.\inc\lists.h	626;"	d
TGAP_LIST_HEAD_INIT_VALUE	.\inc\lists.h	211;"	d
TGAP_LIST_HEAD_NOLOCK	.\inc\lists.h	202;"	d
TGAP_LIST_HEAD_NOLOCK_INIT_VALUE	.\inc\lists.h	229;"	d
TGAP_LIST_HEAD_NOLOCK_STATIC	.\inc\lists.h	307;"	d
TGAP_LIST_HEAD_SET	.\inc\lists.h	321;"	d
TGAP_LIST_HEAD_SET_NOLOCK	.\inc\lists.h	349;"	d
TGAP_LIST_HEAD_STATIC	.\inc\lists.h	252;"	d
TGAP_LIST_INSERT_AFTER	.\inc\lists.h	640;"	d
TGAP_LIST_INSERT_BEFORE_CURRENT	.\inc\lists.h	544;"	d
TGAP_LIST_INSERT_HEAD	.\inc\lists.h	656;"	d
TGAP_LIST_INSERT_TAIL	.\inc\lists.h	676;"	d
TGAP_LIST_LOCK	.\inc\lists.h	46;"	d
TGAP_LIST_LTGAP	.\inc\lists.h	390;"	d
TGAP_LIST_MOVE_CURRENT	.\inc\lists.h	527;"	d
TGAP_LIST_NEXT	.\inc\lists.h	400;"	d
TGAP_LIST_REMOVE	.\inc\lists.h	742;"	d
TGAP_LIST_REMOVE_CURRENT	.\inc\lists.h	514;"	d
TGAP_LIST_REMOVE_HEAD	.\inc\lists.h	721;"	d
TGAP_LIST_TRAVERSE	.\inc\lists.h	451;"	d
TGAP_LIST_TRAVERSE_SAFE_BEGIN	.\inc\lists.h	489;"	d
TGAP_LIST_TRAVERSE_SAFE_END	.\inc\lists.h	560;"	d
TGAP_LIST_TRYLOCK	.\inc\lists.h	82;"	d
TGAP_LIST_UNLOCK	.\inc\lists.h	117;"	d
TGAP_MUTEX_INIT_W_CONSTRUCTORS	.\inc\lists.h	20;"	d
TGAP_MUTEX_KIND	.\inc\lists.h	26;"	d
TGAP_MUTEX_KIND	.\inc\lists.h	29;"	d
TGAP_RWLIST_APPEND_LIST	.\inc\lists.h	710;"	d
TGAP_RWLIST_EMPTY	.\inc\lists.h	413;"	d
TGAP_RWLIST_ENTRY	.\inc\lists.h	376;"	d
TGAP_RWLIST_FIRST	.\inc\lists.h	384;"	d
TGAP_RWLIST_HEAD	.\inc\lists.h	176;"	d
TGAP_RWLIST_HEAD_DESTROY	.\inc\lists.h	612;"	d
TGAP_RWLIST_HEAD_INIT	.\inc\lists.h	584;"	d
TGAP_RWLIST_HEAD_INIT_VALUE	.\inc\lists.h	220;"	d
TGAP_RWLIST_HEAD_SET	.\inc\lists.h	335;"	d
TGAP_RWLIST_HEAD_STATIC	.\inc\lists.h	278;"	d
TGAP_RWLIST_HEAD_STATIC	.\inc\lists.h	294;"	d
TGAP_RWLIST_INSERT_AFTER	.\inc\lists.h	647;"	d
TGAP_RWLIST_INSERT_BEFORE_CURRENT	.\inc\lists.h	555;"	d
TGAP_RWLIST_INSERT_HEAD	.\inc\lists.h	663;"	d
TGAP_RWLIST_INSERT_TAIL	.\inc\lists.h	686;"	d
TGAP_RWLIST_LTGAP	.\inc\lists.h	392;"	d
TGAP_RWLIST_MOVE_CURRENT	.\inc\lists.h	533;"	d
TGAP_RWLIST_NEXT	.\inc\lists.h	402;"	d
TGAP_RWLIST_RDLOCK	.\inc\lists.h	70;"	d
TGAP_RWLIST_REMOVE	.\inc\lists.h	764;"	d
TGAP_RWLIST_REMOVE_CURRENT	.\inc\lists.h	525;"	d
TGAP_RWLIST_REMOVE_HEAD	.\inc\lists.h	732;"	d
TGAP_RWLIST_TRAVERSE	.\inc\lists.h	454;"	d
TGAP_RWLIST_TRAVERSE_SAFE_BEGIN	.\inc\lists.h	502;"	d
TGAP_RWLIST_TRAVERSE_SAFE_END	.\inc\lists.h	562;"	d
TGAP_RWLIST_TRYRDLOCK	.\inc\lists.h	106;"	d
TGAP_RWLIST_TRYWRLOCK	.\inc\lists.h	94;"	d
TGAP_RWLIST_UNLOCK	.\inc\lists.h	128;"	d
TGAP_RWLIST_WRLOCK	.\inc\lists.h	58;"	d
TIMER_START	.\lib\timer_list.h	9;"	d
TIMER_TICK	.\lib\timer_list.h	10;"	d
TNLEN	.\lib\hashtable\hashtable.h	20;"	d
TREE_6_DECODE	.\src\tools\lzma\LzmaDec.c	34;"	d	file:
TREE_6_DECODE	.\src\tools\lzma\LzmaDec.c	36;"	d	file:
TREE_DECODE	.\src\tools\lzma\LzmaDec.c	28;"	d	file:
TREE_DECODE_CHECK	.\src\tools\lzma\LzmaDec.c	56;"	d	file:
TREE_GET_BIT	.\src\tools\lzma\LzmaDec.c	27;"	d	file:
TRUE	.\lib\error\error_functions.c	/^typedef enum {FALSE ,TRUE} Boolean;$/;"	e	enum:__anon1	file:
TRUE	.\lib\timer_list.h	14;"	d
TYPE_CMD	.\src\server\socket_pkg.h	17;"	d
TYPE_CMD_DATA	.\src\server\socket_pkg.h	19;"	d
TYPE_DATA	.\src\server\socket_pkg.h	18;"	d
True	.\src\tools\lzma\Types.h	96;"	d
UINT2	.\src\common\md5.h	/^typedef unsigned short int UINT2;$/;"	t
UINT4	.\src\common\md5.h	/^typedef unsigned long int UINT4;$/;"	t
UINT64_CONST	.\src\tools\lzma\Types.h	80;"	d
UINT64_CONST	.\src\tools\lzma\Types.h	84;"	d
UInt16	.\src\tools\lzma\Types.h	/^typedef unsigned short UInt16;$/;"	t
UInt32	.\src\tools\lzma\Types.h	/^typedef unsigned int UInt32;$/;"	t
UInt32	.\src\tools\lzma\Types.h	/^typedef unsigned long UInt32;$/;"	t
UInt64	.\src\tools\lzma\Types.h	/^typedef unsigned __int64 UInt64;$/;"	t
UInt64	.\src\tools\lzma\Types.h	/^typedef unsigned long UInt64;$/;"	t
UInt64	.\src\tools\lzma\Types.h	/^typedef unsigned long long int UInt64;$/;"	t
UNALIGNED_OK	.\inc\zconf.h	92;"	d
UPDATE_0	.\src\tools\lzma\LzmaDec.c	20;"	d	file:
UPDATE_0_CHECK	.\src\tools\lzma\LzmaDec.c	50;"	d	file:
UPDATE_1	.\src\tools\lzma\LzmaDec.c	21;"	d	file:
UPDATE_1_CHECK	.\src\tools\lzma\LzmaDec.c	51;"	d	file:
USE_WINDOWS_FILE	.\src\tools\lzma\7zFile.h	8;"	d
VERSION	.\src\server\socket_pkg.h	14;"	d
VLEN	.\lib\hashtable\hashtable.h	19;"	d
WCHAR_PATH_SEPARATOR	.\src\tools\lzma\Types.h	239;"	d
WCHAR_PATH_SEPARATOR	.\src\tools\lzma\Types.h	246;"	d
WIN32	.\inc\zconf.h	73;"	d
WINDOWS	.\inc\zconf.h	69;"	d
WRes	.\src\tools\lzma\Types.h	/^typedef DWORD WRes;$/;"	t
WRes	.\src\tools\lzma\Types.h	/^typedef int WRes;$/;"	t
WSTRING_PATH_SEPARATOR	.\src\tools\lzma\Types.h	241;"	d
WSTRING_PATH_SEPARATOR	.\src\tools\lzma\Types.h	248;"	d
Write	.\src\tools\lzma\Types.h	/^  size_t (*Write)(void *p, const void *buf, size_t size);$/;"	m	struct:__anon37
Write	.\src\tools\lzma\Types.h	/^  void (*Write)(void *p, Byte b);$/;"	m	struct:__anon35
WriteEndMarker	.\src\tools\lzma\LzmaEnc.c	/^static void WriteEndMarker(CLzmaEnc *p, UInt32 posState)$/;"	f	file:
ZCONF_H	.\inc\zconf.h	9;"	d
ZEXPORT	.\inc\zconf.h	225;"	d
ZEXPORT	.\inc\zconf.h	237;"	d
ZEXPORT	.\inc\zconf.h	240;"	d
ZEXPORT	.\inc\zconf.h	250;"	d
ZEXPORTVA	.\inc\zconf.h	227;"	d
ZEXPORTVA	.\inc\zconf.h	229;"	d
ZEXPORTVA	.\inc\zconf.h	238;"	d
ZEXPORTVA	.\inc\zconf.h	241;"	d
ZEXPORTVA	.\inc\zconf.h	253;"	d
ZEXTERN	.\inc\zconf.h	208;"	d
ZEXTERN	.\inc\zconf.h	210;"	d
ZEXTERN	.\inc\zconf.h	247;"	d
ZLIB_H	.\inc\zlib.h	32;"	d
ZLIB_VERNUM	.\inc\zlib.h	41;"	d
ZLIB_VERSION	.\inc\zlib.h	40;"	d
Z_ASCII	.\inc\zlib.h	198;"	d
Z_BEST_COMPRESSION	.\inc\zlib.h	185;"	d
Z_BEST_SPEED	.\inc\zlib.h	184;"	d
Z_BINARY	.\inc\zlib.h	196;"	d
Z_BLOCK	.\inc\zlib.h	167;"	d
Z_BUF_ERROR	.\inc\zlib.h	177;"	d
Z_DATA_ERROR	.\inc\zlib.h	175;"	d
Z_DEFAULT_COMPRESSION	.\inc\zlib.h	186;"	d
Z_DEFAULT_STRATEGY	.\inc\zlib.h	193;"	d
Z_DEFLATED	.\inc\zlib.h	202;"	d
Z_ERRNO	.\inc\zlib.h	173;"	d
Z_FILTERED	.\inc\zlib.h	189;"	d
Z_FINISH	.\inc\zlib.h	166;"	d
Z_FIXED	.\inc\zlib.h	192;"	d
Z_FULL_FLUSH	.\inc\zlib.h	165;"	d
Z_HUFFMAN_ONLY	.\inc\zlib.h	190;"	d
Z_MEM_ERROR	.\inc\zlib.h	176;"	d
Z_NEED_DICT	.\inc\zlib.h	172;"	d
Z_NO_COMPRESSION	.\inc\zlib.h	183;"	d
Z_NO_FLUSH	.\inc\zlib.h	162;"	d
Z_NULL	.\inc\zlib.h	205;"	d
Z_OK	.\inc\zlib.h	170;"	d
Z_PARTIAL_FLUSH	.\inc\zlib.h	163;"	d
Z_RLE	.\inc\zlib.h	191;"	d
Z_STREAM_END	.\inc\zlib.h	171;"	d
Z_STREAM_ERROR	.\inc\zlib.h	174;"	d
Z_SYNC_FLUSH	.\inc\zlib.h	164;"	d
Z_TEXT	.\inc\zlib.h	197;"	d
Z_UNKNOWN	.\inc\zlib.h	199;"	d
Z_VERSION_ERROR	.\inc\zlib.h	178;"	d
_7ZIP_LARGE_PAGES	.\src\tools\lzma\Alloc.c	71;"	d	file:
_CLIENT_SOCKOPT_H_	.\src\client\client_util.h	2;"	d
_CLzmaEncProps	.\src\tools\lzma\LzmaEnc.h	/^typedef struct _CLzmaEncProps$/;"	s
_CLzmaProps	.\src\tools\lzma\LzmaDec.h	/^typedef struct _CLzmaProps$/;"	s
_CMatchFinder	.\src\tools\lzma\LzFind.h	/^typedef struct _CMatchFinder$/;"	s
_COMMON_COMMON_DEFINE_H	.\src\common\common_define.h	2;"	d
_CRT_SECURE_NO_WARNINGS	.\src\tools\lzma\LzmaUtil.c	4;"	d	file:
_GNU_SOURCE	.\src\tools\config_util.c	1;"	d	file:
_HASHTABLE_H	.\lib\hashtable\hashtable.h	13;"	d
_IMatchFinder	.\src\tools\lzma\LzFind.h	/^typedef struct _IMatchFinder$/;"	s
_LINUX_RBTREE_H	.\lib\rbtree.h	95;"	d
_LOG_H_	.\src\common\log.h	13;"	d
_MQ_SENDER_H_	.\src\server\mq_sender.h	2;"	d
_SERVER_T_SOCKOPT_H_	.\src\server\server_util.h	2;"	d
_SQLITE3EXT_H_	.\inc\sqlite3ext.h	20;"	d
_SQLITE3RTREE_H_	.\inc\sqlite3.h	7731;"	d
_SQLITE3_H_	.\inc\sqlite3.h	34;"	d
_SYS_QUEUE_H_	.\inc\queue.h	36;"	d
_TIMER_LIST_H_	.\lib\timer_list.h	2;"	d
_WFS_UTIL_FUNC_H	.\src\common\util.h	2;"	d
__7Z_FILE_H	.\src\tools\lzma\7zFile.h	5;"	d
__7Z_TYPES_H	.\src\tools\lzma\Types.h	5;"	d
__COMMON_ALLOC_H	.\src\tools\lzma\Alloc.h	5;"	d
__CONNECT_H_	.\src\common\connect.h	2;"	d
__ERROR_FUNCTIONS_H_	.\inc\error\error_functions.h	2;"	d
__GET_CONFVALUE_H	.\src\tools\config_util.h	2;"	d
__GET_NUM_H_	.\inc\error\get_num.h	2;"	d
__GLOBAL_CONFIG_H	.\src\common\config.h	7;"	d
__HASH__H_	.\src\common\hash.h	2;"	d
__INIT_H_	.\src\init.h	2;"	d
__LISTS_H__	.\inc\lists.h	14;"	d
__LZMA_DEC_H	.\src\tools\lzma\LzmaDec.h	5;"	d
__LZMA_ENC_H	.\src\tools\lzma\LzmaEnc.h	5;"	d
__LZMA_LIB_H	.\src\tools\lzma\LzmaLib.h	5;"	d
__LZ_FIND_H	.\src\tools\lzma\LzFind.h	5;"	d
__LZ_HASH_H	.\src\tools\lzma\LzHash.h	5;"	d
__MASTER_server_t_INIT_H__	.\src\server\server.h	2;"	d
__MESSAGE_H_	.\src\server\message.h	2;"	d
__MQ_REVERIVER_H_	.\src\server\mq_receiver.h	2;"	d
__MSG_QUEUE_H_	.\src\server\msg_queue.h	2;"	d
__SERVER_DISPATCH_	.\src\server\service_dispatch.h	2;"	d
__SIG_HANDLER_H_	.\src\common\sig_handler.h	2;"	d
__SOCKET_PKG_H	.\src\server\socket_pkg.h	2;"	d
__THREAD_POOL_H_	.\src\thread\threadpool.h	2;"	d
__TLPI_HDR_H_	.\inc\error_hdr.h	2;"	d
__TOP_FD_MAP_H_	.\src\server\topic_fd_map.h	2;"	d
__ensurecapacity	.\lib\raft\raft_log.c	/^static void __ensurecapacity(log_private_t * me)$/;"	f	file:
__log	.\lib\raft\raft_server.c	/^static void __log(raft_server_t *me_, raft_node_t* node, const char *fmt, ...)$/;"	f	file:
__rb_erase_color	.\lib\rbtree.c	/^static void __rb_erase_color(struct rb_node *node, struct rb_node *parent,$/;"	f	file:
__rb_rotate_left	.\lib\rbtree.c	/^static void __rb_rotate_left(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__rb_rotate_right	.\lib\rbtree.c	/^static void __rb_rotate_right(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__should_grant_vote	.\lib\raft\raft_server.c	/^static int __should_grant_vote(raft_server_private_t* me, msg_requestvote_t* vr)$/;"	f	file:
_bucket	.\lib\hashtable\hashtable.h	/^typedef struct _bucket {$/;"	s
_create_hashtable	.\lib\hashtable\hashtable.c	/^HashTable * _create_hashtable(uint size, const char* s_typename){$/;"	f
_hash_add	.\lib\hashtable\hashtable.c	/^int _hash_add(HashTable * ht, ...){$/;"	f
_hash_del	.\lib\hashtable\hashtable.c	/^int _hash_del(HashTable * ht, ...){$/;"	f
_hash_exists	.\lib\hashtable\hashtable.c	/^int _hash_exists(HashTable * ht, ...){$/;"	f
_hash_find	.\lib\hashtable\hashtable.c	/^int _hash_find(HashTable * ht, ...){$/;"	f
_hashtable	.\lib\hashtable\hashtable.h	/^typedef struct _hashtable{$/;"	s
aConstraint	.\inc\sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraintUsage	.\inc\sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aCoord	.\inc\sqlite3.h	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info
aOrderBy	.\inc\sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aParam	.\inc\sqlite3.h	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
aParam	.\inc\sqlite3.h	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
add_timer	.\lib\timer_lists.c	/^add_timer(int interval, timer_expiry *cb, void *user_data, int len)$/;"	f
add_topic	.\src\server\topic_fd_map.c	/^void add_topic(HashTable *ht,char *topic,int fd){$/;"	f
addfd	.\src\server\server_util.c	/^void addfd(int epollfd,int fd){$/;"	f
additionalOffset	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 additionalOffset;$/;"	m	struct:__anon32	file:
adler	.\inc\zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	.\inc\zconf.h	41;"	d
aggregate_context	.\inc\sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines
aggregate_count	.\inc\sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
algo	.\src\tools\lzma\LzmaEnc.h	/^  int algo;        \/* 0 - fast, 1 - normal, default = 1 *\/$/;"	m	struct:_CLzmaEncProps
alignPriceCount	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 alignPriceCount;$/;"	m	struct:__anon32	file:
alignPrices	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 alignPrices[kAlignTableSize];$/;"	m	struct:__anon32	file:
alloc_func	.\inc\zconf.h	46;"	d
alloc_func	.\inc\zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
anQueue	.\inc\sqlite3.h	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info
applylog	.\lib\raft\raft.h	/^    func_applylog_f applylog;$/;"	m	struct:__anon12
arBuckets	.\lib\hashtable\hashtable.h	/^    Bucket ** arBuckets;$/;"	m	struct:_hashtable
arg	.\src\thread\threadpool.h	/^    void *arg;                                \/\/回调函数参数$/;"	m	struct:job
argvIndex	.\inc\sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
auto_extension	.\inc\sqlite3ext.h	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
avail_in	.\inc\zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	.\inc\zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
back	.\lib\raft\raft_log.c	/^    int front, back;$/;"	m	struct:__anon14	file:
backPrev	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 backPrev;$/;"	m	struct:__anon27	file:
backPrev2	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 backPrev2;$/;"	m	struct:__anon27	file:
backs	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 backs[LZMA_NUM_REPS];$/;"	m	struct:__anon27	file:
backup_finish	.\inc\sqlite3ext.h	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_init	.\inc\sqlite3ext.h	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
backup_pagecount	.\inc\sqlite3ext.h	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_remaining	.\inc\sqlite3ext.h	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_step	.\inc\sqlite3ext.h	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines
base	.\lib\raft\raft_log.c	/^    int base;$/;"	m	struct:__anon14	file:
bigHash	.\src\tools\lzma\LzFind.h	/^  int bigHash;$/;"	m	struct:_CMatchFinder
bind_blob	.\inc\sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_blob64	.\inc\sqlite3ext.h	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_double	.\inc\sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines
bind_int	.\inc\sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_int64	.\inc\sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
bind_null	.\inc\sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_parameter_count	.\inc\sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
bind_parameter_index	.\inc\sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines
bind_parameter_name	.\inc\sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_text	.\inc\sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text16	.\inc\sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text64	.\inc\sqlite3ext.h	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_value	.\inc\sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob	.\inc\sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
blackbox_handler	.\src\common\sig_handler.c	/^void blackbox_handler(int sig)$/;"	f
blob_bytes	.\inc\sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_close	.\inc\sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_open	.\inc\sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines
blob_read	.\inc\sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_reopen	.\inc\sqlite3ext.h	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
blob_write	.\inc\sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines
blockSize	.\src\tools\lzma\LzFind.h	/^  UInt32 blockSize;$/;"	m	struct:_CMatchFinder
btMode	.\src\tools\lzma\LzFind.h	/^  int btMode;$/;"	m	struct:_CMatchFinder
btMode	.\src\tools\lzma\LzmaEnc.h	/^  int btMode;      \/* 0 - hashChain Mode, 1 - binTree mode - normal, default = 1 *\/$/;"	m	struct:_CLzmaEncProps
buf	.\lib\raft\raft.h	/^    void *buf;$/;"	m	struct:__anon5
buf	.\src\tools\lzma\LzmaDec.h	/^  const Byte *buf;$/;"	m	struct:__anon24
buf	.\src\tools\lzma\LzmaEnc.c	/^  Byte *buf;$/;"	m	struct:__anon30	file:
buf	.\src\tools\lzma\Types.h	/^  Byte buf[LookToRead_BUF_SIZE];$/;"	m	struct:__anon41
bufBase	.\src\tools\lzma\LzmaEnc.c	/^  Byte *bufBase;$/;"	m	struct:__anon30	file:
bufLim	.\src\tools\lzma\LzmaEnc.c	/^  Byte *bufLim;$/;"	m	struct:__anon30	file:
buffer	.\src\common\md5.h	/^  	unsigned char buffer[64];		\/* input buffer *\/$/;"	m	struct:__anon18
buffer	.\src\tools\lzma\LzFind.h	/^  Byte *buffer;$/;"	m	struct:_CMatchFinder
bufferBase	.\src\tools\lzma\LzFind.h	/^  Byte *bufferBase;$/;"	m	struct:_CMatchFinder
busy_handler	.\inc\sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines
busy_timeout	.\inc\sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines
cache	.\src\tools\lzma\LzmaEnc.c	/^  Byte cache;$/;"	m	struct:__anon30	file:
cacheSize	.\src\tools\lzma\LzmaEnc.c	/^  UInt64 cacheSize;$/;"	m	struct:__anon30	file:
callback	.\src\common\connect.h	/^    void (*callback)(void *item);	\/\/回调函数$/;"	m	struct:conn_node
callback_function	.\src\thread\threadpool.h	/^    void* (*callback_function)(void *arg);    \/\/线程回调函数$/;"	m	struct:job
cancel_auto_extension	.\inc\sqlite3ext.h	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
candidate_id	.\lib\raft\raft.h	/^    int candidate_id;$/;"	m	struct:__anon8
cb	.\lib\raft\raft_log.c	/^    raft_cbs_t *cb;$/;"	m	struct:__anon14	file:
cb	.\lib\raft\raft_private.h	/^    raft_cbs_t cb;$/;"	m	struct:__anon16
cb	.\lib\timer_list.h	/^	timer_expiry *cb;		\/**< call if expiry 	*\/$/;"	m	struct:timer
changes	.\inc\sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
charf	.\inc\zconf.h	/^typedef char  FAR charf;$/;"	t
charf	.\inc\zconf.h	54;"	d
checkDicSize	.\src\tools\lzma\LzmaDec.h	/^  UInt32 checkDicSize;$/;"	m	struct:__anon24
checksum	.\src\common\util.c	/^extern unsigned short checksum(unsigned char *buf,int len){$/;"	f
checksum	.\src\server\socket_pkg.h	/^	uint16_t           checksum;     \/\/数据校验和$/;"	m	struct:socket_pkg
child_run	.\src\main.c	/^void child_run(int argc,char *argv[])$/;"	f
choice	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb choice;$/;"	m	struct:__anon28	file:
choice2	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb choice2;$/;"	m	struct:__anon28	file:
clear_bindings	.\inc\sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
client_destroy	.\src\client\client_util.c	/^void client_destroy(struct sock_client *client){$/;"	f
client_init	.\src\client\client_util.c	/^int client_init(struct sock_client **client,char *server_ip,int port){$/;"	f
client_recv_data	.\src\client\client_util.c	/^int client_recv_data(struct sock_client *client,socket_pkg_t *revpkt){$/;"	f
client_recv_data1	.\test\test.h	/^void client_recv_data1(struct sock_client *client){$/;"	f
client_send_data	.\src\client\client_util.c	/^int  client_send_data(struct sock_client *client,socket_pkg_t *sendpkt){$/;"	f
client_set_sock	.\src\client\client_util.c	/^void  client_set_sock(struct sock_client *client,int sfd){$/;"	f
clientaddr	.\src\common\connect.h	/^    struct sockaddr clientaddr;  	\/\/客户端地址$/;"	m	struct:conn_node	typeref:struct:conn_node::sockaddr
close	.\inc\sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close_v2	.\inc\sqlite3ext.h	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
closelog	.\src\tools\log_utils.cpp	/^void closelog() {$/;"	f	namespace:phxrpc
closelog_t	.\src\tools\log_utils.h	/^typedef void (*closelog_t)();$/;"	t	namespace:phxrpc
cmd	.\src\server\socket_pkg.h	/^	uint16_t           cmd;          \/\/数据包性质$/;"	m	struct:socket_pkg
cmdLineErr	.\lib\error\error_functions.c	/^void cmdLineErr(const char *format,...)$/;"	f
code	.\src\server\socket_pkg.h	/^	uint8_t	           code;         \/\/数据编码方式  gzip\/json\/protobuf(0x01\/0x02\/0x03)$/;"	m	struct:socket_pkg
code	.\src\tools\lzma\LzmaDec.h	/^  UInt32 range, code;$/;"	m	struct:__anon24
collation_needed	.\inc\sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed16	.\inc\sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
column_blob	.\inc\sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes	.\inc\sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes16	.\inc\sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_count	.\inc\sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
column_database_name	.\inc\sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name16	.\inc\sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_decltype	.\inc\sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines
column_decltype16	.\inc\sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_double	.\inc\sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int	.\inc\sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int64	.\inc\sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_name	.\inc\sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name16	.\inc\sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name	.\inc\sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name16	.\inc\sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name	.\inc\sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name16	.\inc\sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_text	.\inc\sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text16	.\inc\sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_type	.\inc\sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_value	.\inc\sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
comm_max	.\inc\zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
comment	.\inc\zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
commit_hook	.\inc\sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
commit_idx	.\lib\raft\raft_private.h	/^    int commit_idx;$/;"	m	struct:__anon16
compare_string	.\src\tools\config_util.c	/^int compare_string(char *pInStr1,char *pInStr2)$/;"	f
compileoption_get	.\inc\sqlite3ext.h	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines
compileoption_used	.\inc\sqlite3ext.h	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines
complete	.\inc\sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines
complete16	.\inc\sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines
compress	.\inc\zconf.h	37;"	d
compress2	.\inc\zconf.h	38;"	d
compressBound	.\inc\zconf.h	39;"	d
conn	.\src\client\client_util.h	/^	struct connection *conn;  \/\/服务器建立连接$/;"	m	struct:sock_client	typeref:struct:sock_client::connection
conn_delete	.\src\common\connect.c	/^void conn_delete(struct rb_root *root, struct conn_node *conn)$/;"	f
conn_fd	.\src\common\connect.h	/^	int conn_fd;          			\/\/和客户端连接的文件描述符$/;"	m	struct:conn_node
conn_insert	.\src\common\connect.c	/^int conn_insert(struct rb_root *root, struct conn_type *data)$/;"	f
conn_node	.\src\common\connect.h	/^struct conn_node{$/;"	s
conn_root	.\src\server\server_util.h	/^	struct rb_root   conn_root; 	 \/\/客户端连接节点$/;"	m	struct:server	typeref:struct:server::rb_root
conn_search	.\src\common\connect.c	/^struct conn_type *conn_search(struct rb_root *root, struct conn_node *conn)$/;"	f
conn_type	.\src\common\connect.h	/^struct conn_type {$/;"	s
connection	.\src\client\client_util.h	/^struct connection{$/;"	s
const	.\inc\zconf.h	124;"	d
container_of	.\src\common\util.h	12;"	d
content_	.\src\tools\config.h	/^    std::string content_;$/;"	m	class:phxrpc::Config
context_db_handle	.\inc\sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
count	.\lib\linked-list-queue\linked_list_queue.h	/^    int count;$/;"	m	struct:__anon2
count	.\lib\raft\raft_log.c	/^    int count;$/;"	m	struct:__anon14	file:
count	.\src\common\md5.h	/^  	UINT4 count[2];					\/* number of bits, modulo 2^64 (lsb first) *\/$/;"	m	struct:__anon18
count_queue	.\src\server\msg_queue.c	/^int count_queue(linked_list_queue_t *msg_queue){$/;"	f
counters	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 counters[LZMA_NUM_PB_STATES_MAX];$/;"	m	struct:__anon29	file:
crc	.\src\tools\lzma\LzFind.h	/^  UInt32 crc[256];$/;"	m	struct:_CMatchFinder
crc32	.\inc\zconf.h	42;"	d
create_collation	.\inc\sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation16	.\inc\sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation_v2	.\inc\sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_fdtopic_hashtable	.\src\server\topic_fd_map.c	/^HashTable *create_fdtopic_hashtable(){$/;"	f
create_function	.\inc\sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function16	.\inc\sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function_v2	.\inc\sqlite3ext.h	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_hashtable	.\lib\hashtable\hashtable.h	22;"	d
create_module	.\inc\sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines
create_module_v2	.\inc\sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines
create_socket_pkg_instance	.\src\server\socket_pkg.c	/^struct socket_pkg* create_socket_pkg_instance(){$/;"	f
current_idx	.\lib\raft\raft.h	/^    int current_idx;$/;"	m	struct:__anon11
current_leader	.\lib\raft\raft_private.h	/^    raft_node_t* current_leader;$/;"	m	struct:__anon16
current_term	.\lib\raft\raft_private.h	/^    int current_term;$/;"	m	struct:__anon16
cutValue	.\src\tools\lzma\LzFind.h	/^  UInt32 cutValue;$/;"	m	struct:_CMatchFinder
cyclicBufferPos	.\src\tools\lzma\LzFind.h	/^  UInt32 cyclicBufferPos;$/;"	m	struct:_CMatchFinder
cyclicBufferSize	.\src\tools\lzma\LzFind.h	/^  UInt32 cyclicBufferSize; \/* it must be = (historySize + 1) *\/$/;"	m	struct:_CMatchFinder
data	.\lib\raft\raft.h	/^    raft_entry_data_t data;$/;"	m	struct:__anon6
data	.\src\tools\lzma\LzmaEnc.c	/^  Byte *data;$/;"	m	struct:__anon33	file:
data_count	.\inc\sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
data_len	.\src\server\socket_pkg.h	/^	uint32_t           data_len;     \/\/数据长度$/;"	m	struct:socket_pkg
data_type	.\inc\zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
db_config	.\inc\sqlite3ext.h	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines
db_filename	.\inc\sqlite3ext.h	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_handle	.\inc\sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
db_mutex	.\inc\sqlite3ext.h	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_readonly	.\inc\sqlite3ext.h	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_release_memory	.\inc\sqlite3ext.h	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_status	.\inc\sqlite3ext.h	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
declare_vtab	.\inc\sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
deflate	.\inc\zconf.h	17;"	d
deflateBound	.\inc\zconf.h	27;"	d
deflateCopy	.\inc\zconf.h	24;"	d
deflateEnd	.\inc\zconf.h	18;"	d
deflateInit	.\inc\zlib.h	1331;"	d
deflateInit2	.\inc\zlib.h	1335;"	d
deflateInit2_	.\inc\zconf.h	22;"	d
deflateInit_	.\inc\zconf.h	16;"	d
deflateParams	.\inc\zconf.h	26;"	d
deflatePrime	.\inc\zconf.h	28;"	d
deflateReset	.\inc\zconf.h	25;"	d
deflateSetDictionary	.\inc\zconf.h	23;"	d
del_timer	.\lib\timer_lists.c	/^int del_timer(timer_id id)$/;"	f
delete_fd	.\src\server\topic_fd_map.c	/^void delete_fd(HashTable *ht,char *topic,int fd){$/;"	f
deletefd	.\src\server\server_util.c	/^void deletefd(int epollfd,int fd){$/;"	f
desc	.\inc\sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
deserialize_message	.\src\server\service_dispatch.c	/^static message_t* deserialize_message(socket_pkg_t *pkg){$/;"	f	file:
destroy_connection	.\src\client\client_util.c	/^void destroy_connection(struct sock_client *client){$/;"	f
destroy_fdtopic_hashtable	.\src\server\topic_fd_map.c	/^void destroy_fdtopic_hashtable(HashTable *ht){$/;"	f
destroy_socket_pkg_instance	.\src\server\socket_pkg.c	/^void destroy_socket_pkg_instance(socket_pkg_t *socket_pkt_ptr){$/;"	f
destroy_timer	.\lib\timer_lists.c	/^int destroy_timer(void)$/;"	f
dic	.\src\tools\lzma\LzmaDec.h	/^  Byte *dic;$/;"	m	struct:__anon24
dicBufSize	.\src\tools\lzma\LzmaDec.h	/^  SizeT dicBufSize;$/;"	m	struct:__anon24
dicPos	.\src\tools\lzma\LzmaDec.h	/^  SizeT dicPos;$/;"	m	struct:__anon24
dicSize	.\src\tools\lzma\LzmaDec.h	/^  UInt32 dicSize;$/;"	m	struct:_CLzmaProps
dictSize	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 dictSize;$/;"	m	struct:__anon32	file:
dictSize	.\src\tools\lzma\LzmaEnc.h	/^  UInt32 dictSize; \/* (1 << 12) <= dictSize <= (1 << 27) for 32-bit version$/;"	m	struct:_CLzmaEncProps
directInput	.\src\tools\lzma\LzFind.h	/^  int directInput;$/;"	m	struct:_CMatchFinder
directInputRem	.\src\tools\lzma\LzFind.h	/^  size_t directInputRem;$/;"	m	struct:_CMatchFinder
dispatch_service	.\src\server\service_dispatch.c	/^static void dispatch_service(server_t *master_server,socket_pkg_t *pkg){$/;"	f	file:
distTableSize	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 distTableSize;$/;"	m	struct:__anon32	file:
distancesPrices	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 distancesPrices[kNumLenToPosStates][kNumFullDistances];$/;"	m	struct:__anon32	file:
done	.\inc\zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
double	.\inc\sqlite3.h	268;"	d
double	.\inc\sqlite3.h	7709;"	d
dummy	.\inc\zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state
eParentWithin	.\inc\sqlite3.h	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
eWithin	.\inc\sqlite3.h	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info
efd	.\src\server\server_util.h	/^	int efd;						 \/\/epoll文件描述符$/;"	m	struct:server
elapse	.\lib\timer_list.h	/^	int elapse; 			\/**< 0 -> interval 	*\/$/;"	m	struct:timer
election_timeout	.\lib\raft\raft_private.h	/^    int election_timeout;$/;"	m	struct:__anon16
enable_shared_cache	.\inc\sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines
entries	.\lib\raft\raft.h	/^    msg_entry_t* entries;$/;"	m	struct:__anon10
entries	.\lib\raft\raft_log.c	/^    raft_entry_t* entries;$/;"	m	struct:__anon14	file:
entries	.\lib\timer_list.h	/^	LIST_ENTRY(timer) entries;	\/**< list entry		*\/$/;"	m	struct:timer
epoll_fd	.\src\common\connect.h	/^    int epoll_fd;         			\/\/epoll内核事件表指针$/;"	m	struct:conn_node
errExit	.\lib\error\error_functions.c	/^void errExit(const char *format,...)$/;"	f
errExitEN	.\lib\error\error_functions.c	/^void errExitEN(int errnum,const char *format,...)$/;"	f
errMsg	.\lib\error\error_functions.c	/^void errMsg(const char *format,...)$/;"	f
err_exit	.\lib\error\error_functions.c	/^void err_exit(const char *format,...)$/;"	f
errcode	.\inc\sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines
errmsg	.\inc\sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg16	.\inc\sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errstr	.\inc\sqlite3ext.h	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines
estimatedCost	.\inc\sqlite3.h	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
estimatedRows	.\inc\sqlite3.h	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info
exec	.\inc\sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines
expired	.\inc\sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
extended_errcode	.\inc\sqlite3ext.h	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
extended_result_codes	.\inc\sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
extra	.\inc\zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_len	.\inc\zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	.\inc\zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
fastMode	.\src\tools\lzma\LzmaEnc.c	/^  Bool fastMode;$/;"	m	struct:__anon32	file:
fatal	.\lib\error\error_functions.c	/^void fatal(const char *format,...)$/;"	f
fb	.\src\tools\lzma\LzmaEnc.h	/^  int fb;          \/* 5 <= fb <= 273, default = 32 *\/$/;"	m	struct:_CLzmaEncProps
fd	.\src\client\client_util.h	/^	int fd;								\/\/文件描述符$/;"	m	struct:connection
fd	.\src\server\socket_pkg.h	/^	int 			   fd;$/;"	m	struct:socket_pkg
fd	.\src\server\topic_fd_map.h	/^	int  fd;$/;"	m	struct:list_entry
fd_list_head	.\src\server\topic_fd_map.h	/^	TGAP_LIST_HEAD(FD_LIST,list_entry) fd_list_head; \/\/声明一个头结点$/;"	m	struct:hash_node
field	.\src\server\topic_fd_map.h	/^	TGAP_LIST_ENTRY(list_entry) field;  		\/\/指向下一个节点或者上一个节点$/;"	m	struct:list_entry
file	.\src\tools\lzma\7zFile.h	/^  CSzFile file;$/;"	m	struct:__anon20
file	.\src\tools\lzma\7zFile.h	/^  CSzFile file;$/;"	m	struct:__anon21
file	.\src\tools\lzma\7zFile.h	/^  CSzFile file;$/;"	m	struct:__anon22
file_control	.\inc\sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines
finalize	.\inc\sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
find_topic_fdlist	.\src\server\topic_fd_map.c	/^struct hash_node *find_topic_fdlist(HashTable *ht,char *topic){$/;"	f
finished	.\src\tools\lzma\LzmaEnc.c	/^  Bool finished;$/;"	m	struct:__anon32	file:
first_idx	.\lib\raft\raft.h	/^    int first_idx;$/;"	m	struct:__anon11
fixedHashSize	.\src\tools\lzma\LzFind.h	/^  UInt32 fixedHashSize;$/;"	m	struct:_CMatchFinder
flags	.\lib\raft\raft_node.c	/^    int flags;$/;"	m	struct:__anon15	file:
fmt_time	.\lib\timer_lists.c	/^char *fmt_time(char *tstr)$/;"	f
free	.\inc\sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines
free_func	.\inc\zconf.h	47;"	d
free_func	.\inc\zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
free_table	.\inc\sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines
from	.\src\server\message.h	/^	char from[64];$/;"	m	struct:message
front	.\lib\raft\raft_log.c	/^    int front, back;$/;"	m	struct:__anon14	file:
funcTable	.\src\tools\lzma\LzmaEnc.c	/^  ISeqOutStream funcTable;$/;"	m	struct:__anon33	file:
func_applylog_f	.\lib\raft\raft.h	/^*func_applylog_f$/;"	t
func_log_f	.\lib\raft\raft.h	/^*func_log_f$/;"	t
func_logentry_event_f	.\lib\raft\raft.h	/^*func_logentry_event_f$/;"	t
func_node_has_sufficient_logs_f	.\lib\raft\raft.h	/^*func_node_has_sufficient_logs_f$/;"	t
func_persist_int_f	.\lib\raft\raft.h	/^*func_persist_int_f$/;"	t
func_send_appendentries_f	.\lib\raft\raft.h	/^*func_send_appendentries_f$/;"	t
func_send_requestvote_f	.\lib\raft\raft.h	/^*func_send_requestvote_f$/;"	t
g_Alloc	.\src\tools\lzma\LzmaLib.c	/^static ISzAlloc g_Alloc = { SzAlloc, SzFree };$/;"	v	file:
g_Alloc	.\src\tools\lzma\LzmaUtil.c	/^static ISzAlloc g_Alloc = { SzAlloc, SzFree };$/;"	v	file:
g_FastPos	.\src\tools\lzma\LzmaEnc.c	/^  Byte g_FastPos[1 << kNumLogBits];$/;"	m	struct:__anon32	file:
g_LargePageSize	.\src\tools\lzma\Alloc.c	/^SIZE_T g_LargePageSize = 0;$/;"	v
g_allocCount	.\src\tools\lzma\Alloc.c	/^int g_allocCount = 0;$/;"	v
g_allocCountBig	.\src\tools\lzma\Alloc.c	/^int g_allocCountBig = 0;$/;"	v
g_allocCountMid	.\src\tools\lzma\Alloc.c	/^int g_allocCountMid = 0;$/;"	v
getInt	.\lib\error\get_num.c	/^getInt(const char *arg, int flags, const char *name)$/;"	f
getLong	.\lib\error\get_num.c	/^getLong(const char *arg, int flags, const char *name)$/;"	f
getNum	.\lib\error\get_num.c	/^getNum(const char *fname, const char *arg, int flags, const char *name)$/;"	f	file:
get_autocommit	.\inc\sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
get_auxdata	.\inc\sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
get_config_int	.\src\tools\config_util.c	/^int get_config_int(char *pInFileName,char *pInSectionName,char *pInKeyName,int *pOutKeyValue)$/;"	f
get_config_string	.\src\tools\config_util.c	/^int get_config_string(char *pInFileName,char *pInSectionName,char *pInKeyName,char *pOutKeyValue)$/;"	f
get_crc_table	.\inc\zconf.h	43;"	d
get_ip	.\src\tools\config_util.c	/^get_ip(char *path,char ip[][20],int *ipnum)$/;"	f
get_key_value	.\src\tools\config_util.c	/^int get_key_value(FILE *fpConfig,char *pInKeyName,char *pOutKeyValue)$/;"	f
get_nowt	.\src\common\util.c	/^void get_nowt(char *time_str)$/;"	f
get_table	.\inc\sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines
global_closelog_	.\src\tools\log_utils.cpp	/^static closelog_t global_closelog_ = ::closelog;$/;"	m	namespace:phxrpc	file:
global_openlog_	.\src\tools\log_utils.cpp	/^static openlog_t global_openlog_ = NULL;$/;"	m	namespace:phxrpc	file:
global_priority_	.\src\tools\log_utils.cpp	/^static int global_priority_ = LOG_ERR;$/;"	m	namespace:phxrpc	file:
global_recover	.\inc\sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines
global_vlog_	.\src\tools\log_utils.cpp	/^static vlog_t global_vlog_ = vsyslog;$/;"	m	namespace:phxrpc	file:
gnFail	.\lib\error\get_num.c	/^gnFail(const char *fname, const char *msg, const char *arg, const char *name)$/;"	f	file:
gzFile	.\inc\zlib.h	/^typedef voidp gzFile;$/;"	t
gz_header	.\inc\zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	.\inc\zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	.\inc\zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
h	.\lib\hashtable\hashtable.h	/^    ulong h;          \/* hash value of key, keyvalue if key is a uint or ulong *\/$/;"	m	struct:_bucket
handle	.\src\tools\lzma\7zFile.h	/^  HANDLE handle;$/;"	m	struct:__anon19
handle_accept	.\src\server\server_util.h	/^	int (*handle_accept)(int client_conn_fd,struct sockaddr clientaddr);$/;"	m	struct:server_handler
handle_accept_event	.\src\server\server_util.c	/^void handle_accept_event(server_t *server)$/;"	f	file:
handle_listenmq	.\src\server\server.c	/^int handle_listenmq()$/;"	f	file:
handle_listenmq	.\src\server\server_util.h	/^    int (*handle_listenmq)();$/;"	m	struct:server_handler
handle_readable	.\src\server\server_util.h	/^    int (*handle_readable)(int readalbe_fd);$/;"	m	struct:server_handler
handle_request	.\src\server\server.c	/^void handle_request(void *arg){$/;"	f
handle_sig	.\src\server\server.c	/^void handle_sig(int sig)$/;"	f	file:
handle_sig	.\src\server\server_util.h	/^    void (*handle_sig)(int sig);$/;"	m	struct:server_handler
handle_socket_pkg	.\src\server\service_dispatch.c	/^void handle_socket_pkg(server_t *master_server,socket_pkg_t *pkg)$/;"	f
handle_unknown	.\src\server\server.c	/^int handle_unknown(int event_fd)$/;"	f	file:
handle_unknown	.\src\server\server_util.h	/^    int (*handle_unknown)(int event_fd);$/;"	m	struct:server_handler
handler	.\src\server\server_util.h	/^    struct server_handler *handler;  \/\/连接处理函数回调$/;"	m	struct:server	typeref:struct:server::server_handler
hash	.\src\tools\lzma\LzFind.h	/^  CLzRef *hash;$/;"	m	struct:_CMatchFinder
hashMask	.\src\tools\lzma\LzFind.h	/^  UInt32 hashMask;$/;"	m	struct:_CMatchFinder
hashSizeSum	.\src\tools\lzma\LzFind.h	/^  UInt32 hashSizeSum;$/;"	m	struct:_CMatchFinder
hash_add	.\lib\hashtable\hashtable.h	25;"	d
hash_del	.\lib\hashtable\hashtable.h	31;"	d
hash_exists	.\lib\hashtable\hashtable.h	34;"	d
hash_find	.\lib\hashtable\hashtable.h	28;"	d
hash_free	.\lib\hashtable\hashtable.c	/^void hash_free(HashTable * ht){$/;"	f
hash_func	.\lib\hashtable\hashtable.c	/^static ulong hash_func(char *arKey)$/;"	f	file:
hash_mutext	.\src\server\topic_fd_map.c	/^static pthread_mutex_t hash_mutext=PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
hash_node	.\src\server\topic_fd_map.h	/^struct hash_node{ $/;"	s
hash_num_elements	.\lib\hashtable\hashtable.c	/^int hash_num_elements(HashTable *ht)$/;"	f
hcrc	.\inc\zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
head	.\lib\linked-list-queue\linked_list_queue.h	/^    llqnode_t *head, *tail;$/;"	m	struct:__anon2
head	.\src\thread\threadpool.h	/^    struct job *head;                 \/\/指向job的头指针$/;"	m	struct:threadpool	typeref:struct:threadpool::job
header	.\lib\timer_list.h	/^	LIST_HEAD(listheader, timer) header;	\/**< list header 	*\/$/;"	m	struct:timer_list
high	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb high[kLenNumHighSymbols];$/;"	m	struct:__anon28	file:
historySize	.\src\tools\lzma\LzFind.h	/^  UInt32 historySize;$/;"	m	struct:_CMatchFinder
ht	.\src\server\msg_queue.h	/^	HashTable *ht;$/;"	m	struct:msg_queue
ht	.\src\server\server_util.h	/^    HashTable *ht;                  \/\/hash表，保存 topic-fd 列表的映射$/;"	m	struct:server
iColumn	.\inc\sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iColumn	.\inc\sqlite3.h	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iLevel	.\inc\sqlite3.h	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iRowid	.\inc\sqlite3.h	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iTermOffset	.\inc\sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iVersion	.\inc\sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	.\inc\sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	.\inc\sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
iVersion	.\inc\sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2
id	.\lib\raft\raft.h	/^    unsigned int id;$/;"	m	struct:__anon6
id	.\lib\raft\raft.h	/^    unsigned int id;$/;"	m	struct:__anon7
id	.\lib\raft\raft_node.c	/^    int id;$/;"	m	struct:__anon15	file:
id	.\lib\timer_list.h	/^	timer_id id;			\/**< timer id		*\/$/;"	m	struct:timer
id	.\src\server\message.h	/^	uint64_t id;$/;"	m	struct:message
idx	.\lib\raft\raft.h	/^    int idx;$/;"	m	struct:__anon7
idxNum	.\inc\sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxStr	.\inc\sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
in	.\lib\raft\raft_log.c	21;"	d	file:
in_func	.\inc\zconf.h	48;"	d
in_func	.\inc\zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
inflate	.\inc\zconf.h	20;"	d
inflateBack	.\inc\zconf.h	35;"	d
inflateBackEnd	.\inc\zconf.h	36;"	d
inflateBackInit	.\inc\zlib.h	1340;"	d
inflateCopy	.\inc\zconf.h	33;"	d
inflateEnd	.\inc\zconf.h	21;"	d
inflateInit	.\inc\zlib.h	1333;"	d
inflateInit2	.\inc\zlib.h	1338;"	d
inflateInit2_	.\inc\zconf.h	29;"	d
inflateInit_	.\inc\zconf.h	19;"	d
inflateReset	.\inc\zconf.h	34;"	d
inflateSetDictionary	.\inc\zconf.h	30;"	d
inflateSync	.\inc\zconf.h	31;"	d
inflateSyncPoint	.\inc\zconf.h	32;"	d
init_conf	.\src\init.c	/^void init_conf(char *config_path)$/;"	f
init_log	.\src\init.c	/^void init_log(char *config_path)$/;"	f
init_meesage_queue	.\src\server\msg_queue.c	/^msg_queue_t* init_meesage_queue(){$/;"	f
init_timer	.\lib\timer_lists.c	/^int init_timer(int count)$/;"	f
internal_state	.\inc\zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
interruptx	.\inc\sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
interval	.\lib\timer_list.h	/^	int interval;			\/**< timer interval(second)*\/$/;"	m	struct:timer
intf	.\inc\zconf.h	/^typedef int   FAR intf;$/;"	t
intf	.\inc\zconf.h	55;"	d
ip	.\src\common\config.h	/^	char *ip;$/;"	m	struct:system_net_conf
isMatch	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isMatch[kNumStates][LZMA_NUM_PB_STATES_MAX];$/;"	m	struct:__anon31	file:
isMatch	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isMatch[kNumStates][LZMA_NUM_PB_STATES_MAX];$/;"	m	struct:__anon32	file:
isRep	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRep[kNumStates];$/;"	m	struct:__anon31	file:
isRep	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRep[kNumStates];$/;"	m	struct:__anon32	file:
isRep0Long	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRep0Long[kNumStates][LZMA_NUM_PB_STATES_MAX];$/;"	m	struct:__anon31	file:
isRep0Long	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRep0Long[kNumStates][LZMA_NUM_PB_STATES_MAX];$/;"	m	struct:__anon32	file:
isRepG0	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRepG0[kNumStates];$/;"	m	struct:__anon31	file:
isRepG0	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRepG0[kNumStates];$/;"	m	struct:__anon32	file:
isRepG1	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRepG1[kNumStates];$/;"	m	struct:__anon31	file:
isRepG1	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRepG1[kNumStates];$/;"	m	struct:__anon32	file:
isRepG2	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRepG2[kNumStates];$/;"	m	struct:__anon31	file:
isRepG2	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb isRepG2[kNumStates];$/;"	m	struct:__anon32	file:
is_conn	.\src\client\client_util.h	/^	bool is_conn;						\/\/连接是否关闭$/;"	m	struct:connection
is_equal	.\src\common\util.c	/^int is_equal(unsigned char *buf1,unsigned char *buf2)$/;"	f
isnotend	.\lib\hashtable\hashtable.h	39;"	d
item	.\lib\linked-list-queue\linked_list_queue.h	/^    void *item;$/;"	m	struct:llqnode_s
job	.\src\thread\threadpool.h	/^struct job$/;"	s
kAlignMask	.\src\tools\lzma\LzmaEnc.c	171;"	d	file:
kAlignTableSize	.\src\tools\lzma\LzmaDec.c	89;"	d	file:
kAlignTableSize	.\src\tools\lzma\LzmaEnc.c	170;"	d	file:
kBigHashDicLimit	.\src\tools\lzma\LzmaEnc.c	1898;"	d	file:
kBitModelTotal	.\src\tools\lzma\LzmaDec.c	12;"	d	file:
kBitModelTotal	.\src\tools\lzma\LzmaEnc.c	37;"	d	file:
kBitPrice	.\src\tools\lzma\LzmaEnc.c	43;"	d	file:
kBlockSize	.\src\tools\lzma\LzmaEnc.c	26;"	d	file:
kBlockSizeMax	.\src\tools\lzma\LzmaEnc.c	24;"	d	file:
kCantAllocateMessage	.\src\tools\lzma\LzmaUtil.c	/^const char *kCantAllocateMessage = "Can not allocate memory";$/;"	v
kCantReadMessage	.\src\tools\lzma\LzmaUtil.c	/^const char *kCantReadMessage = "Can not read input file";$/;"	v
kCantWriteMessage	.\src\tools\lzma\LzmaUtil.c	/^const char *kCantWriteMessage = "Can not write output file";$/;"	v
kChunkSizeMax	.\src\tools\lzma\7zFile.c	24;"	d	file:
kCrcPoly	.\src\tools\lzma\LzFind.c	131;"	d	file:
kDataErrorMessage	.\src\tools\lzma\LzmaUtil.c	/^const char *kDataErrorMessage = "Data error";$/;"	v
kDicLogSizeMax	.\src\tools\lzma\LzmaEnc.c	165;"	d	file:
kDicLogSizeMaxCompress	.\src\tools\lzma\LzmaEnc.c	105;"	d	file:
kDicLogSizeMaxCompress	.\src\tools\lzma\LzmaEnc.c	89;"	d	file:
kDicLogSizeMin	.\src\tools\lzma\LzmaEnc.c	164;"	d	file:
kDistTableSizeMax	.\src\tools\lzma\LzmaEnc.c	166;"	d	file:
kEmptyHashValue	.\src\tools\lzma\LzFind.c	9;"	d	file:
kEndPosModelIndex	.\src\tools\lzma\LzmaDec.c	82;"	d	file:
kEndPosModelIndex	.\src\tools\lzma\LzmaEnc.c	174;"	d	file:
kFix3HashSize	.\src\tools\lzma\LzHash.h	11;"	d
kFix4HashSize	.\src\tools\lzma\LzHash.h	12;"	d
kFix5HashSize	.\src\tools\lzma\LzHash.h	13;"	d
kHash2Size	.\src\tools\lzma\LzHash.h	7;"	d
kHash3Size	.\src\tools\lzma\LzHash.h	8;"	d
kHash4Size	.\src\tools\lzma\LzHash.h	9;"	d
kInfinityPrice	.\src\tools\lzma\LzmaEnc.c	457;"	d	file:
kLenNumHighBits	.\src\tools\lzma\LzmaDec.c	67;"	d	file:
kLenNumHighBits	.\src\tools\lzma\LzmaEnc.c	196;"	d	file:
kLenNumHighSymbols	.\src\tools\lzma\LzmaDec.c	68;"	d	file:
kLenNumHighSymbols	.\src\tools\lzma\LzmaEnc.c	197;"	d	file:
kLenNumLowBits	.\src\tools\lzma\LzmaDec.c	63;"	d	file:
kLenNumLowBits	.\src\tools\lzma\LzmaEnc.c	192;"	d	file:
kLenNumLowSymbols	.\src\tools\lzma\LzmaDec.c	64;"	d	file:
kLenNumLowSymbols	.\src\tools\lzma\LzmaEnc.c	193;"	d	file:
kLenNumMidBits	.\src\tools\lzma\LzmaDec.c	65;"	d	file:
kLenNumMidBits	.\src\tools\lzma\LzmaEnc.c	194;"	d	file:
kLenNumMidSymbols	.\src\tools\lzma\LzmaDec.c	66;"	d	file:
kLenNumMidSymbols	.\src\tools\lzma\LzmaEnc.c	195;"	d	file:
kLenNumSymbolsTotal	.\src\tools\lzma\LzmaEnc.c	199;"	d	file:
kLiteralNextStates	.\src\tools\lzma\LzmaEnc.c	/^static const int kLiteralNextStates[kNumStates] = {0, 0, 0, 0, 1, 2, 3, 4,  5,  6,   4, 5};$/;"	v	file:
kMatchArraySize	.\src\tools\lzma\LzmaEnc.c	28;"	d	file:
kMatchMinLen	.\src\tools\lzma\LzmaDec.c	91;"	d	file:
kMatchNextStates	.\src\tools\lzma\LzmaEnc.c	/^static const int kMatchNextStates[kNumStates]   = {7, 7, 7, 7, 7, 7, 7, 10, 10, 10, 10, 10};$/;"	v	file:
kMatchRecordMaxSize	.\src\tools\lzma\LzmaEnc.c	29;"	d	file:
kMatchSpecLenStart	.\src\tools\lzma\LzmaDec.c	92;"	d	file:
kMaxHistorySize	.\src\tools\lzma\LzFind.c	13;"	d	file:
kMaxValForNormalize	.\src\tools\lzma\LzFind.c	10;"	d	file:
kNormalizeMask	.\src\tools\lzma\LzFind.c	12;"	d	file:
kNormalizeStepMin	.\src\tools\lzma\LzFind.c	11;"	d	file:
kNumAlignBits	.\src\tools\lzma\LzmaDec.c	88;"	d	file:
kNumAlignBits	.\src\tools\lzma\LzmaEnc.c	169;"	d	file:
kNumBitModelTotalBits	.\src\tools\lzma\LzmaDec.c	11;"	d	file:
kNumBitModelTotalBits	.\src\tools\lzma\LzmaEnc.c	36;"	d	file:
kNumBitPriceShiftBits	.\src\tools\lzma\LzmaEnc.c	42;"	d	file:
kNumFullDistances	.\src\tools\lzma\LzmaDec.c	83;"	d	file:
kNumFullDistances	.\src\tools\lzma\LzmaEnc.c	177;"	d	file:
kNumLenProbs	.\src\tools\lzma\LzmaDec.c	75;"	d	file:
kNumLenToPosStates	.\src\tools\lzma\LzmaDec.c	86;"	d	file:
kNumLenToPosStates	.\src\tools\lzma\LzmaEnc.c	162;"	d	file:
kNumLitStates	.\src\tools\lzma\LzmaDec.c	79;"	d	file:
kNumLogBits	.\src\tools\lzma\LzmaEnc.c	104;"	d	file:
kNumMaxDirectBits	.\src\tools\lzma\LzmaEnc.c	31;"	d	file:
kNumMoveBits	.\src\tools\lzma\LzmaDec.c	13;"	d	file:
kNumMoveBits	.\src\tools\lzma\LzmaEnc.c	38;"	d	file:
kNumMoveReducingBits	.\src\tools\lzma\LzmaEnc.c	41;"	d	file:
kNumOpts	.\src\tools\lzma\LzmaEnc.c	160;"	d	file:
kNumPosBitsMax	.\src\tools\lzma\LzmaDec.c	60;"	d	file:
kNumPosModels	.\src\tools\lzma\LzmaEnc.c	175;"	d	file:
kNumPosSlotBits	.\src\tools\lzma\LzmaDec.c	85;"	d	file:
kNumPosSlotBits	.\src\tools\lzma\LzmaEnc.c	163;"	d	file:
kNumPosStatesMax	.\src\tools\lzma\LzmaDec.c	61;"	d	file:
kNumStates	.\src\tools\lzma\LzmaDec.c	78;"	d	file:
kNumStates	.\src\tools\lzma\LzmaEnc.c	204;"	d	file:
kNumTopBits	.\src\tools\lzma\LzmaDec.c	8;"	d	file:
kNumTopBits	.\src\tools\lzma\LzmaEnc.c	33;"	d	file:
kProbInitValue	.\src\tools\lzma\LzmaEnc.c	39;"	d	file:
kRepNextStates	.\src\tools\lzma\LzmaEnc.c	/^static const int kRepNextStates[kNumStates]     = {8, 8, 8, 8, 8, 8, 8, 11, 11, 11, 11, 11};$/;"	v	file:
kShortRepNextStates	.\src\tools\lzma\LzmaEnc.c	/^static const int kShortRepNextStates[kNumStates]= {9, 9, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11};$/;"	v	file:
kStartMaxLen	.\src\tools\lzma\LzFind.c	15;"	d	file:
kStartPosModelIndex	.\src\tools\lzma\LzmaDec.c	81;"	d	file:
kStartPosModelIndex	.\src\tools\lzma\LzmaEnc.c	173;"	d	file:
kTopValue	.\src\tools\lzma\LzmaDec.c	9;"	d	file:
kTopValue	.\src\tools\lzma\LzmaEnc.c	34;"	d	file:
kUnpackBlockSize	.\src\tools\lzma\LzmaEnc.c	27;"	d	file:
keepAlive	.\src\client\client_util.h	/^	int keepAlive;            \/\/ 开启keepalive属性. 缺省值: 0(关闭)  1(打开)$/;"	m	struct:sock_client
keepCount	.\src\client\client_util.h	/^	int keepCount;   		  \/\/ 探测重试的次数. 全部超时则认定连接失效..缺省值:9(次)$/;"	m	struct:sock_client
keepIdle	.\src\client\client_util.h	/^	int keepIdle;             \/\/(单位:秒数)如果在60秒内没有任何数据交互,则进行探测. 缺省值:7200(s)$/;"	m	struct:sock_client
keepInterval	.\src\client\client_util.h	/^	int keepInterval;         \/\/(单位:秒数)探测时发探测包的时间间隔为5秒. 缺省值:75(s)$/;"	m	struct:sock_client
keepSizeAfter	.\src\tools\lzma\LzFind.h	/^  UInt32 keepSizeAfter;$/;"	m	struct:_CMatchFinder
keepSizeBefore	.\src\tools\lzma\LzFind.h	/^  UInt32 keepSizeBefore;$/;"	m	struct:_CMatchFinder
keep_alive	.\src\server\message.h	/^	int8_t keep_alive; \/\/消息保存时间,单位毫秒$/;"	m	struct:message
key	.\lib\hashtable\hashtable.h	/^    char * key;       \/* the point to key , if key is a string *\/$/;"	m	struct:_bucket
keyType	.\lib\hashtable\hashtable.h	/^    char keyType[TNLEN];$/;"	m	struct:_hashtable
last_applied_idx	.\lib\raft\raft_private.h	/^    int last_applied_idx;$/;"	m	struct:__anon16
last_insert_rowid	.\inc\sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
last_log_idx	.\lib\raft\raft.h	/^    int last_log_idx;$/;"	m	struct:__anon8
last_log_term	.\lib\raft\raft.h	/^    int last_log_term;$/;"	m	struct:__anon8
lc	.\src\tools\lzma\LzmaDec.h	/^  unsigned lc, lp, pb;$/;"	m	struct:_CLzmaProps
lc	.\src\tools\lzma\LzmaEnc.c	/^  unsigned lc, lp, pb;$/;"	m	struct:__anon32	file:
lc	.\src\tools\lzma\LzmaEnc.h	/^  int lc;          \/* 0 <= lc <= 8, default = 3 *\/$/;"	m	struct:_CLzmaEncProps
lclp	.\src\tools\lzma\LzmaEnc.c	/^  unsigned lclp;$/;"	m	struct:__anon32	file:
leader_commit	.\lib\raft\raft.h	/^    int leader_commit;$/;"	m	struct:__anon10
len	.\lib\raft\raft.h	/^    unsigned int len;$/;"	m	struct:__anon5
len	.\lib\timer_list.h	/^	int len;			\/**< user_data length	*\/$/;"	m	struct:timer
lenEnc	.\src\tools\lzma\LzmaEnc.c	/^  CLenPriceEnc lenEnc;$/;"	m	struct:__anon31	file:
lenEnc	.\src\tools\lzma\LzmaEnc.c	/^  CLenPriceEnc lenEnc;$/;"	m	struct:__anon32	file:
lenLimit	.\src\tools\lzma\LzFind.h	/^  UInt32 lenLimit;$/;"	m	struct:_CMatchFinder
level	.\src\tools\lzma\LzmaEnc.h	/^  int level;       \/*  0 <= level <= 9 *\/$/;"	m	struct:_CLzmaEncProps
lf	.\src\common\config.h	/^	FILE *lf;$/;"	m	struct:system_conf
libversion	.\inc\sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines
libversion_number	.\inc\sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines
limit	.\inc\sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines
linked_list_queue_t	.\lib\linked-list-queue\linked_list_queue.h	/^} linked_list_queue_t;$/;"	t	typeref:struct:__anon2
list_entry	.\src\server\topic_fd_map.h	/^struct list_entry{  \/\/entry \/ elem$/;"	s
listenfd	.\src\server\server_util.h	/^    int listenfd; 					 \/\/服务端监听listenfd$/;"	m	struct:server
litProbs	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb *litProbs;$/;"	m	struct:__anon31	file:
litProbs	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb *litProbs;$/;"	m	struct:__anon32	file:
llqnode_s	.\lib\linked-list-queue\linked_list_queue.h	/^struct llqnode_s$/;"	s
llqnode_t	.\lib\linked-list-queue\linked_list_queue.h	/^typedef struct llqnode_s llqnode_t;$/;"	t	typeref:struct:llqnode_s
llqueue_count	.\lib\linked-list-queue\linked_list_queue.c	/^int llqueue_count($/;"	f
llqueue_free	.\lib\linked-list-queue\linked_list_queue.c	/^void llqueue_free($/;"	f
llqueue_get_item_via_cmpfunction	.\lib\linked-list-queue\linked_list_queue.c	/^void *llqueue_get_item_via_cmpfunction($/;"	f
llqueue_new	.\lib\linked-list-queue\linked_list_queue.c	/^void *llqueue_new()$/;"	f
llqueue_offer	.\lib\linked-list-queue\linked_list_queue.c	/^void llqueue_offer($/;"	f
llqueue_poll	.\lib\linked-list-queue\linked_list_queue.c	/^void *llqueue_poll($/;"	f
llqueue_remove_item	.\lib\linked-list-queue\linked_list_queue.c	/^void *llqueue_remove_item($/;"	f
llqueue_remove_item_via_cmpfunction	.\lib\linked-list-queue\linked_list_queue.c	/^void *llqueue_remove_item_via_cmpfunction($/;"	f
load_extension	.\inc\sqlite3ext.h	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines
lock	.\src\server\server_util.h	/^    pthread_mutex_t lock;           \/\/互斥锁$/;"	m	struct:server
log	.\inc\sqlite3ext.h	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines
log	.\lib\raft\raft.h	/^    func_log_f log;$/;"	m	struct:__anon12
log	.\lib\raft\raft_private.h	/^    void* log;$/;"	m	struct:__anon16
log	.\src\tools\log_utils.cpp	/^void log(int priority, const char * format, ...) {$/;"	f	namespace:phxrpc
log_append_entry	.\lib\raft\raft_log.c	/^int log_append_entry(log_t* me_, raft_entry_t* c)$/;"	f
log_clear	.\lib\raft\raft_log.c	/^void log_clear(log_t* me_)$/;"	f
log_count	.\lib\raft\raft_log.c	/^int log_count(log_t* me_)$/;"	f
log_delete	.\lib\raft\raft_log.c	/^void log_delete(log_t* me_, int idx)$/;"	f
log_empty	.\lib\raft\raft_log.c	/^void log_empty(log_t * me_)$/;"	f
log_file_close	.\src\common\log.c	/^int log_file_close(FILE * lf)$/;"	f
log_file_open	.\src\common\log.c	/^FILE *log_file_open(char logFileName[])$/;"	f
log_free	.\lib\raft\raft_log.c	/^void log_free(log_t * me_)$/;"	f
log_get_at_idx	.\lib\raft\raft_log.c	/^raft_entry_t* log_get_at_idx(log_t* me_, int idx)$/;"	f
log_get_current_idx	.\lib\raft\raft_log.c	/^int log_get_current_idx(log_t* me_)$/;"	f
log_get_from_idx	.\lib\raft\raft_log.c	/^raft_entry_t* log_get_from_idx(log_t* me_, int idx, int *n_etys)$/;"	f
log_new	.\lib\raft\raft_log.c	/^log_t* log_new()$/;"	f
log_offer	.\lib\raft\raft.h	/^    func_logentry_event_f log_offer;$/;"	m	struct:__anon12
log_peektail	.\lib\raft\raft_log.c	/^raft_entry_t *log_peektail(log_t * me_)$/;"	f
log_poll	.\lib\raft\raft.h	/^    func_logentry_event_f log_poll;$/;"	m	struct:__anon12
log_poll	.\lib\raft\raft_log.c	/^void *log_poll(log_t * me_)$/;"	f
log_pop	.\lib\raft\raft.h	/^    func_logentry_event_f log_pop;$/;"	m	struct:__anon12
log_private_t	.\lib\raft\raft_log.c	/^} log_private_t;$/;"	t	typeref:struct:__anon14	file:
log_set_callbacks	.\lib\raft\raft_log.c	/^void log_set_callbacks(log_t* me_, raft_cbs_t* funcs, void* raft)$/;"	f
log_t	.\lib\raft\raft_log.h	/^typedef void* log_t;$/;"	t
log_write	.\src\common\log.c	/^int log_write(FILE * lf,LOG_TYPE eventType,char *format, ...)$/;"	f
logpath	.\src\common\config.h	/^	char *logpath;$/;"	m	struct:system_conf
longestMatchLength	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 longestMatchLength;$/;"	m	struct:__anon32	file:
low	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb low[LZMA_NUM_PB_STATES_MAX << kLenNumLowBits];$/;"	m	struct:__anon28	file:
low	.\src\tools\lzma\LzmaEnc.c	/^  UInt64 low;$/;"	m	struct:__anon30	file:
lp	.\src\tools\lzma\LzmaDec.h	/^  unsigned lc, lp, pb;$/;"	m	struct:_CLzmaProps
lp	.\src\tools\lzma\LzmaEnc.c	/^  unsigned lc, lp, pb;$/;"	m	struct:__anon32	file:
lp	.\src\tools\lzma\LzmaEnc.h	/^  int lp;          \/* 0 <= lp <= 4, default = 0 *\/$/;"	m	struct:_CLzmaEncProps
lpMask	.\src\tools\lzma\LzmaEnc.c	/^  unsigned lpMask, pbMask;$/;"	m	struct:__anon32	file:
main	.\src\main.c	/^int main(int argc , char *argv[])$/;"	f
main	.\src\tools\lzma\test_main.c	/^int main(int argc, char* argv[])$/;"	f
malloc	.\inc\sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines
malloc64	.\inc\sqlite3ext.h	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
master_server	.\src\server\server.c	/^server_t *master_server;$/;"	v
matchFinder	.\src\tools\lzma\LzmaEnc.c	/^  IMatchFinder matchFinder;$/;"	m	struct:__anon32	file:
matchFinderBase	.\src\tools\lzma\LzmaEnc.c	/^  CMatchFinder matchFinderBase;$/;"	m	struct:__anon32	file:
matchFinderCycles	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 matchFinderCycles;$/;"	m	struct:__anon32	file:
matchFinderMt	.\src\tools\lzma\LzmaEnc.c	/^  CMatchFinderMt matchFinderMt;$/;"	m	struct:__anon32	file:
matchFinderObj	.\src\tools\lzma\LzmaEnc.c	/^  void *matchFinderObj;$/;"	m	struct:__anon32	file:
matchMaxLen	.\src\tools\lzma\LzFind.h	/^  UInt32 matchMaxLen;$/;"	m	struct:_CMatchFinder
matchPriceCount	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 matchPriceCount;$/;"	m	struct:__anon32	file:
match_idx	.\lib\raft\raft_node.c	/^    int match_idx;$/;"	m	struct:__anon15	file:
matches	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 matches[LZMA_MATCH_LEN_MAX * 2 + 2 + 1];$/;"	m	struct:__anon32	file:
max	.\inc\error\error_functions.h	7;"	d
max	.\lib\raft\raft_server.c	24;"	d	file:
max_num	.\lib\timer_list.h	/^	int max_num;							\/**< max entry number	*\/$/;"	m	struct:timer_list
mc	.\src\tools\lzma\LzmaEnc.h	/^  UInt32 mc;        \/* 1 <= mc <= (1 << 30), default = 32 *\/$/;"	m	struct:_CLzmaEncProps
memory_highwater	.\inc\sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines
memory_used	.\inc\sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines
message	.\src\server\message.h	/^typedef struct message{$/;"	s
message_t	.\src\server\message.h	/^}message_t;$/;"	t	typeref:struct:message
mid	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb mid[LZMA_NUM_PB_STATES_MAX << kLenNumMidBits];$/;"	m	struct:__anon28	file:
min	.\inc\error\error_functions.h	6;"	d
min	.\lib\raft\raft_server.c	23;"	d	file:
modfd	.\src\server\server_util.c	/^void modfd(int epollfd,int fd,int ev)$/;"	f
mprintf	.\inc\sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines
mq	.\src\server\server_util.h	/^    struct msg_queue_t **mq; $/;"	m	struct:server	typeref:struct:server::msg_queue_t
msg	.\inc\zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
msg	.\src\server\socket_pkg.h	/^    uint8_t     	   msg[MESSAGE_BUFF_SIZE];		 \/\/消息体body$/;"	m	struct:socket_pkg
msg_appendentries_response_t	.\lib\raft\raft.h	/^} msg_appendentries_response_t;$/;"	t	typeref:struct:__anon11
msg_appendentries_t	.\lib\raft\raft.h	/^} msg_appendentries_t;$/;"	t	typeref:struct:__anon10
msg_buff	.\src\server\message.h	/^	char msg_buff[DATA_BUFF_SIZE];$/;"	m	struct:message
msg_entry_response_t	.\lib\raft\raft.h	/^} msg_entry_response_t;$/;"	t	typeref:struct:__anon7
msg_entry_t	.\lib\raft\raft.h	/^typedef raft_entry_t msg_entry_t;$/;"	t
msg_queue	.\src\server\msg_queue.h	/^	linked_list_queue_t *msg_queue;$/;"	m	struct:msg_queue
msg_queue	.\src\server\msg_queue.h	/^typedef struct msg_queue{$/;"	s
msg_queue_cond	.\src\server\msg_queue.c	/^pthread_cond_t  msg_queue_cond= PTHREAD_COND_INITIALIZER;$/;"	v
msg_queue_mutex	.\src\server\msg_queue.c	/^pthread_mutex_t msg_queue_mutex= PTHREAD_MUTEX_INITIALIZER;$/;"	v
msg_queue_receiver	.\src\server\mq_receiver.c	/^void  msg_queue_receiver(void *arg){$/;"	f
msg_queue_t	.\src\server\msg_queue.h	/^}msg_queue_t;$/;"	t	typeref:struct:msg_queue
msg_requestvote_response_t	.\lib\raft\raft.h	/^} msg_requestvote_response_t;$/;"	t	typeref:struct:__anon9
msg_requestvote_t	.\lib\raft\raft.h	/^} msg_requestvote_t;$/;"	t	typeref:struct:__anon8
msize	.\inc\sqlite3ext.h	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines
mtMode	.\src\tools\lzma\LzmaEnc.c	/^  Bool mtMode;$/;"	m	struct:__anon32	file:
multiThread	.\src\tools\lzma\LzmaEnc.c	/^  Bool multiThread;$/;"	m	struct:__anon32	file:
mutex	.\src\thread\threadpool.h	/^    pthread_mutex_t mutex;            \/\/互斥信号量$/;"	m	struct:threadpool
mutex_alloc	.\inc\sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines
mutex_enter	.\inc\sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_free	.\inc\sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_leave	.\inc\sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_try	.\inc\sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mxLevel	.\inc\sqlite3.h	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info
mxPathname	.\inc\sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
my_node	.\src\common\connect.h	/^    struct rb_node my_node;$/;"	m	struct:conn_type	typeref:struct:conn_type::rb_node
nConstraint	.\inc\sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nCoord	.\inc\sqlite3.h	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info
nNumOfElements	.\lib\hashtable\hashtable.h	/^    int nNumOfElements;$/;"	m	struct:_hashtable
nOrderBy	.\inc\sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nParam	.\inc\sqlite3.h	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
nParam	.\inc\sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nRef	.\inc\sqlite3.h	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab
nTableMask	.\lib\hashtable\hashtable.h	/^    int nTableMask;$/;"	m	struct:_hashtable
nTableSize	.\lib\hashtable\hashtable.h	/^    int nTableSize;$/;"	m	struct:_hashtable
n_entries	.\lib\raft\raft.h	/^    int n_entries;$/;"	m	struct:__anon10
name	.\inc\zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
name_max	.\inc\zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
needFlush	.\src\tools\lzma\LzmaDec.h	/^  int needFlush;$/;"	m	struct:__anon24
needInit	.\src\tools\lzma\LzmaEnc.c	/^  int needInit;$/;"	m	struct:__anon32	file:
needInitState	.\src\tools\lzma\LzmaDec.h	/^  int needInitState;$/;"	m	struct:__anon24
needToFreeIdxStr	.\inc\sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
new_sigfunc	.\lib\timer_list.h	/^	void (*new_sigfunc)(int);				\/**< our signal handler	*\/$/;"	m	struct:timer_list
next	.\lib\hashtable\hashtable.h	38;"	d
next	.\lib\linked-list-queue\linked_list_queue.h	/^    llqnode_t *next;$/;"	m	struct:llqnode_s
next	.\src\thread\threadpool.h	/^    struct job *next;$/;"	m	struct:job	typeref:struct:job::job
next_idx	.\lib\raft\raft_node.c	/^    int next_idx;$/;"	m	struct:__anon15	file:
next_in	.\inc\zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	.\inc\zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_stmt	.\inc\sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
nkey	.\lib\hashtable\hashtable.h	40;"	d
node	.\lib\raft\raft_private.h	/^    raft_node_t* node;$/;"	m	struct:__anon16
node	.\src\common\connect.h	/^    struct conn_node *node;$/;"	m	struct:conn_type	typeref:struct:conn_type::conn_node
node_has_sufficient_logs	.\lib\raft\raft.h	/^    func_node_has_sufficient_logs_f node_has_sufficient_logs;$/;"	m	struct:__anon12
nodes	.\lib\raft\raft_private.h	/^    raft_node_t* nodes;$/;"	m	struct:__anon16
non_opt_	.\src\tools\opt_map.h	/^    std::vector<std::string> non_opt_;$/;"	m	class:phxrpc::OptMap
nowPos64	.\src\tools\lzma\LzmaEnc.c	/^  UInt64 nowPos64;$/;"	m	struct:__anon32	file:
num	.\lib\timer_list.h	/^	int num;								\/**< timer entry number *\/$/;"	m	struct:timer_list
numAvail	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 numAvail;$/;"	m	struct:__anon32	file:
numFastBytes	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 numFastBytes;$/;"	m	struct:__anon32	file:
numHashBytes	.\src\tools\lzma\LzFind.h	/^  UInt32 numHashBytes;$/;"	m	struct:_CMatchFinder
numHashBytes	.\src\tools\lzma\LzmaEnc.h	/^  int numHashBytes; \/* 2, 3 or 4, default = 4 *\/$/;"	m	struct:_CLzmaEncProps
numPairs	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 numPairs;$/;"	m	struct:__anon32	file:
numProbs	.\src\tools\lzma\LzmaDec.h	/^  UInt32 numProbs;$/;"	m	struct:__anon24
numSons	.\src\tools\lzma\LzFind.h	/^  UInt32 numSons;$/;"	m	struct:_CMatchFinder
numThreads	.\src\tools\lzma\LzmaEnc.h	/^  int numThreads;  \/* 1 or 2, default = 2 *\/$/;"	m	struct:_CLzmaEncProps
num_nodes	.\lib\raft\raft_private.h	/^    int num_nodes;$/;"	m	struct:__anon16
offsetof	.\src\common\util.h	16;"	d
old_sigfunc	.\lib\timer_list.h	/^	void (*old_sigfunc)(int);				\/**< save previous signal handler *\/$/;"	m	struct:timer_list
omit	.\inc\sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
on_accept	.\src\server\server.c	/^int on_accept(int client_conn_fd,struct sockaddr clientaddr)$/;"	f	file:
on_readable	.\src\server\server.c	/^int on_readable(int readable_fd)$/;"	f	file:
op	.\inc\sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
opaque	.\inc\zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open	.\inc\sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open16	.\inc\sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open_v2	.\inc\sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines
openlog	.\src\tools\log_utils.cpp	/^void openlog(const char * argv0, const char * log_dir, int priority) {$/;"	f	namespace:phxrpc
openlog_t	.\src\tools\log_utils.h	/^typedef void (*openlog_t)(const char*, const char *, int);$/;"	t	namespace:phxrpc
opt	.\src\tools\lzma\LzmaEnc.c	/^  COptimal opt[kNumOpts];$/;"	m	struct:__anon32	file:
opt_	.\src\tools\opt_map.h	/^    option_map_ opt_;$/;"	m	class:phxrpc::OptMap
opt_string_	.\src\tools\opt_map.h	/^    char * opt_string_;$/;"	m	class:phxrpc::OptMap
optimumCurrentIndex	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 optimumCurrentIndex;$/;"	m	struct:__anon32	file:
optimumEndIndex	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 optimumEndIndex;$/;"	m	struct:__anon32	file:
option_map_	.\src\tools\opt_map.h	/^    typedef std::map<char, std::vector<const char *>, std::less<char> > option_map_;$/;"	t	class:phxrpc::OptMap
orderByConsumed	.\inc\sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
os	.\inc\zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
outStream	.\src\tools\lzma\LzmaEnc.c	/^  ISeqOutStream *outStream;$/;"	m	struct:__anon30	file:
out_func	.\inc\zconf.h	49;"	d
out_func	.\inc\zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
outputError	.\lib\error\error_functions.c	/^outputError(Boolean useErr,int err,Boolean flushStdout,const char *format,va_list ap)$/;"	f	file:
ovalue	.\lib\timer_list.h	/^	struct itimerval ovalue;				\/**< old timer value *\/$/;"	m	struct:timer_list	typeref:struct:timer_list::itimerval
overflow	.\src\tools\lzma\LzmaEnc.c	/^  Bool overflow;$/;"	m	struct:__anon33	file:
overload_function	.\inc\sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines
p	.\src\tools\lzma\LzmaEnc.c	/^  CLenEnc p;$/;"	m	struct:__anon29	file:
pAppData	.\inc\sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	.\inc\sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pArg	.\inc\sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pArg	.\inc\sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2
pBuf	.\inc\sqlite3.h	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page
pContext	.\inc\sqlite3.h	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info
pContext	.\inc\sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pExtra	.\inc\sqlite3.h	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page
pInternalPointer	.\lib\hashtable\hashtable.h	/^    Bucket * pInternalPointer;$/;"	m	struct:_hashtable
pLast	.\lib\hashtable\hashtable.h	/^    struct _bucket *pLast;$/;"	m	struct:_bucket	typeref:struct:_bucket::_bucket
pListHead	.\lib\hashtable\hashtable.h	/^    Bucket * pListHead;$/;"	m	struct:_hashtable
pListLast	.\lib\hashtable\hashtable.h	/^    struct _bucket *pListLast;$/;"	m	struct:_bucket	typeref:struct:_bucket::_bucket
pListNext	.\lib\hashtable\hashtable.h	/^    struct _bucket *pListNext;$/;"	m	struct:_bucket	typeref:struct:_bucket::_bucket
pListTail	.\lib\hashtable\hashtable.h	/^    Bucket * pListTail;$/;"	m	struct:_hashtable
pMethods	.\inc\sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pModule	.\inc\sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pNext	.\inc\sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pNext	.\lib\hashtable\hashtable.h	/^    struct _bucket *pNext;$/;"	m	struct:_bucket	typeref:struct:_bucket::_bucket
pUser	.\inc\sqlite3.h	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info
pUser	.\inc\sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pVtab	.\inc\sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
pad	.\src\tools\lzma\LzmaEnc.c	/^  Byte pad[128];$/;"	m	struct:__anon32	file:
parent_run	.\src\main.c	/^void parent_run(int argc,char *argv[])$/;"	f
pb	.\src\tools\lzma\LzmaDec.h	/^  unsigned lc, lp, pb;$/;"	m	struct:_CLzmaProps
pb	.\src\tools\lzma\LzmaEnc.c	/^  unsigned lc, lp, pb;$/;"	m	struct:__anon32	file:
pb	.\src\tools\lzma\LzmaEnc.h	/^  int pb;          \/* 0 <= pb <= 4, default = 2 *\/$/;"	m	struct:_CLzmaEncProps
pbMask	.\src\tools\lzma\LzmaEnc.c	/^  unsigned lpMask, pbMask;$/;"	m	struct:__anon32	file:
persist_term	.\lib\raft\raft.h	/^    func_persist_int_f persist_term;$/;"	m	struct:__anon12
persist_vote	.\lib\raft\raft.h	/^    func_persist_int_f persist_vote;$/;"	m	struct:__anon12
php_charmask	.\lib\hashtable\str.c	/^static inline int php_charmask(unsigned char *input, int len, char *mask)$/;"	f	file:
phxrpc	.\src\tools\config.cpp	/^namespace phxrpc {$/;"	n	file:
phxrpc	.\src\tools\config.h	/^namespace phxrpc {$/;"	n
phxrpc	.\src\tools\file_utils.cpp	/^namespace phxrpc {$/;"	n	file:
phxrpc	.\src\tools\file_utils.h	/^namespace phxrpc {$/;"	n
phxrpc	.\src\tools\log_utils.cpp	/^namespace phxrpc {$/;"	n	file:
phxrpc	.\src\tools\log_utils.h	/^namespace phxrpc {$/;"	n
phxrpc	.\src\tools\opt_map.cpp	/^namespace phxrpc {$/;"	n	file:
phxrpc	.\src\tools\opt_map.h	/^namespace phxrpc {$/;"	n
pool_close	.\src\thread\threadpool.h	/^    int pool_close;                   \/\/线程池是否已经关闭$/;"	m	struct:threadpool
pop_msg_head	.\src\server\msg_queue.c	/^void* pop_msg_head(linked_list_queue_t *msg_queue)$/;"	f
port	.\src\common\config.h	/^	int port;$/;"	m	struct:system_net_conf
pos	.\src\tools\lzma\LzFind.h	/^  UInt32 pos;$/;"	m	struct:_CMatchFinder
pos	.\src\tools\lzma\Types.h	/^  size_t pos;$/;"	m	struct:__anon41
posAlignEncoder	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb posAlignEncoder[1 << kNumAlignBits];$/;"	m	struct:__anon31	file:
posAlignEncoder	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb posAlignEncoder[1 << kNumAlignBits];$/;"	m	struct:__anon32	file:
posEncoders	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb posEncoders[kNumFullDistances - kEndPosModelIndex];$/;"	m	struct:__anon31	file:
posEncoders	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb posEncoders[kNumFullDistances - kEndPosModelIndex];$/;"	m	struct:__anon32	file:
posLimit	.\src\tools\lzma\LzFind.h	/^  UInt32 posLimit;$/;"	m	struct:_CMatchFinder
posPrev	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 posPrev;$/;"	m	struct:__anon27	file:
posPrev2	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 posPrev2;$/;"	m	struct:__anon27	file:
posSlotEncoder	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb posSlotEncoder[kNumLenToPosStates][1 << kNumPosSlotBits];$/;"	m	struct:__anon31	file:
posSlotEncoder	.\src\tools\lzma\LzmaEnc.c	/^  CLzmaProb posSlotEncoder[kNumLenToPosStates][1 << kNumPosSlotBits];$/;"	m	struct:__anon32	file:
posSlotPrices	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 posSlotPrices[kNumLenToPosStates][kDistTableSizeMax];$/;"	m	struct:__anon32	file:
prepare	.\inc\sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare16	.\inc\sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16_v2	.\inc\sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare_v2	.\inc\sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prev1IsChar	.\src\tools\lzma\LzmaEnc.c	/^  int prev1IsChar;$/;"	m	struct:__anon27	file:
prev2	.\src\tools\lzma\LzmaEnc.c	/^  int prev2;$/;"	m	struct:__anon27	file:
prev_log_idx	.\lib\raft\raft.h	/^    int prev_log_idx;$/;"	m	struct:__anon10
prev_log_term	.\lib\raft\raft.h	/^    int prev_log_term;$/;"	m	struct:__anon10
price	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 price;$/;"	m	struct:__anon27	file:
prices	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 prices[LZMA_NUM_PB_STATES_MAX][kLenNumSymbolsTotal];$/;"	m	struct:__anon29	file:
print_rbtree	.\src\common\connect.c	/^void print_rbtree(struct rb_root *tree)$/;"	f
printch	.\src\common\log.c	/^void printch(FILE * lf,const char ch)$/;"	f
printfloat	.\src\common\log.c	/^void printfloat(FILE * lf,const float flt)$/;"	f
printint	.\src\common\log.c	/^void printint(FILE * lf,const int dec)$/;"	f
printstr	.\src\common\log.c	/^void printstr(FILE * lf,const char *ptr)$/;"	f
probs	.\src\tools\lzma\LzmaDec.h	/^  CLzmaProb *probs;$/;"	m	struct:__anon24
process_init	.\src\main.c	/^void  process_init(int argc , char *argv[])$/;"	f
processed	.\src\tools\lzma\LzmaEnc.c	/^  UInt64 processed;$/;"	m	struct:__anon30	file:
processedPos	.\src\tools\lzma\LzmaDec.h	/^  UInt32 processedPos;$/;"	m	struct:__anon24
profile	.\inc\sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines
progress_handler	.\inc\sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
prop	.\src\tools\lzma\LzmaDec.h	/^  CLzmaProps prop;$/;"	m	struct:__anon24
protocol	.\src\client\client_util.h	/^	uint16_t protocol; 					\/\/连接协议$/;"	m	struct:connection
pthreads	.\src\thread\threadpool.h	/^    pthread_t *pthreads;              \/\/线程池中所有线程的pthread_t$/;"	m	struct:threadpool
push_msg_tail	.\src\server\msg_queue.c	/^void push_msg_tail(linked_list_queue_t *msg_queue,void *item)$/;"	f
queue_close	.\src\thread\threadpool.h	/^    int queue_close;                  \/\/队列是否已经关闭$/;"	m	struct:threadpool
queue_cur_num	.\src\thread\threadpool.h	/^    int queue_cur_num;                \/\/队列当前的job个数$/;"	m	struct:threadpool
queue_empty	.\src\thread\threadpool.h	/^    pthread_cond_t queue_empty;       \/\/队列为空的条件变量$/;"	m	struct:threadpool
queue_max_num	.\src\thread\threadpool.h	/^    int queue_max_num;                \/\/队列中最大job的个数$/;"	m	struct:threadpool
queue_not_empty	.\src\thread\threadpool.h	/^    pthread_cond_t queue_not_empty;   \/\/队列不为空的条件变量$/;"	m	struct:threadpool
queue_not_full	.\src\thread\threadpool.h	/^    pthread_cond_t queue_not_full;    \/\/队列不为满的条件变量$/;"	m	struct:threadpool
queue_num	.\src\common\config.h	/^	int queue_num=4;$/;"	m	struct:system_conf
queues	.\src\server\server_util.h	/^    int queues;                  \/\/消息队列的个数$/;"	m	struct:server
rParentScore	.\inc\sqlite3.h	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
rScore	.\inc\sqlite3.h	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info
raft	.\lib\raft\raft_log.c	/^    void* raft;$/;"	m	struct:__anon14	file:
raft_add_node	.\lib\raft\raft_server.c	/^raft_node_t* raft_add_node(raft_server_t* me_, void* udata, int id, int is_self)$/;"	f
raft_add_non_voting_node	.\lib\raft\raft_server.c	/^raft_node_t* raft_add_non_voting_node(raft_server_t* me_, void* udata, int id, int is_self)$/;"	f
raft_add_peer	.\lib\raft\raft.h	367;"	d
raft_already_voted	.\lib\raft\raft_server.c	/^int raft_already_voted(raft_server_t* me_)$/;"	f
raft_append_entry	.\lib\raft\raft_server.c	/^int raft_append_entry(raft_server_t* me_, raft_entry_t* ety)$/;"	f
raft_apply_all	.\lib\raft\raft_server.c	/^int raft_apply_all(raft_server_t* me_)$/;"	f
raft_apply_entry	.\lib\raft\raft_server.c	/^int raft_apply_entry(raft_server_t* me_)$/;"	f
raft_become_candidate	.\lib\raft\raft_server.c	/^void raft_become_candidate(raft_server_t* me_)$/;"	f
raft_become_follower	.\lib\raft\raft_server.c	/^void raft_become_follower(raft_server_t* me_)$/;"	f
raft_become_leader	.\lib\raft\raft_server.c	/^void raft_become_leader(raft_server_t* me_)$/;"	f
raft_cbs_t	.\lib\raft\raft.h	/^} raft_cbs_t;$/;"	t	typeref:struct:__anon12
raft_clear	.\lib\raft\raft_server.c	/^void raft_clear(raft_server_t* me_)$/;"	f
raft_election_start	.\lib\raft\raft_server.c	/^void raft_election_start(raft_server_t* me_)$/;"	f
raft_entry_data_t	.\lib\raft\raft.h	/^} raft_entry_data_t;$/;"	t	typeref:struct:__anon5
raft_entry_is_cfg_change	.\lib\raft\raft_server.c	/^int raft_entry_is_cfg_change(raft_entry_t* ety)$/;"	f
raft_entry_is_voting_cfg_change	.\lib\raft\raft_server.c	/^int raft_entry_is_voting_cfg_change(raft_entry_t* ety)$/;"	f
raft_entry_t	.\lib\raft\raft.h	/^} raft_entry_t;$/;"	t	typeref:struct:__anon6
raft_free	.\lib\raft\raft_server.c	/^void raft_free(raft_server_t* me_)$/;"	f
raft_get_commit_idx	.\lib\raft\raft_server_properties.c	/^int raft_get_commit_idx(raft_server_t* me_)$/;"	f
raft_get_current_idx	.\lib\raft\raft_server_properties.c	/^int raft_get_current_idx(raft_server_t* me_)$/;"	f
raft_get_current_leader	.\lib\raft\raft_server_properties.c	/^int raft_get_current_leader(raft_server_t* me_)$/;"	f
raft_get_current_leader_node	.\lib\raft\raft_server_properties.c	/^raft_node_t* raft_get_current_leader_node(raft_server_t* me_)$/;"	f
raft_get_current_term	.\lib\raft\raft_server_properties.c	/^int raft_get_current_term(raft_server_t* me_)$/;"	f
raft_get_election_timeout	.\lib\raft\raft_server_properties.c	/^int raft_get_election_timeout(raft_server_t* me_)$/;"	f
raft_get_entries_from_idx	.\lib\raft\raft_server.c	/^raft_entry_t* raft_get_entries_from_idx(raft_server_t* me_, int idx, int* n_etys)$/;"	f
raft_get_entry_from_idx	.\lib\raft\raft_server.c	/^raft_entry_t* raft_get_entry_from_idx(raft_server_t* me_, int etyidx)$/;"	f
raft_get_last_applied_idx	.\lib\raft\raft_server_properties.c	/^int raft_get_last_applied_idx(raft_server_t* me_)$/;"	f
raft_get_last_log_term	.\lib\raft\raft_server_properties.c	/^int raft_get_last_log_term(raft_server_t* me_)$/;"	f
raft_get_log_count	.\lib\raft\raft_server_properties.c	/^int raft_get_log_count(raft_server_t* me_)$/;"	f
raft_get_node	.\lib\raft\raft_server_properties.c	/^raft_node_t* raft_get_node(raft_server_t *me_, int nodeid)$/;"	f
raft_get_node_from_idx	.\lib\raft\raft_server_properties.c	/^raft_node_t* raft_get_node_from_idx(raft_server_t* me_, const int idx)$/;"	f
raft_get_nodeid	.\lib\raft\raft_server_properties.c	/^int raft_get_nodeid(raft_server_t* me_)$/;"	f
raft_get_num_nodes	.\lib\raft\raft_server_properties.c	/^int raft_get_num_nodes(raft_server_t* me_)$/;"	f
raft_get_nvotes_for_me	.\lib\raft\raft_server.c	/^int raft_get_nvotes_for_me(raft_server_t* me_)$/;"	f
raft_get_request_timeout	.\lib\raft\raft_server_properties.c	/^int raft_get_request_timeout(raft_server_t* me_)$/;"	f
raft_get_state	.\lib\raft\raft_server_properties.c	/^int raft_get_state(raft_server_t* me_)$/;"	f
raft_get_timeout_elapsed	.\lib\raft\raft_server_properties.c	/^int raft_get_timeout_elapsed(raft_server_t* me_)$/;"	f
raft_get_udata	.\lib\raft\raft_server_properties.c	/^void* raft_get_udata(raft_server_t* me_)$/;"	f
raft_get_voted_for	.\lib\raft\raft_server_properties.c	/^int raft_get_voted_for(raft_server_t* me_)$/;"	f
raft_is_candidate	.\lib\raft\raft_server_properties.c	/^int raft_is_candidate(raft_server_t* me_)$/;"	f
raft_is_follower	.\lib\raft\raft_server_properties.c	/^int raft_is_follower(raft_server_t* me_)$/;"	f
raft_is_leader	.\lib\raft\raft_server_properties.c	/^int raft_is_leader(raft_server_t* me_)$/;"	f
raft_logtype_e	.\lib\raft\raft.h	/^} raft_logtype_e;$/;"	t	typeref:enum:__anon4
raft_msg_entry_response_committed	.\lib\raft\raft_server.c	/^int raft_msg_entry_response_committed(raft_server_t* me_,$/;"	f
raft_new	.\lib\raft\raft_server.c	/^raft_server_t* raft_new()$/;"	f
raft_node_configuration_t	.\lib\raft\raft.h	/^} raft_node_configuration_t;$/;"	t	typeref:struct:__anon13
raft_node_get_id	.\lib\raft\raft_node.c	/^int raft_node_get_id(raft_node_t* me_)$/;"	f
raft_node_get_match_idx	.\lib\raft\raft_node.c	/^int raft_node_get_match_idx(raft_node_t* me_)$/;"	f
raft_node_get_next_idx	.\lib\raft\raft_node.c	/^int raft_node_get_next_idx(raft_node_t* me_)$/;"	f
raft_node_get_udata	.\lib\raft\raft_node.c	/^void* raft_node_get_udata(raft_node_t* me_)$/;"	f
raft_node_has_sufficient_logs	.\lib\raft\raft_node.c	/^int raft_node_has_sufficient_logs(raft_node_t* me_)$/;"	f
raft_node_has_vote_for_me	.\lib\raft\raft_node.c	/^int raft_node_has_vote_for_me(raft_node_t* me_)$/;"	f
raft_node_is_voting	.\lib\raft\raft_node.c	/^int raft_node_is_voting(raft_node_t* me_)$/;"	f
raft_node_new	.\lib\raft\raft_node.c	/^raft_node_t* raft_node_new(void* udata, int id)$/;"	f
raft_node_private_t	.\lib\raft\raft_node.c	/^} raft_node_private_t;$/;"	t	typeref:struct:__anon15	file:
raft_node_set_has_sufficient_logs	.\lib\raft\raft_node.c	/^void raft_node_set_has_sufficient_logs(raft_node_t* me_)$/;"	f
raft_node_set_match_idx	.\lib\raft\raft_node.c	/^void raft_node_set_match_idx(raft_node_t* me_, int matchIdx)$/;"	f
raft_node_set_next_idx	.\lib\raft\raft_node.c	/^void raft_node_set_next_idx(raft_node_t* me_, int nextIdx)$/;"	f
raft_node_set_udata	.\lib\raft\raft_node.c	/^void raft_node_set_udata(raft_node_t* me_, void* udata)$/;"	f
raft_node_set_voting	.\lib\raft\raft_node.c	/^void raft_node_set_voting(raft_node_t* me_, int voting)$/;"	f
raft_node_t	.\lib\raft\raft.h	/^typedef void* raft_node_t;$/;"	t
raft_node_vote_for_me	.\lib\raft\raft_node.c	/^void raft_node_vote_for_me(raft_node_t* me_, const int vote)$/;"	f
raft_periodic	.\lib\raft\raft_server.c	/^int raft_periodic(raft_server_t* me_, int msec_since_last_period)$/;"	f
raft_recv_appendentries	.\lib\raft\raft_server.c	/^int raft_recv_appendentries($/;"	f
raft_recv_appendentries_response	.\lib\raft\raft_server.c	/^int raft_recv_appendentries_response(raft_server_t* me_,$/;"	f
raft_recv_entry	.\lib\raft\raft_server.c	/^int raft_recv_entry(raft_server_t* me_,$/;"	f
raft_recv_requestvote	.\lib\raft\raft_server.c	/^int raft_recv_requestvote(raft_server_t* me_,$/;"	f
raft_recv_requestvote_response	.\lib\raft\raft_server.c	/^int raft_recv_requestvote_response(raft_server_t* me_,$/;"	f
raft_remove_node	.\lib\raft\raft_server.c	/^void raft_remove_node(raft_server_t* me_, raft_node_t* node)$/;"	f
raft_send_appendentries	.\lib\raft\raft_server.c	/^int raft_send_appendentries(raft_server_t* me_, raft_node_t* node)$/;"	f
raft_send_appendentries_all	.\lib\raft\raft_server.c	/^void raft_send_appendentries_all(raft_server_t* me_)$/;"	f
raft_send_requestvote	.\lib\raft\raft_server.c	/^int raft_send_requestvote(raft_server_t* me_, raft_node_t* node)$/;"	f
raft_server_private_t	.\lib\raft\raft_private.h	/^} raft_server_private_t;$/;"	t	typeref:struct:__anon16
raft_server_t	.\lib\raft\raft.h	/^typedef void* raft_server_t;$/;"	t
raft_set_callbacks	.\lib\raft\raft_server.c	/^void raft_set_callbacks(raft_server_t* me_, raft_cbs_t* funcs, void* udata)$/;"	f
raft_set_commit_idx	.\lib\raft\raft_server_properties.c	/^void raft_set_commit_idx(raft_server_t* me_, int idx)$/;"	f
raft_set_current_term	.\lib\raft\raft_server_properties.c	/^void raft_set_current_term(raft_server_t* me_, const int term)$/;"	f
raft_set_election_timeout	.\lib\raft\raft_server_properties.c	/^void raft_set_election_timeout(raft_server_t* me_, int millisec)$/;"	f
raft_set_last_applied_idx	.\lib\raft\raft_server_properties.c	/^void raft_set_last_applied_idx(raft_server_t* me_, int idx)$/;"	f
raft_set_request_timeout	.\lib\raft\raft_server_properties.c	/^void raft_set_request_timeout(raft_server_t* me_, int millisec)$/;"	f
raft_set_state	.\lib\raft\raft_server_properties.c	/^void raft_set_state(raft_server_t* me_, int state)$/;"	f
raft_state_e	.\lib\raft\raft.h	/^} raft_state_e;$/;"	t	typeref:enum:__anon3
raft_vote	.\lib\raft\raft_server.c	/^void raft_vote(raft_server_t* me_, raft_node_t* node)$/;"	f
raft_vote_for_nodeid	.\lib\raft\raft_server.c	/^void raft_vote_for_nodeid(raft_server_t* me_, const int nodeid)$/;"	f
raft_votes_is_majority	.\lib\raft\raft_server.c	/^int raft_votes_is_majority(const int num_nodes, const int nvotes)$/;"	f
randomness	.\inc\sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines
range	.\src\tools\lzma\LzmaDec.h	/^  UInt32 range, code;$/;"	m	struct:__anon24
range	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 range;$/;"	m	struct:__anon30	file:
rb_color	.\lib\rbtree.h	115;"	d
rb_entry	.\lib\rbtree.h	131;"	d
rb_erase	.\lib\rbtree.c	/^void rb_erase(struct rb_node *node, struct rb_root *root)$/;"	f
rb_first	.\lib\rbtree.c	/^struct rb_node *rb_first(const struct rb_root *root)$/;"	f
rb_insert_color	.\lib\rbtree.c	/^void rb_insert_color(struct rb_node *node, struct rb_root *root)$/;"	f
rb_is_black	.\lib\rbtree.h	117;"	d
rb_is_red	.\lib\rbtree.h	116;"	d
rb_last	.\lib\rbtree.c	/^struct rb_node *rb_last(const struct rb_root *root)$/;"	f
rb_left	.\lib\rbtree.h	/^	struct rb_node *rb_left;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_link_node	.\lib\rbtree.h	/^static inline void rb_link_node(struct rb_node * node, struct rb_node * parent,$/;"	f
rb_next	.\lib\rbtree.c	/^struct rb_node *rb_next(const struct rb_node *node)$/;"	f
rb_node	.\lib\rbtree.h	/^	struct rb_node *rb_node;$/;"	m	struct:rb_root	typeref:struct:rb_root::rb_node
rb_node	.\lib\rbtree.h	/^struct rb_node$/;"	s
rb_parent	.\lib\rbtree.h	114;"	d
rb_parent_color	.\lib\rbtree.h	/^	unsigned long  rb_parent_color;$/;"	m	struct:rb_node
rb_prev	.\lib\rbtree.c	/^struct rb_node *rb_prev(const struct rb_node *node)$/;"	f
rb_replace_node	.\lib\rbtree.c	/^void rb_replace_node(struct rb_node *victim, struct rb_node *news,$/;"	f
rb_right	.\lib\rbtree.h	/^	struct rb_node *rb_right;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_root	.\lib\rbtree.h	/^struct rb_root$/;"	s
rb_set_black	.\lib\rbtree.h	119;"	d
rb_set_color	.\lib\rbtree.h	/^static inline void rb_set_color(struct rb_node *rb, int color)$/;"	f
rb_set_parent	.\lib\rbtree.h	/^static inline void rb_set_parent(struct rb_node *rb, struct rb_node *p)$/;"	f
rb_set_red	.\lib\rbtree.h	118;"	d
rc	.\src\tools\lzma\LzmaEnc.c	/^  CRangeEnc rc;$/;"	m	struct:__anon32	file:
realStream	.\src\tools\lzma\Types.h	/^  ILookInStream *realStream;$/;"	m	struct:__anon42
realStream	.\src\tools\lzma\Types.h	/^  ILookInStream *realStream;$/;"	m	struct:__anon43
realStream	.\src\tools\lzma\Types.h	/^  ISeekInStream *realStream;$/;"	m	struct:__anon41
realloc	.\inc\sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines
realloc64	.\inc\sqlite3ext.h	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
registe_sig_handler	.\src\common\sig_handler.c	/^void registe_sig_handler(){$/;"	f
release_memory	.\inc\sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines
rem	.\src\tools\lzma\LzmaEnc.c	/^  SizeT rem;$/;"	m	struct:__anon33	file:
remainLen	.\src\tools\lzma\LzmaDec.h	/^  unsigned remainLen;$/;"	m	struct:__anon24
repLenEnc	.\src\tools\lzma\LzmaEnc.c	/^  CLenPriceEnc repLenEnc;$/;"	m	struct:__anon31	file:
repLenEnc	.\src\tools\lzma\LzmaEnc.c	/^  CLenPriceEnc repLenEnc;$/;"	m	struct:__anon32	file:
reps	.\src\tools\lzma\LzmaDec.h	/^  UInt32 reps[4];$/;"	m	struct:__anon24
reps	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 reps[LZMA_NUM_REPS];$/;"	m	struct:__anon31	file:
reps	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 reps[LZMA_NUM_REPS];$/;"	m	struct:__anon32	file:
request_timeout	.\lib\raft\raft_private.h	/^    int request_timeout;$/;"	m	struct:__anon16
res	.\src\tools\lzma\LzmaEnc.c	/^  SRes res;$/;"	m	struct:__anon30	file:
reserved	.\inc\zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reset	.\inc\sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
reset	.\lib\hashtable\hashtable.h	37;"	d
reset_auto_extension	.\inc\sqlite3ext.h	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines
result	.\src\tools\lzma\LzFind.h	/^  SRes result;$/;"	m	struct:_CMatchFinder
result	.\src\tools\lzma\LzmaEnc.c	/^  SRes result;$/;"	m	struct:__anon32	file:
result_blob	.\inc\sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_blob64	.\inc\sqlite3ext.h	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_double	.\inc\sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines
result_error	.\inc\sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines
result_error16	.\inc\sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines
result_error_code	.\inc\sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_error_nomem	.\inc\sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_toobig	.\inc\sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_int	.\inc\sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_int64	.\inc\sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
result_null	.\inc\sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_text	.\inc\sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16	.\inc\sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16be	.\inc\sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16le	.\inc\sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text64	.\inc\sqlite3ext.h	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_value	.\inc\sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
result_zeroblob	.\inc\sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
rollback_hook	.\inc\sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
s	.\src\tools\lzma\7zFile.h	/^  ISeekInStream s;$/;"	m	struct:__anon21
s	.\src\tools\lzma\7zFile.h	/^  ISeqInStream s;$/;"	m	struct:__anon20
s	.\src\tools\lzma\7zFile.h	/^  ISeqOutStream s;$/;"	m	struct:__anon22
s	.\src\tools\lzma\Types.h	/^  ILookInStream s;$/;"	m	struct:__anon41
s	.\src\tools\lzma\Types.h	/^  ISeqInStream s;$/;"	m	struct:__anon42
s	.\src\tools\lzma\Types.h	/^  ISeqInStream s;$/;"	m	struct:__anon43
saddr	.\src\client\client_util.h	/^	struct sockaddr_in saddr;$/;"	m	struct:connection	typeref:struct:connection::sockaddr_in
saveState	.\src\tools\lzma\LzmaEnc.c	/^  CSaveState saveState;$/;"	m	struct:__anon32	file:
select_message_qeueue	.\src\server\service_dispatch.c	/^int select_message_qeueue(server_t *master_server){$/;"	f	file:
send_appendentries	.\lib\raft\raft.h	/^    func_send_appendentries_f send_appendentries;$/;"	m	struct:__anon12
send_message_to_list	.\src\server\mq_receiver.c	/^static void send_message_to_list(struct hash_node *node,message_t *msg){$/;"	f	file:
send_msg_mq	.\src\server\mq_sender.h	/^void send_msg_mq(msg_queue_t *mq,message_t *msg){$/;"	f
send_requestvote	.\lib\raft\raft.h	/^    func_send_requestvote_f send_requestvote;$/;"	m	struct:__anon12
send_to_mq	.\src\server\mq_sender.h	/^void send_to_mq(linked_list_queue_t *msg_queue,message_t *msg){$/;"	f
server	.\src\server\server_util.h	/^typedef struct server{$/;"	s
server_handler	.\src\server\server_util.h	/^struct server_handler{$/;"	s
server_init	.\src\server\server.c	/^int server_init(int argc,char *argv[])$/;"	f
server_set_sock	.\src\server\server_util.c	/^void  server_set_sock(int sfd){$/;"	f
server_t	.\src\server\server_util.h	/^}server_t;$/;"	t	typeref:struct:server
set_authorizer	.\inc\sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
set_auxdata	.\inc\sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines
setlog	.\src\tools\log_utils.cpp	/^void setlog(openlog_t open_log, closelog_t close_log, vlog_t vlog) {$/;"	f	namespace:phxrpc
setnonblock	.\src\common\util.c	/^void setnonblock(int fd)$/;"	f
setvlog	.\src\tools\log_utils.cpp	/^void setvlog(vlog_t vlog) {$/;"	f	namespace:phxrpc
sigCatch	.\src\common\sig_handler.c	/^sig_info_t sigCatch[] = {$/;"	v
sig_func	.\lib\timer_lists.c	/^void sig_func(int signo)$/;"	f
sig_info	.\src\common\sig_handler.h	/^typedef struct sig_info$/;"	s
sig_info_t	.\src\common\sig_handler.h	/^} sig_info_t;$/;"	t	typeref:struct:sig_info
signame	.\src\common\sig_handler.h	/^    char    signame[20];$/;"	m	struct:sig_info
signum	.\src\common\sig_handler.h	/^    int     signum;$/;"	m	struct:sig_info
size	.\lib\raft\raft_log.c	/^    int size;$/;"	m	struct:__anon14	file:
size	.\src\tools\lzma\Types.h	/^  size_t size;$/;"	m	struct:__anon41
skey	.\lib\hashtable\hashtable.h	41;"	d
sleep	.\inc\sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines
snprintf	.\inc\sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines
sock_client	.\src\client\client_util.h	/^struct sock_client{$/;"	s
socket_pkg	.\src\server\socket_pkg.h	/^typedef struct socket_pkg{$/;"	s
socket_pkg_t	.\src\server\socket_pkg.h	/^}socket_pkg_t;$/;"	t	typeref:struct:socket_pkg
soft_heap_limit	.\inc\sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit64	.\inc\sqlite3ext.h	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
son	.\src\tools\lzma\LzFind.h	/^  CLzRef *son;$/;"	m	struct:_CMatchFinder
sourceid	.\inc\sqlite3ext.h	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines
split	.\lib\hashtable\str.c	/^char** split(const char* string, char delim, int* count){$/;"	f
sql	.\inc\sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
sqlite3	.\inc\sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3_aggregate_context	.\inc\sqlite3ext.h	285;"	d
sqlite3_aggregate_count	.\inc\sqlite3ext.h	287;"	d
sqlite3_api_routines	.\inc\sqlite3ext.h	/^struct sqlite3_api_routines {$/;"	s
sqlite3_api_routines	.\inc\sqlite3ext.h	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines
sqlite3_auto_extension	.\inc\sqlite3ext.h	489;"	d
sqlite3_backup	.\inc\sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup_finish	.\inc\sqlite3ext.h	450;"	d
sqlite3_backup_init	.\inc\sqlite3ext.h	451;"	d
sqlite3_backup_pagecount	.\inc\sqlite3ext.h	452;"	d
sqlite3_backup_remaining	.\inc\sqlite3ext.h	453;"	d
sqlite3_backup_step	.\inc\sqlite3ext.h	454;"	d
sqlite3_bind_blob	.\inc\sqlite3ext.h	289;"	d
sqlite3_bind_blob64	.\inc\sqlite3ext.h	490;"	d
sqlite3_bind_double	.\inc\sqlite3ext.h	290;"	d
sqlite3_bind_int	.\inc\sqlite3ext.h	291;"	d
sqlite3_bind_int64	.\inc\sqlite3ext.h	292;"	d
sqlite3_bind_null	.\inc\sqlite3ext.h	293;"	d
sqlite3_bind_parameter_count	.\inc\sqlite3ext.h	294;"	d
sqlite3_bind_parameter_index	.\inc\sqlite3ext.h	295;"	d
sqlite3_bind_parameter_name	.\inc\sqlite3ext.h	296;"	d
sqlite3_bind_text	.\inc\sqlite3ext.h	297;"	d
sqlite3_bind_text16	.\inc\sqlite3ext.h	298;"	d
sqlite3_bind_text64	.\inc\sqlite3ext.h	491;"	d
sqlite3_bind_value	.\inc\sqlite3ext.h	299;"	d
sqlite3_bind_zeroblob	.\inc\sqlite3ext.h	415;"	d
sqlite3_blob	.\inc\sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob_bytes	.\inc\sqlite3ext.h	416;"	d
sqlite3_blob_close	.\inc\sqlite3ext.h	417;"	d
sqlite3_blob_open	.\inc\sqlite3ext.h	418;"	d
sqlite3_blob_read	.\inc\sqlite3ext.h	419;"	d
sqlite3_blob_reopen	.\inc\sqlite3ext.h	471;"	d
sqlite3_blob_write	.\inc\sqlite3ext.h	420;"	d
sqlite3_busy_handler	.\inc\sqlite3ext.h	300;"	d
sqlite3_busy_timeout	.\inc\sqlite3ext.h	301;"	d
sqlite3_callback	.\inc\sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_cancel_auto_extension	.\inc\sqlite3ext.h	492;"	d
sqlite3_changes	.\inc\sqlite3ext.h	302;"	d
sqlite3_clear_bindings	.\inc\sqlite3ext.h	414;"	d
sqlite3_close	.\inc\sqlite3ext.h	303;"	d
sqlite3_close_v2	.\inc\sqlite3ext.h	475;"	d
sqlite3_collation_needed	.\inc\sqlite3ext.h	304;"	d
sqlite3_collation_needed16	.\inc\sqlite3ext.h	305;"	d
sqlite3_column_blob	.\inc\sqlite3ext.h	306;"	d
sqlite3_column_bytes	.\inc\sqlite3ext.h	307;"	d
sqlite3_column_bytes16	.\inc\sqlite3ext.h	308;"	d
sqlite3_column_count	.\inc\sqlite3ext.h	309;"	d
sqlite3_column_database_name	.\inc\sqlite3ext.h	310;"	d
sqlite3_column_database_name16	.\inc\sqlite3ext.h	311;"	d
sqlite3_column_decltype	.\inc\sqlite3ext.h	312;"	d
sqlite3_column_decltype16	.\inc\sqlite3ext.h	313;"	d
sqlite3_column_double	.\inc\sqlite3ext.h	314;"	d
sqlite3_column_int	.\inc\sqlite3ext.h	315;"	d
sqlite3_column_int64	.\inc\sqlite3ext.h	316;"	d
sqlite3_column_name	.\inc\sqlite3ext.h	317;"	d
sqlite3_column_name16	.\inc\sqlite3ext.h	318;"	d
sqlite3_column_origin_name	.\inc\sqlite3ext.h	319;"	d
sqlite3_column_origin_name16	.\inc\sqlite3ext.h	320;"	d
sqlite3_column_table_name	.\inc\sqlite3ext.h	321;"	d
sqlite3_column_table_name16	.\inc\sqlite3ext.h	322;"	d
sqlite3_column_text	.\inc\sqlite3ext.h	323;"	d
sqlite3_column_text16	.\inc\sqlite3ext.h	324;"	d
sqlite3_column_type	.\inc\sqlite3ext.h	325;"	d
sqlite3_column_value	.\inc\sqlite3ext.h	326;"	d
sqlite3_commit_hook	.\inc\sqlite3ext.h	327;"	d
sqlite3_compileoption_get	.\inc\sqlite3ext.h	455;"	d
sqlite3_compileoption_used	.\inc\sqlite3ext.h	456;"	d
sqlite3_complete	.\inc\sqlite3ext.h	328;"	d
sqlite3_complete16	.\inc\sqlite3ext.h	329;"	d
sqlite3_context	.\inc\sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context_db_handle	.\inc\sqlite3ext.h	444;"	d
sqlite3_create_collation	.\inc\sqlite3ext.h	330;"	d
sqlite3_create_collation16	.\inc\sqlite3ext.h	331;"	d
sqlite3_create_collation_v2	.\inc\sqlite3ext.h	421;"	d
sqlite3_create_function	.\inc\sqlite3ext.h	332;"	d
sqlite3_create_function16	.\inc\sqlite3ext.h	333;"	d
sqlite3_create_function_v2	.\inc\sqlite3ext.h	457;"	d
sqlite3_create_module	.\inc\sqlite3ext.h	334;"	d
sqlite3_create_module_v2	.\inc\sqlite3ext.h	335;"	d
sqlite3_data_count	.\inc\sqlite3ext.h	336;"	d
sqlite3_data_directory	.\inc\sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_data_directory;$/;"	v
sqlite3_db_config	.\inc\sqlite3ext.h	458;"	d
sqlite3_db_filename	.\inc\sqlite3ext.h	476;"	d
sqlite3_db_handle	.\inc\sqlite3ext.h	337;"	d
sqlite3_db_mutex	.\inc\sqlite3ext.h	459;"	d
sqlite3_db_readonly	.\inc\sqlite3ext.h	477;"	d
sqlite3_db_release_memory	.\inc\sqlite3ext.h	478;"	d
sqlite3_db_status	.\inc\sqlite3ext.h	460;"	d
sqlite3_declare_vtab	.\inc\sqlite3ext.h	338;"	d
sqlite3_destructor_type	.\inc\sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_enable_shared_cache	.\inc\sqlite3ext.h	339;"	d
sqlite3_errcode	.\inc\sqlite3ext.h	340;"	d
sqlite3_errmsg	.\inc\sqlite3ext.h	341;"	d
sqlite3_errmsg16	.\inc\sqlite3ext.h	342;"	d
sqlite3_errstr	.\inc\sqlite3ext.h	479;"	d
sqlite3_exec	.\inc\sqlite3ext.h	343;"	d
sqlite3_expired	.\inc\sqlite3ext.h	345;"	d
sqlite3_extended_errcode	.\inc\sqlite3ext.h	461;"	d
sqlite3_extended_result_codes	.\inc\sqlite3ext.h	445;"	d
sqlite3_file	.\inc\sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	.\inc\sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file_control	.\inc\sqlite3ext.h	422;"	d
sqlite3_finalize	.\inc\sqlite3ext.h	347;"	d
sqlite3_free	.\inc\sqlite3ext.h	348;"	d
sqlite3_free_table	.\inc\sqlite3ext.h	349;"	d
sqlite3_get_autocommit	.\inc\sqlite3ext.h	350;"	d
sqlite3_get_auxdata	.\inc\sqlite3ext.h	351;"	d
sqlite3_get_table	.\inc\sqlite3ext.h	352;"	d
sqlite3_global_recover	.\inc\sqlite3ext.h	354;"	d
sqlite3_index_constraint	.\inc\sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	.\inc\sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_info	.\inc\sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	.\inc\sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_orderby	.\inc\sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_int64	.\inc\sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_interrupt	.\inc\sqlite3ext.h	356;"	d
sqlite3_io_methods	.\inc\sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	.\inc\sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_last_insert_rowid	.\inc\sqlite3ext.h	357;"	d
sqlite3_libversion	.\inc\sqlite3ext.h	358;"	d
sqlite3_libversion_number	.\inc\sqlite3ext.h	359;"	d
sqlite3_limit	.\inc\sqlite3ext.h	446;"	d
sqlite3_load_extension	.\inc\sqlite3ext.h	493;"	d
sqlite3_log	.\inc\sqlite3ext.h	462;"	d
sqlite3_malloc	.\inc\sqlite3ext.h	360;"	d
sqlite3_malloc64	.\inc\sqlite3ext.h	494;"	d
sqlite3_mem_methods	.\inc\sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	.\inc\sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_memory_highwater	.\inc\sqlite3ext.h	423;"	d
sqlite3_memory_used	.\inc\sqlite3ext.h	424;"	d
sqlite3_module	.\inc\sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	.\inc\sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_mprintf	.\inc\sqlite3ext.h	361;"	d
sqlite3_msize	.\inc\sqlite3ext.h	495;"	d
sqlite3_mutex	.\inc\sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_alloc	.\inc\sqlite3ext.h	425;"	d
sqlite3_mutex_enter	.\inc\sqlite3ext.h	426;"	d
sqlite3_mutex_free	.\inc\sqlite3ext.h	427;"	d
sqlite3_mutex_leave	.\inc\sqlite3ext.h	428;"	d
sqlite3_mutex_methods	.\inc\sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	.\inc\sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_try	.\inc\sqlite3ext.h	429;"	d
sqlite3_next_stmt	.\inc\sqlite3ext.h	447;"	d
sqlite3_open	.\inc\sqlite3ext.h	362;"	d
sqlite3_open16	.\inc\sqlite3ext.h	363;"	d
sqlite3_open_v2	.\inc\sqlite3ext.h	430;"	d
sqlite3_overload_function	.\inc\sqlite3ext.h	411;"	d
sqlite3_pcache	.\inc\sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	.\inc\sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	.\inc\sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_pcache_methods2	.\inc\sqlite3.h	/^struct sqlite3_pcache_methods2 {$/;"	s
sqlite3_pcache_methods2	.\inc\sqlite3.h	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2
sqlite3_pcache_page	.\inc\sqlite3.h	/^struct sqlite3_pcache_page {$/;"	s
sqlite3_pcache_page	.\inc\sqlite3.h	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page
sqlite3_prepare	.\inc\sqlite3ext.h	364;"	d
sqlite3_prepare16	.\inc\sqlite3ext.h	365;"	d
sqlite3_prepare16_v2	.\inc\sqlite3ext.h	367;"	d
sqlite3_prepare16_v2	.\inc\sqlite3ext.h	413;"	d
sqlite3_prepare_v2	.\inc\sqlite3ext.h	366;"	d
sqlite3_prepare_v2	.\inc\sqlite3ext.h	412;"	d
sqlite3_profile	.\inc\sqlite3ext.h	368;"	d
sqlite3_progress_handler	.\inc\sqlite3ext.h	369;"	d
sqlite3_randomness	.\inc\sqlite3ext.h	443;"	d
sqlite3_realloc	.\inc\sqlite3ext.h	370;"	d
sqlite3_realloc64	.\inc\sqlite3ext.h	496;"	d
sqlite3_release_memory	.\inc\sqlite3ext.h	431;"	d
sqlite3_reset	.\inc\sqlite3ext.h	371;"	d
sqlite3_reset_auto_extension	.\inc\sqlite3ext.h	497;"	d
sqlite3_result_blob	.\inc\sqlite3ext.h	372;"	d
sqlite3_result_blob64	.\inc\sqlite3ext.h	498;"	d
sqlite3_result_double	.\inc\sqlite3ext.h	373;"	d
sqlite3_result_error	.\inc\sqlite3ext.h	374;"	d
sqlite3_result_error16	.\inc\sqlite3ext.h	375;"	d
sqlite3_result_error_code	.\inc\sqlite3ext.h	441;"	d
sqlite3_result_error_nomem	.\inc\sqlite3ext.h	432;"	d
sqlite3_result_error_toobig	.\inc\sqlite3ext.h	433;"	d
sqlite3_result_int	.\inc\sqlite3ext.h	376;"	d
sqlite3_result_int64	.\inc\sqlite3ext.h	377;"	d
sqlite3_result_null	.\inc\sqlite3ext.h	378;"	d
sqlite3_result_text	.\inc\sqlite3ext.h	379;"	d
sqlite3_result_text16	.\inc\sqlite3ext.h	380;"	d
sqlite3_result_text16be	.\inc\sqlite3ext.h	381;"	d
sqlite3_result_text16le	.\inc\sqlite3ext.h	382;"	d
sqlite3_result_text64	.\inc\sqlite3ext.h	499;"	d
sqlite3_result_value	.\inc\sqlite3ext.h	383;"	d
sqlite3_result_zeroblob	.\inc\sqlite3ext.h	440;"	d
sqlite3_rollback_hook	.\inc\sqlite3ext.h	384;"	d
sqlite3_rtree_dbl	.\inc\sqlite3.h	/^  typedef double sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	.\inc\sqlite3.h	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_geometry	.\inc\sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	.\inc\sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_query_info	.\inc\sqlite3.h	/^struct sqlite3_rtree_query_info {$/;"	s
sqlite3_rtree_query_info	.\inc\sqlite3.h	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info
sqlite3_set_authorizer	.\inc\sqlite3ext.h	385;"	d
sqlite3_set_auxdata	.\inc\sqlite3ext.h	386;"	d
sqlite3_sleep	.\inc\sqlite3ext.h	434;"	d
sqlite3_snprintf	.\inc\sqlite3ext.h	387;"	d
sqlite3_soft_heap_limit	.\inc\sqlite3ext.h	435;"	d
sqlite3_soft_heap_limit64	.\inc\sqlite3ext.h	463;"	d
sqlite3_sourceid	.\inc\sqlite3ext.h	464;"	d
sqlite3_sql	.\inc\sqlite3ext.h	448;"	d
sqlite3_status	.\inc\sqlite3ext.h	449;"	d
sqlite3_step	.\inc\sqlite3ext.h	388;"	d
sqlite3_stmt	.\inc\sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt_busy	.\inc\sqlite3ext.h	480;"	d
sqlite3_stmt_readonly	.\inc\sqlite3ext.h	481;"	d
sqlite3_stmt_status	.\inc\sqlite3ext.h	465;"	d
sqlite3_strglob	.\inc\sqlite3ext.h	500;"	d
sqlite3_stricmp	.\inc\sqlite3ext.h	482;"	d
sqlite3_strnicmp	.\inc\sqlite3ext.h	466;"	d
sqlite3_syscall_ptr	.\inc\sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_table_column_metadata	.\inc\sqlite3ext.h	389;"	d
sqlite3_temp_directory	.\inc\sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_test_control	.\inc\sqlite3ext.h	442;"	d
sqlite3_thread_cleanup	.\inc\sqlite3ext.h	390;"	d
sqlite3_threadsafe	.\inc\sqlite3ext.h	439;"	d
sqlite3_total_changes	.\inc\sqlite3ext.h	391;"	d
sqlite3_trace	.\inc\sqlite3ext.h	392;"	d
sqlite3_transfer_bindings	.\inc\sqlite3ext.h	394;"	d
sqlite3_uint64	.\inc\sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_unlock_notify	.\inc\sqlite3ext.h	467;"	d
sqlite3_update_hook	.\inc\sqlite3ext.h	396;"	d
sqlite3_uri_boolean	.\inc\sqlite3ext.h	483;"	d
sqlite3_uri_int64	.\inc\sqlite3ext.h	484;"	d
sqlite3_uri_parameter	.\inc\sqlite3ext.h	485;"	d
sqlite3_uri_vsnprintf	.\inc\sqlite3ext.h	486;"	d
sqlite3_user_data	.\inc\sqlite3ext.h	397;"	d
sqlite3_value	.\inc\sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_value_blob	.\inc\sqlite3ext.h	398;"	d
sqlite3_value_bytes	.\inc\sqlite3ext.h	399;"	d
sqlite3_value_bytes16	.\inc\sqlite3ext.h	400;"	d
sqlite3_value_double	.\inc\sqlite3ext.h	401;"	d
sqlite3_value_int	.\inc\sqlite3ext.h	402;"	d
sqlite3_value_int64	.\inc\sqlite3ext.h	403;"	d
sqlite3_value_numeric_type	.\inc\sqlite3ext.h	404;"	d
sqlite3_value_text	.\inc\sqlite3ext.h	405;"	d
sqlite3_value_text16	.\inc\sqlite3ext.h	406;"	d
sqlite3_value_text16be	.\inc\sqlite3ext.h	407;"	d
sqlite3_value_text16le	.\inc\sqlite3ext.h	408;"	d
sqlite3_value_type	.\inc\sqlite3ext.h	409;"	d
sqlite3_version	.\inc\sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	.\inc\sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	.\inc\sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs_find	.\inc\sqlite3ext.h	436;"	d
sqlite3_vfs_register	.\inc\sqlite3ext.h	437;"	d
sqlite3_vfs_unregister	.\inc\sqlite3ext.h	438;"	d
sqlite3_vmprintf	.\inc\sqlite3ext.h	410;"	d
sqlite3_vtab	.\inc\sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	.\inc\sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab_config	.\inc\sqlite3ext.h	472;"	d
sqlite3_vtab_cursor	.\inc\sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	.\inc\sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_on_conflict	.\inc\sqlite3ext.h	473;"	d
sqlite3_wal_autocheckpoint	.\inc\sqlite3ext.h	468;"	d
sqlite3_wal_checkpoint	.\inc\sqlite3ext.h	469;"	d
sqlite3_wal_checkpoint_v2	.\inc\sqlite3ext.h	487;"	d
sqlite3_wal_hook	.\inc\sqlite3ext.h	470;"	d
sqlite_int64	.\inc\sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	.\inc\sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	.\inc\sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_uint64	.\inc\sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	.\inc\sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	.\inc\sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
start_connection	.\src\client\client_util.c	/^int start_connection(struct sock_client *client){$/;"	f
state	.\inc\zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
state	.\lib\raft\raft_private.h	/^    int state;$/;"	m	struct:__anon16
state	.\src\common\md5.h	/^  	UINT4 state[4];				 	\/* state (ABCD) *\/$/;"	m	struct:__anon18
state	.\src\tools\lzma\LzmaDec.h	/^  unsigned state;$/;"	m	struct:__anon24
state	.\src\tools\lzma\LzmaEnc.c	/^  CState state;$/;"	m	struct:__anon27	file:
state	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 state;$/;"	m	struct:__anon31	file:
state	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 state;$/;"	m	struct:__anon32	file:
status	.\inc\sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
step	.\inc\sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_busy	.\inc\sqlite3ext.h	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_readonly	.\inc\sqlite3ext.h	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_status	.\inc\sqlite3ext.h	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
stream	.\src\tools\lzma\LzFind.h	/^  ISeqInStream *stream;$/;"	m	struct:_CMatchFinder
streamEndWasReached	.\src\tools\lzma\LzFind.h	/^  int streamEndWasReached;$/;"	m	struct:_CMatchFinder
streamPos	.\src\tools\lzma\LzFind.h	/^  UInt32 streamPos;$/;"	m	struct:_CMatchFinder
strglob	.\inc\sqlite3ext.h	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
stricmp	.\inc\sqlite3ext.h	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
strnicmp	.\inc\sqlite3ext.h	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
success	.\lib\raft\raft.h	/^    int success;$/;"	m	struct:__anon11
system_conf	.\src\common\config.h	/^typedef struct system_conf$/;"	s
system_conf_t	.\src\common\config.h	/^}system_conf_t;$/;"	t	typeref:struct:system_conf
system_net_conf	.\src\common\config.h	/^typedef struct system_net_conf{$/;"	s
system_net_conf_t	.\src\common\config.h	/^}system_net_conf_t;$/;"	t	typeref:struct:system_net_conf
szOsFile	.\inc\sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
tableSize	.\src\tools\lzma\LzmaEnc.c	/^  UInt32 tableSize;$/;"	m	struct:__anon29	file:
table_column_metadata	.\inc\sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
tail	.\lib\linked-list-queue\linked_list_queue.h	/^    llqnode_t *head, *tail;$/;"	m	struct:__anon2
tail	.\src\thread\threadpool.h	/^    struct job *tail;                 \/\/指向job的尾指针$/;"	m	struct:threadpool	typeref:struct:threadpool::job
tempBuf	.\src\tools\lzma\LzmaDec.h	/^  Byte tempBuf[LZMA_REQUIRED_INPUT_MAX];$/;"	m	struct:__anon24
tempBufSize	.\src\tools\lzma\LzmaDec.h	/^  unsigned tempBufSize;$/;"	m	struct:__anon24
term	.\lib\raft\raft.h	/^    int term;$/;"	m	struct:__anon10
term	.\lib\raft\raft.h	/^    int term;$/;"	m	struct:__anon11
term	.\lib\raft\raft.h	/^    int term;$/;"	m	struct:__anon7
term	.\lib\raft\raft.h	/^    int term;$/;"	m	struct:__anon8
term	.\lib\raft\raft.h	/^    int term;$/;"	m	struct:__anon9
term	.\lib\raft\raft.h	/^    unsigned int term;$/;"	m	struct:__anon6
terminate	.\lib\error\error_functions.c	/^terminate(Boolean useExit3)$/;"	f	file:
test_client	.\test\test.h	/^int test_client(int argc,char *argv[]){$/;"	f
test_control	.\inc\sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines
test_hashtable	.\lib\hashtable\test.c	/^int test_hashtable(){$/;"	f
text	.\inc\zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
thread_cleanup	.\inc\sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines
thread_num	.\src\thread\threadpool.h	/^    int thread_num;                   \/\/线程池中开启线程的个数$/;"	m	struct:threadpool
threadpool	.\src\thread\threadpool.h	/^struct threadpool$/;"	s
threadpool_add_job	.\src\thread\threadpool.c	/^int threadpool_add_job(struct threadpool* pool, void* (*callback_function)(void *arg), void *arg)$/;"	f
threadpool_destroy	.\src\thread\threadpool.c	/^int threadpool_destroy(struct threadpool *pool)$/;"	f
threadpool_function	.\src\thread\threadpool.c	/^void* threadpool_function(void* arg)$/;"	f
threadpool_init	.\src\thread\threadpool.c	/^struct threadpool* threadpool_init(int thread_num, int queue_max_num)$/;"	f
time	.\inc\zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
timeout_elapsed	.\lib\raft\raft_private.h	/^    int timeout_elapsed;$/;"	m	struct:__anon16
timer	.\lib\timer_list.h	/^struct timer {$/;"	s
timer_expiry	.\lib\timer_list.h	/^typedef int timer_expiry(timer_id id, void *user_data, int len);$/;"	t
timer_id	.\lib\timer_list.h	/^typedef int timer_id;$/;"	t
timer_list	.\lib\timer_list.h	/^static struct timer_list timer_list;$/;"	v	typeref:struct:timer_list
timer_list	.\lib\timer_list.h	/^struct timer_list {$/;"	s
topic	.\src\common\connect.h	/^    char *topic;					\/\/注册的主题$/;"	m	struct:conn_node
topic	.\src\server\message.h	/^	char topic[255];$/;"	m	struct:message
topic	.\src\server\socket_pkg.h	/^	char 			   topic[255];   \/\/topic$/;"	m	struct:socket_pkg
topic	.\src\server\topic_fd_map.h	/^	char *topic;$/;"	m	struct:list_entry
total_changes	.\inc\sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
total_in	.\inc\zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	.\inc\zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
tpool	.\src\server\server_util.h	/^    struct threadpool *tpool;		 \/\/线程池$/;"	m	struct:server	typeref:struct:server::threadpool
trace	.\inc\sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines
transfer_bindings	.\inc\sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
trim	.\lib\hashtable\str.c	/^char * trim(char *c,int mode){$/;"	f
ttt	.\src\tools\lzma\LzmaEnc.c	/^static int ttt = 0;$/;"	v	file:
type	.\lib\raft\raft.h	/^    int type;$/;"	m	struct:__anon6
uInt	.\inc\zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	.\inc\zconf.h	51;"	d
uIntf	.\inc\zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	.\inc\zconf.h	56;"	d
uLong	.\inc\zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	.\inc\zconf.h	52;"	d
uLongf	.\inc\zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	.\inc\zconf.h	57;"	d
udata	.\lib\raft\raft_node.c	/^    void* udata;$/;"	m	struct:__anon15	file:
udata	.\lib\raft\raft_private.h	/^    void* udata;$/;"	m	struct:__anon16
udata_address	.\lib\raft\raft.h	/^    void* udata_address;$/;"	m	struct:__anon13
uint	.\lib\hashtable\hashtable.h	/^typedef unsigned int  uint;$/;"	t
ulong	.\lib\hashtable\hashtable.h	/^typedef unsigned long ulong;$/;"	t
uncompress	.\inc\zconf.h	40;"	d
unlock_notify	.\inc\sqlite3ext.h	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines
update_hook	.\inc\sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines
uri_boolean	.\inc\sqlite3ext.h	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
uri_int64	.\inc\sqlite3ext.h	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
uri_parameter	.\inc\sqlite3ext.h	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
usable	.\inc\sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
usageErr	.\lib\error\error_functions.c	/^void usageErr(const char *format,...)$/;"	f
user_data	.\inc\sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
user_data	.\lib\timer_list.h	/^	void *user_data;		\/**< callback arg	*\/$/;"	m	struct:timer
value	.\lib\hashtable\hashtable.h	/^    char value[VLEN]; \/* store a var of builtin type in a 8bit buffer *\/$/;"	m	struct:_bucket
value	.\lib\hashtable\hashtable.h	42;"	d
value	.\lib\timer_list.h	/^	struct itimerval value;					\/**< our internal timer value *\/$/;"	m	struct:timer_list	typeref:struct:timer_list::itimerval
valueType	.\lib\hashtable\hashtable.h	/^    char valueType[TNLEN];$/;"	m	struct:_hashtable
value_blob	.\inc\sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes	.\inc\sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes16	.\inc\sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_double	.\inc\sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int	.\inc\sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int64	.\inc\sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_numeric_type	.\inc\sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text	.\inc\sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16	.\inc\sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16be	.\inc\sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16le	.\inc\sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_type	.\inc\sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
version	.\src\server\socket_pkg.h	/^	uint8_t            version;      \/\/协议版本$/;"	m	struct:socket_pkg
vfs_find	.\inc\sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines
vfs_register	.\inc\sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines
vfs_unregister	.\inc\sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines
vlog_t	.\src\tools\log_utils.h	/^typedef void (*vlog_t)(int, const char *, va_list);$/;"	t	namespace:phxrpc
vmprintf	.\inc\sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines
voidp	.\inc\zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	.\inc\zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	.\inc\zconf.h	59;"	d
voidpc	.\inc\zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	.\inc\zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpf	.\inc\zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	.\inc\zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	.\inc\zconf.h	58;"	d
vote_granted	.\lib\raft\raft.h	/^    int vote_granted;$/;"	m	struct:__anon9
voted_for	.\lib\raft\raft_private.h	/^    int voted_for;$/;"	m	struct:__anon16
voting_cfg_change_log_idx	.\lib\raft\raft_private.h	/^    int voting_cfg_change_log_idx;$/;"	m	struct:__anon16
vsnprintf	.\inc\sqlite3ext.h	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vtab_config	.\inc\sqlite3ext.h	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines
vtab_on_conflict	.\inc\sqlite3ext.h	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
wal_autocheckpoint	.\inc\sqlite3ext.h	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint	.\inc\sqlite3ext.h	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint_v2	.\inc\sqlite3ext.h	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines
wal_hook	.\inc\sqlite3ext.h	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines
writeEndMark	.\src\tools\lzma\LzmaEnc.c	/^  Bool writeEndMark;$/;"	m	struct:__anon32	file:
writeEndMark	.\src\tools\lzma\LzmaEnc.h	/^  unsigned writeEndMark;  \/* 0 - do not write EOPM, 1 - write EOPM, default = 0 *\/$/;"	m	struct:_CLzmaEncProps
xAccess	.\inc\sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xBegin	.\inc\sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBestIndex	.\inc\sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xCachesize	.\inc\sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCachesize	.\inc\sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2
xCheckReservedLock	.\inc\sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xClose	.\inc\sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	.\inc\sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xColumn	.\inc\sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xCommit	.\inc\sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xConnect	.\inc\sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	.\inc\sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	.\inc\sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCreate	.\inc\sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2
xCurrentTime	.\inc\sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	.\inc\sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xDelUser	.\inc\sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelUser	.\inc\sqlite3.h	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info
xDelete	.\inc\sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDestroy	.\inc\sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	.\inc\sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDestroy	.\inc\sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xDeviceCharacteristics	.\inc\sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDisconnect	.\inc\sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDlClose	.\inc\sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlError	.\inc\sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlOpen	.\inc\sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xEof	.\inc\sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xFetch	.\inc\sqlite3.h	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods
xFetch	.\inc\sqlite3.h	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2
xFetch	.\inc\sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFileControl	.\inc\sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileSize	.\inc\sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFilter	.\inc\sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFindFunction	.\inc\sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFree	.\inc\sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFullPathname	.\inc\sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xGetLastError	.\inc\sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	.\inc\sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xInit	.\inc\sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	.\inc\sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xInit	.\inc\sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xLock	.\inc\sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xMalloc	.\inc\sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMutexAlloc	.\inc\sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	.\inc\sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	.\inc\sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	.\inc\sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	.\inc\sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	.\inc\sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	.\inc\sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	.\inc\sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	.\inc\sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xNext	.\inc\sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNextSystemCall	.\inc\sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xOpen	.\inc\sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	.\inc\sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xPagecount	.\inc\sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xPagecount	.\inc\sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xRandomness	.\inc\sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRead	.\inc\sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRealloc	.\inc\sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xRekey	.\inc\sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*, $/;"	m	struct:sqlite3_pcache_methods2
xRekey	.\inc\sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRelease	.\inc\sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRename	.\inc\sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRollback	.\inc\sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollbackTo	.\inc\sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRoundup	.\inc\sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRowid	.\inc\sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xSavepoint	.\inc\sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSectorSize	.\inc\sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSetSystemCall	.\inc\sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xShmBarrier	.\inc\sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmLock	.\inc\sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmMap	.\inc\sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	.\inc\sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShrink	.\inc\sqlite3.h	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xShutdown	.\inc\sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	.\inc\sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xShutdown	.\inc\sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xSize	.\inc\sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSleep	.\inc\sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xSync	.\inc\sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	.\inc\sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xTruncate	.\inc\sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	.\inc\sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xTruncate	.\inc\sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2
xUnfetch	.\inc\sqlite3.h	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods
xUnlock	.\inc\sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnpin	.\inc\sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2
xUnpin	.\inc\sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUpdate	.\inc\sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xWrite	.\inc\sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xflags	.\inc\zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
xthreadsafe	.\inc\sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines
zErrMsg	.\inc\sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zError	.\inc\zconf.h	44;"	d
zName	.\inc\sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
z_off_t	.\inc\zconf.h	301;"	d
z_stream	.\inc\zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	.\inc\zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	.\inc\zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
zalloc	.\inc\zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zfree	.\inc\zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zlib_version	.\inc\zlib.h	207;"	d
~Config	.\src\tools\config.cpp	/^Config :: ~Config() {$/;"	f	class:phxrpc::Config
~OptMap	.\src\tools\opt_map.cpp	/^OptMap::~OptMap() {$/;"	f	class:phxrpc::OptMap
